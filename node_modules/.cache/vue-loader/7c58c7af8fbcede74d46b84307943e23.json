{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/components/extra-components/clipboard/ClipboardDirective.vue?vue&type=template&id=6eeca88f&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/components/extra-components/clipboard/ClipboardDirective.vue","mtime":1610509510839},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1610344923547},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"vx-card\",\n    {\n      attrs: {\n        title: \"Using Directive\",\n        subtitle: \"Use directive on button to copy text\",\n        \"code-toggler\": \"\"\n      }\n    },\n    [\n      _c(\"vs-input\", {\n        staticClass: \"inline-flex mb-2 mr-2\",\n        model: {\n          value: _vm.text,\n          callback: function($$v) {\n            _vm.text = $$v\n          },\n          expression: \"text\"\n        }\n      }),\n      _c(\n        \"vs-button\",\n        {\n          directives: [\n            {\n              name: \"clipboard\",\n              rawName: \"v-clipboard:copy\",\n              value: _vm.text,\n              expression: \"text\",\n              arg: \"copy\"\n            },\n            {\n              name: \"clipboard\",\n              rawName: \"v-clipboard:success\",\n              value: _vm.onCopy,\n              expression: \"onCopy\",\n              arg: \"success\"\n            },\n            {\n              name: \"clipboard\",\n              rawName: \"v-clipboard:error\",\n              value: _vm.onError,\n              expression: \"onError\",\n              arg: \"error\"\n            }\n          ]\n        },\n        [_vm._v(\"\\n      Copy\\n    \")]\n      ),\n      _c(\"template\", { slot: \"codeContainer\" }, [\n        _vm._v(\n          \"\\n<template>\\n    <vs-input v-model=\\\"text\\\" class=\\\"inline-flex\\\" />\\n    <vs-button\\n        v-clipboard:copy=\\\"text\\\"\\n        v-clipboard:success=\\\"onCopy\\\"\\n        v-clipboard:error=\\\"onError\\\">\\n        Copy\\n    </vs-button>\\n</template>\\n\\n<script>\\nexport default {\\n    data() {\\n        return {\\n            text: 'Copy Me!',\\n        }\\n    },\\n    methods: {\\n        onCopy() {\\n            this.$vs.notify({\\n                title: 'Success',\\n                text: 'Text copied successfully',\\n                color: 'success',\\n                iconPack: 'feather',\\n                position: 'top-center',\\n                icon: 'icon-check-circle'\\n            })\\n        },\\n        onError() {\\n            this.$vs.notify({\\n                title: 'Failed',\\n                text: 'Error in copying text',\\n                color: 'danger',\\n                iconPack: 'feather',\\n                position: 'top-center',\\n                icon: 'icon-alert-circle'\\n            })\\n        },\\n    }\\n}\\n</script>\\n    \"\n        )\n      ])\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}