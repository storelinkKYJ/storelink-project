{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/pages/login/LoginJWT.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/pages/login/LoginJWT.vue","mtime":1610509510879},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/babel-loader/lib/index.js","mtime":1610344922456},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data () {\n    return {\n      email: 'admin@admin.com',\n      password: 'adminadmin',\n      checkbox_remember_me: false\n    }\n  },\n  computed: {\n    validateForm () {\n      return !this.errors.any() && this.email !== '' && this.password !== ''\n    }\n  },\n  methods: {\n    checkLogin () {\n      // If user is already logged in notify\n      if (this.$store.state.auth.isUserLoggedIn()) {\n\n        // Close animation if passed as payload\n        // this.$vs.loading.close()\n\n        this.$vs.notify({\n          title: 'Login Attempt',\n          text: 'You are already logged in!',\n          iconPack: 'feather',\n          icon: 'icon-alert-circle',\n          color: 'warning'\n        })\n\n        return false\n      }\n      return true\n    },\n    loginJWT () {\n\n      if (!this.checkLogin()) return\n\n      // Loading\n      this.$vs.loading()\n\n      const payload = {\n        checkbox_remember_me: this.checkbox_remember_me,\n        userDetails: {\n          email: this.email,\n          password: this.password\n        }\n      }\n\n      this.$store.dispatch('auth/loginJWT', payload)\n        .then(() => { this.$vs.loading.close() })\n        .catch(error => {\n          this.$vs.loading.close()\n          this.$vs.notify({\n            title: 'Error',\n            text: error.message,\n            iconPack: 'feather',\n            icon: 'icon-alert-circle',\n            color: 'danger'\n          })\n        })\n    },\n    registerUser () {\n      if (!this.checkLogin()) return\n      this.$router.push('/pages/register').catch(() => {})\n    }\n  }\n}\n\n",{"version":3,"sources":["LoginJWT.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LoginJWT.vue","sourceRoot":"src/views/pages/login","sourcesContent":["<template>\n  <div>\n    <vs-input\n        v-validate=\"'required|email|min:3'\"\n        data-vv-validate-on=\"blur\"\n        name=\"email\"\n        icon-no-border\n        icon=\"icon icon-user\"\n        icon-pack=\"feather\"\n        label-placeholder=\"Email\"\n        v-model=\"email\"\n        class=\"w-full\"/>\n    <span class=\"text-danger text-sm\">{{ errors.first('email') }}</span>\n\n    <vs-input\n        data-vv-validate-on=\"blur\"\n        v-validate=\"'required|min:6|max:10'\"\n        type=\"password\"\n        name=\"password\"\n        icon-no-border\n        icon=\"icon icon-lock\"\n        icon-pack=\"feather\"\n        label-placeholder=\"Password\"\n        v-model=\"password\"\n        class=\"w-full mt-6\" />\n    <span class=\"text-danger text-sm\">{{ errors.first('password') }}</span>\n\n    <div class=\"flex flex-wrap justify-between my-5\">\n        <vs-checkbox v-model=\"checkbox_remember_me\" class=\"mb-3\">Remember Me</vs-checkbox>\n        <router-link to=\"/pages/forgot-password\">Forgot Password?</router-link>\n    </div>\n    <div class=\"flex flex-wrap justify-between mb-3\">\n      <vs-button  type=\"border\" @click=\"registerUser\">Register</vs-button>\n      <vs-button :disabled=\"!validateForm\" @click=\"loginJWT\">Login</vs-button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      email: 'admin@admin.com',\n      password: 'adminadmin',\n      checkbox_remember_me: false\n    }\n  },\n  computed: {\n    validateForm () {\n      return !this.errors.any() && this.email !== '' && this.password !== ''\n    }\n  },\n  methods: {\n    checkLogin () {\n      // If user is already logged in notify\n      if (this.$store.state.auth.isUserLoggedIn()) {\n\n        // Close animation if passed as payload\n        // this.$vs.loading.close()\n\n        this.$vs.notify({\n          title: 'Login Attempt',\n          text: 'You are already logged in!',\n          iconPack: 'feather',\n          icon: 'icon-alert-circle',\n          color: 'warning'\n        })\n\n        return false\n      }\n      return true\n    },\n    loginJWT () {\n\n      if (!this.checkLogin()) return\n\n      // Loading\n      this.$vs.loading()\n\n      const payload = {\n        checkbox_remember_me: this.checkbox_remember_me,\n        userDetails: {\n          email: this.email,\n          password: this.password\n        }\n      }\n\n      this.$store.dispatch('auth/loginJWT', payload)\n        .then(() => { this.$vs.loading.close() })\n        .catch(error => {\n          this.$vs.loading.close()\n          this.$vs.notify({\n            title: 'Error',\n            text: error.message,\n            iconPack: 'feather',\n            icon: 'icon-alert-circle',\n            color: 'danger'\n          })\n        })\n    },\n    registerUser () {\n      if (!this.checkLogin()) return\n      this.$router.push('/pages/register').catch(() => {})\n    }\n  }\n}\n\n</script>\n\n"]}]}