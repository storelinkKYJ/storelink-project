{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink-project/src/views/forms/form-validation/FormValidationMultipleRules.vue?vue&type=template&id=6a5694d3&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink-project/src/views/forms/form-validation/FormValidationMultipleRules.vue","mtime":1610509510876},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1610344923547},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"vx-card\",\n    { attrs: { title: \"Validating multiple rules\", \"code-toggler\": \"\" } },\n    [\n      _c(\"p\", [\n        _vm._v(\"You can validate multiple rules using \"),\n        _c(\"code\", [_vm._v(\"|\")]),\n        _vm._v(\". You can find more validation rules \"),\n        _c(\n          \"a\",\n          {\n            attrs: {\n              href: \"https://baianat.github.io/vee-validate/guide/rules.html\",\n              target: \"_blank\",\n              rel: \"nofollow\"\n            }\n          },\n          [_vm._v(\"here\")]\n        )\n      ]),\n      _c(\"div\", { staticClass: \"mt-5\" }, [\n        _c(\n          \"form\",\n          [\n            _c(\"div\", { staticClass: \"vx-row lg:w-1/2 w-full\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"vx-col w-full\" },\n                [\n                  _c(\"vs-input\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: \"required|alpha\",\n                        expression: \"'required|alpha'\"\n                      }\n                    ],\n                    staticClass: \"mt-5 w-full\",\n                    attrs: { placeholder: \"Your Name\", name: \"name\" },\n                    model: {\n                      value: _vm.name,\n                      callback: function($$v) {\n                        _vm.name = $$v\n                      },\n                      expression: \"name\"\n                    }\n                  }),\n                  _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.errors.has(\"name\"),\n                          expression: \"errors.has('name')\"\n                        }\n                      ],\n                      staticClass: \"text-danger text-sm\"\n                    },\n                    [_vm._v(_vm._s(_vm.errors.first(\"name\")))]\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"div\",\n                { staticClass: \"vx-col lg:w-1/2 w-full\" },\n                [\n                  _c(\"vs-input\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: \"required|alpha_dash\",\n                        expression: \"'required|alpha_dash'\"\n                      }\n                    ],\n                    staticClass: \"mt-5 w-full\",\n                    attrs: { placeholder: \"Your Username\", name: \"username\" },\n                    model: {\n                      value: _vm.username,\n                      callback: function($$v) {\n                        _vm.username = $$v\n                      },\n                      expression: \"username\"\n                    }\n                  }),\n                  _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.errors.has(\"username\"),\n                          expression: \"errors.has('username')\"\n                        }\n                      ],\n                      staticClass: \"text-danger text-sm\"\n                    },\n                    [_vm._v(_vm._s(_vm.errors.first(\"username\")))]\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"div\",\n                { staticClass: \"vx-col lg:w-1/2 w-full\" },\n                [\n                  _c(\"vs-input\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: \"required|email\",\n                        expression: \"'required|email'\"\n                      }\n                    ],\n                    staticClass: \"mt-5 w-full\",\n                    attrs: { placeholder: \"Your Email\", name: \"email\" },\n                    model: {\n                      value: _vm.email,\n                      callback: function($$v) {\n                        _vm.email = $$v\n                      },\n                      expression: \"email\"\n                    }\n                  }),\n                  _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.errors.has(\"email\"),\n                          expression: \"errors.has('email')\"\n                        }\n                      ],\n                      staticClass: \"text-danger text-sm\"\n                    },\n                    [_vm._v(_vm._s(_vm.errors.first(\"email\")))]\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"div\",\n                { staticClass: \"vx-col lg:w-1/2 w-full\" },\n                [\n                  _c(\"vs-input\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: \"required|min:6|max:10\",\n                        expression: \"'required|min:6|max:10'\"\n                      }\n                    ],\n                    ref: \"password\",\n                    staticClass: \"mt-5 w-full\",\n                    attrs: {\n                      type: \"password\",\n                      placeholder: \"Your Password\",\n                      name: \"password\"\n                    },\n                    model: {\n                      value: _vm.password,\n                      callback: function($$v) {\n                        _vm.password = $$v\n                      },\n                      expression: \"password\"\n                    }\n                  }),\n                  _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.errors.has(\"password\"),\n                          expression: \"errors.has('password')\"\n                        }\n                      ],\n                      staticClass: \"text-danger text-sm\"\n                    },\n                    [_vm._v(_vm._s(_vm.errors.first(\"password\")))]\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"div\",\n                { staticClass: \"vx-col lg:w-1/2 w-full\" },\n                [\n                  _c(\"vs-input\", {\n                    directives: [\n                      {\n                        name: \"validate\",\n                        rawName: \"v-validate\",\n                        value: \"required|min:6|max:10|confirmed:password\",\n                        expression: \"'required|min:6|max:10|confirmed:password'\"\n                      }\n                    ],\n                    staticClass: \"mt-5 w-full\",\n                    attrs: {\n                      type: \"password\",\n                      \"data-vv-as\": \"password\",\n                      placeholder: \"Confirm Password\",\n                      name: \"confirm_password\"\n                    },\n                    model: {\n                      value: _vm.confirm_password,\n                      callback: function($$v) {\n                        _vm.confirm_password = $$v\n                      },\n                      expression: \"confirm_password\"\n                    }\n                  }),\n                  _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.errors.has(\"confirm_password\"),\n                          expression: \"errors.has('confirm_password')\"\n                        }\n                      ],\n                      staticClass: \"text-danger text-sm\"\n                    },\n                    [_vm._v(_vm._s(_vm.errors.first(\"confirm_password\")))]\n                  )\n                ],\n                1\n              )\n            ]),\n            _c(\n              \"vs-button\",\n              {\n                staticClass: \"mt-5 block\",\n                attrs: { type: \"filled\" },\n                on: {\n                  click: function($event) {\n                    $event.preventDefault()\n                    return _vm.submitForm($event)\n                  }\n                }\n              },\n              [_vm._v(\"Submit\")]\n            )\n          ],\n          1\n        )\n      ]),\n      _c(\"template\", { slot: \"codeContainer\" }, [\n        _vm._v(\n          '\\n<template>\\n  <form>\\n    <div class=\"vx-row w-1/2\">\\n\\n      <div class=\"vx-col w-full\">\\n        <vs-input size=\"large\" v-validate=\"\\'required|alpha\\'\" placeholder=\"Your Name\" name=\"name\" v-model=\"name\" class=\"mt-5 w-full\" />\\n        <span class=\"text-danger text-sm\"  v-show=\"errors.has(\\'name\\')\">' +\n            _vm._s(\"{{ errors.first('name') }}\") +\n            '</span>\\n      </div>\\n\\n      <div class=\"vx-col w-1/2\">\\n        <vs-input size=\"large\" v-validate=\"\\'required|alpha_dash\\'\" placeholder=\"Your Username\" name=\"username\" v-model=\"username\" class=\"mt-5 w-full\" />\\n        <span class=\"text-danger text-sm\" v-show=\"errors.has(\\'username\\')\">' +\n            _vm._s(\"{{ errors.first('username') }}\") +\n            '</span>\\n      </div>\\n\\n      <div class=\"vx-col w-1/2\">\\n        <vs-input size=\"large\" v-validate=\"\\'required|email\\'\" placeholder=\"Your Email\" name=\"email\" v-model=\"email\" class=\"mt-5 w-full\" />\\n        <span class=\"text-danger text-sm\" v-show=\"errors.has(\\'email\\')\">' +\n            _vm._s(\"{{ errors.first('email') }}\") +\n            '</span>\\n      </div>\\n\\n      <div class=\"vx-col w-1/2\">\\n        <vs-input type=\"password\" size=\"large\" v-validate=\"\\'required|min:6|max:10\\'\" ref=\"password\" placeholder=\"Your Password\" name=\"password\" v-model=\"password\" class=\"mt-5 w-full\" />\\n        <span class=\"text-danger text-sm\" v-show=\"errors.has(\\'password\\')\">' +\n            _vm._s(\"{{ errors.first('password') }}\") +\n            '</span>\\n      </div>\\n\\n      <div class=\"vx-col w-1/2\">\\n        <vs-input type=\"password\" size=\"large\" v-validate=\"\\'required|min:6|max:10|confirmed:password\\'\" data-vv-as=\"password\" placeholder=\"Confirm Password\" name=\"confirm_password\" v-model=\"confirm_password\" class=\"mt-5 w-full\" />\\n        <span class=\"text-danger text-sm\" v-show=\"errors.has(\\'confirm_password\\')\">' +\n            _vm._s(\"{{ errors.first('confirm_password') }}\") +\n            '</span>\\n      </div>\\n    </div>\\n\\n    <vs-button type=\"filled\" @click.prevent=\"submitForm\" class=\"mt-5 block\">Submit</vs-button>\\n  </form>\\n</template>\\n\\n<script>\\nexport default {\\n  data() {\\n    return {\\n      name: \"\",\\n      username: \"\",\\n      email: \"\",\\n      password: \"\",\\n      confirm_password: \"\",\\n    }\\n  },\\n  methods: {\\n    submitForm() {\\n      this.$validator.validateAll().then(result => {\\n        if (result) {\\n          // if form have no errors\\n          alert(\"form submitted!\");\\n        } else {\\n          // form have errors\\n        }\\n      })\\n    }\\n  },\\n}\\n</script>\\n        '\n        )\n      ])\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}