{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink-project/src/views/DashboardECommerce.vue?vue&type=style&index=0&id=59802034&scoped=true&lang=css&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink-project/src/views/DashboardECommerce.vue","mtime":1611124662947},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/css-loader/index.js","mtime":1610346344703},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1610344923547},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/postcss-loader/src/index.js","mtime":1607839467577},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.editable-row-operations a {\n  margin-right: 8px;\n}\n",{"version":3,"sources":["DashboardECommerce.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4LA;AACA;AACA","file":"DashboardECommerce.vue","sourceRoot":"src/views","sourcesContent":["<!-- =========================================================================================\n    File Name: DashboardEcommerce.vue\n    Description: Dashboard - Ecommerce\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n<template>\n  <a-table :columns=\"columns\" :data-source=\"data\" bordered>\n    <template\n      v-for=\"col in [\n        'userName',\n        'userPhone',\n        'email',\n        'init',\n        'eventdttm',\n        'uid',\n      ]\"\n      :slot=\"col\"\n      slot-scope=\"text, record\"\n    >\n      <div :key=\"col\">\n        <a-input\n          v-if=\"record.editable\"\n          style=\"margin: -5px 0\"\n          :value=\"text\"\n          @change=\"(e) => handleChange(e.target.value, record.key, col)\"\n        />\n        <template v-else>\n          {{ text }}\n        </template>\n      </div>\n    </template>\n    <template slot=\"operation\" slot-scope=\"text, record\">\n      <div class=\"editable-row-operations\">\n        <span v-if=\"record.editable\">\n          <a @click=\"() => save(record.key)\">Save</a>\n\n          <a :disabled=\"editingKey == ''\" @click=\"() => cancel(record.key)\"\n            >delete</a\n          >\n        </span>\n        <span v-else>\n          <a :disabled=\"editingKey !== ''\" @click=\"() => edit(record.key)\"\n            >Edit</a\n          >\n        </span>\n      </div>\n    </template>\n  </a-table>\n</template>\n\n<script>\nimport firebase from \"firebase\";\nconst data = [];\nconst columns = [\n  {\n    title: \"userName\",\n    dataIndex: \"userName\",\n    width: \"25%\",\n    scopedSlots: { customRender: \"name\" },\n  },\n  {\n    title: \"userPhone\",\n    dataIndex: \"userPhone\",\n    width: \"15%\",\n    scopedSlots: { customRender: \"userPhone\" },\n  },\n  {\n    title: \"email\",\n    dataIndex: \"email\",\n    width: \"40%\",\n    scopedSlots: { customRender: \"email\" },\n  },\n  {\n    title: \"init\",\n    dataIndex: \"init\",\n    scopedSlots: { customRender: \"init\" },\n  },\n  {\n    title: \"eventdttm\",\n    dataIndex: \"eventdttm\",\n    scopedSlots: { customRender: \"eventdttm\" },\n  },\n  {\n    title: \"uid\",\n    dataIndex: \"uid\",\n    scopedSlots: { customRender: \"uid\" },\n  },\n  {\n    title: \"operation\",\n    dataIndex: \"operation\",\n    scopedSlots: { customRender: \"operation\" },\n  },\n];\n\nexport default {\n  data() {\n    return {\n      data,\n      columns,\n      editingKey: \"\",\n    };\n  },\n\n  mounted() {\n    const self = this;\n    const sref = firebase.database().ref(\"user/\");\n    sref.on(\"value\", function (sdata) {\n      sdata.forEach(function (sdatas) {\n        const _t = {\n          key: sdatas.key,\n          userName: sdatas.val().userName,\n          userPhone: sdatas.val().userPhone,\n          email: sdatas.val().email,\n          init: sdatas.val().init,\n          eventdttm: sdatas.val().eventdttm,\n          uid: sdatas.val().uid,\n          editable: false,\n        };\n        self.data.push(_t);\n      });\n    });\n\n    // console.log(this.data);\n  },\n  methods: {\n    handleChange(value, key, column) {\n      const newData = [...this.data];\n      const target = newData.filter((item) => key === item.key)[0];\n      if (target) {\n        target[column] = value;\n        this.data = newData;\n      }\n    },\n    edit(key) {\n      const newData = [...this.data];\n      const target = newData.filter((item) => key === item.key)[0];\n      this.editingKey = key;\n      if (target) {\n        target.editable = true;\n        this.data = newData;\n      }\n    },\n    save(key, value, column, record) {\n      const newData = [...this.data];\n      const target = newData.filter((item) => key === item.key)[0];\n      let newPostKey = firebase.database().ref().child(\"posts\").push().key;\n      const updateRef = firebase.database().ref(`user/${key}`);\n      if (target) {\n        target.editable = false;\n        this.data = newData;\n      }\n      console.log(target);\n      updateRef.set({\n        email: target.email,\n        userPhone: target.userPhone,\n        init: target.init,\n        eventdttm: new Date(),\n        uid: target.uid,\n        key: newPostKey,\n      });\n      this.editingKey = \"\";\n    },\n    cancel(key) {\n      this.data = [];\n      const self = this;\n      const delRef = firebase.database().ref(`user/${key}`);\n      delRef.remove().then(function () {\n        alert(\"del\");\n        self.editingKey = \"\";\n        key.editable = false;\n      });\n      const newData = [...this.data];\n      const target = newData.filter((item) => key === item.key)[0];\n      this.editingKey = key;\n      if (target) {\n        target.editable = false;\n        this.data = newData;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.editable-row-operations a {\n  margin-right: 8px;\n}\n</style>\n"]}]}