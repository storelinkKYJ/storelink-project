{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink-project/src/layouts/components/navbar/components/NotificationDropDown.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink-project/src/layouts/components/navbar/components/NotificationDropDown.vue","mtime":1610509510810},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/babel-loader/lib/index.js","mtime":1610344922456},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\n\nexport default {\n  components: {\n    VuePerfectScrollbar\n  },\n  data () {\n    return {\n      unreadNotifications: [\n        {\n          index    : 0,\n          title    : 'New Message',\n          msg      : 'Are your going to meet me tonight?',\n          icon     : 'MessageSquareIcon',\n          time     : this.randomDate({sec: 10}),\n          category : 'primary'\n        },\n        { index    : 1,\n          title    : 'New Order Recieved',\n          msg      : 'You got new order of goods.',\n          icon     : 'PackageIcon',\n          time     : this.randomDate({sec: 40}),\n          category : 'success'\n        },\n        { index    : 2,\n          title    : 'Server Limit Reached!',\n          msg      : 'Server have 99% CPU usage.',\n          icon     : 'AlertOctagonIcon',\n          time     : this.randomDate({min: 1}),\n          category : 'danger'\n        },\n        { index    : 3,\n          title    : 'New Mail From Peter',\n          msg      : 'Cake sesame snaps cupcake',\n          icon     : 'MailIcon',\n          time     : this.randomDate({min: 6}),\n          category : 'primary'\n        },\n        { index    : 4,\n          title    : 'Bruce\\'s Party',\n          msg      : 'Chocolate cake oat cake tiramisu',\n          icon     : 'CalendarIcon',\n          time     : this.randomDate({hr: 2}),\n          category : 'warning'\n        }\n      ],\n      settings: {\n        maxScrollbarLength: 60,\n        wheelSpeed: .60\n      }\n    }\n  },\n  computed: {\n    scrollbarTag () { return this.$store.getters.scrollbarTag }\n  },\n  methods: {\n    elapsedTime (startTime) {\n      const x        = new Date(startTime)\n      const now      = new Date()\n      let timeDiff = now - x\n      timeDiff    /= 1000\n\n      const seconds = Math.round(timeDiff)\n      timeDiff    = Math.floor(timeDiff / 60)\n\n      const minutes = Math.round(timeDiff % 60)\n      timeDiff    = Math.floor(timeDiff / 60)\n\n      const hours   = Math.round(timeDiff % 24)\n      timeDiff    = Math.floor(timeDiff / 24)\n\n      const days    = Math.round(timeDiff % 365)\n      timeDiff    = Math.floor(timeDiff / 365)\n\n      const years   = timeDiff\n\n      if (years > 0) {\n        return `${years + (years > 1 ? ' Years ' : ' Year ')}ago`\n      } else if (days > 0) {\n        return `${days + (days > 1 ? ' Days ' : ' Day ')}ago`\n      } else if (hours > 0) {\n        return `${hours + (hours > 1 ? ' Hrs ' : ' Hour ')}ago`\n      } else if (minutes > 0) {\n        return `${minutes + (minutes > 1 ? ' Mins ' : ' Min ')}ago`\n      } else if (seconds > 0) {\n        return seconds + (seconds > 1 ? ' sec ago' : 'just now')\n      }\n\n      return 'Just Now'\n    },\n    // Method for creating dummy notification time\n    randomDate ({ hr, min, sec }) {\n      const date = new Date()\n\n      if (hr) date.setHours(date.getHours() - hr)\n      if (min) date.setMinutes(date.getMinutes() - min)\n      if (sec) date.setSeconds(date.getSeconds() - sec)\n\n      return date\n    }\n  }\n}\n\n",{"version":3,"sources":["NotificationDropDown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"NotificationDropDown.vue","sourceRoot":"src/layouts/components/navbar/components","sourcesContent":["<template>\n  <!-- NOTIFICATIONS -->\n  <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\">\n    <feather-icon icon=\"BellIcon\" class=\"cursor-pointer mt-1 sm:mr-6 mr-2\" :badge=\"unreadNotifications.length\" />\n\n    <vs-dropdown-menu class=\"notification-dropdown dropdown-custom vx-navbar-dropdown\">\n\n      <div class=\"notification-top text-center p-5 bg-primary text-white\">\n        <h3 class=\"text-white\">{{ unreadNotifications.length }} New</h3>\n        <p class=\"opacity-75\">App Notifications</p>\n      </div>\n\n      <component :is=\"scrollbarTag\" ref=\"mainSidebarPs\" class=\"scroll-area--nofications-dropdown p-0 mb-10\" :settings=\"settings\" :key=\"$vs.rtl\">\n        <ul class=\"bordered-items\">\n          <li v-for=\"ntf in unreadNotifications\" :key=\"ntf.index\" class=\"flex justify-between px-4 py-4 notification cursor-pointer\">\n            <div class=\"flex items-start\">\n              <feather-icon :icon=\"ntf.icon\" :svgClasses=\"[`text-${ntf.category}`, 'stroke-current mr-1 h-6 w-6']\"></feather-icon>\n              <div class=\"mx-2\">\n                <span class=\"font-medium block notification-title\" :class=\"[`text-${ntf.category}`]\">{{ ntf.title }}</span>\n                <small>{{ ntf.msg }}</small>\n              </div>\n            </div>\n            <small class=\"mt-1 whitespace-no-wrap\">{{ elapsedTime(ntf.time) }}</small>\n          </li>\n        </ul>\n      </component>\n\n      <div class=\"\n        checkout-footer\n        fixed\n        bottom-0\n        rounded-b-lg\n        text-primary\n        w-full\n        p-2\n        font-semibold\n        text-center\n        border\n        border-b-0\n        border-l-0\n        border-r-0\n        border-solid\n        d-theme-border-grey-light\n        cursor-pointer\">\n        <span>View All Notifications</span>\n      </div>\n    </vs-dropdown-menu>\n  </vs-dropdown>\n</template>\n\n<script>\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\n\nexport default {\n  components: {\n    VuePerfectScrollbar\n  },\n  data () {\n    return {\n      unreadNotifications: [\n        {\n          index    : 0,\n          title    : 'New Message',\n          msg      : 'Are your going to meet me tonight?',\n          icon     : 'MessageSquareIcon',\n          time     : this.randomDate({sec: 10}),\n          category : 'primary'\n        },\n        { index    : 1,\n          title    : 'New Order Recieved',\n          msg      : 'You got new order of goods.',\n          icon     : 'PackageIcon',\n          time     : this.randomDate({sec: 40}),\n          category : 'success'\n        },\n        { index    : 2,\n          title    : 'Server Limit Reached!',\n          msg      : 'Server have 99% CPU usage.',\n          icon     : 'AlertOctagonIcon',\n          time     : this.randomDate({min: 1}),\n          category : 'danger'\n        },\n        { index    : 3,\n          title    : 'New Mail From Peter',\n          msg      : 'Cake sesame snaps cupcake',\n          icon     : 'MailIcon',\n          time     : this.randomDate({min: 6}),\n          category : 'primary'\n        },\n        { index    : 4,\n          title    : 'Bruce\\'s Party',\n          msg      : 'Chocolate cake oat cake tiramisu',\n          icon     : 'CalendarIcon',\n          time     : this.randomDate({hr: 2}),\n          category : 'warning'\n        }\n      ],\n      settings: {\n        maxScrollbarLength: 60,\n        wheelSpeed: .60\n      }\n    }\n  },\n  computed: {\n    scrollbarTag () { return this.$store.getters.scrollbarTag }\n  },\n  methods: {\n    elapsedTime (startTime) {\n      const x        = new Date(startTime)\n      const now      = new Date()\n      let timeDiff = now - x\n      timeDiff    /= 1000\n\n      const seconds = Math.round(timeDiff)\n      timeDiff    = Math.floor(timeDiff / 60)\n\n      const minutes = Math.round(timeDiff % 60)\n      timeDiff    = Math.floor(timeDiff / 60)\n\n      const hours   = Math.round(timeDiff % 24)\n      timeDiff    = Math.floor(timeDiff / 24)\n\n      const days    = Math.round(timeDiff % 365)\n      timeDiff    = Math.floor(timeDiff / 365)\n\n      const years   = timeDiff\n\n      if (years > 0) {\n        return `${years + (years > 1 ? ' Years ' : ' Year ')}ago`\n      } else if (days > 0) {\n        return `${days + (days > 1 ? ' Days ' : ' Day ')}ago`\n      } else if (hours > 0) {\n        return `${hours + (hours > 1 ? ' Hrs ' : ' Hour ')}ago`\n      } else if (minutes > 0) {\n        return `${minutes + (minutes > 1 ? ' Mins ' : ' Min ')}ago`\n      } else if (seconds > 0) {\n        return seconds + (seconds > 1 ? ' sec ago' : 'just now')\n      }\n\n      return 'Just Now'\n    },\n    // Method for creating dummy notification time\n    randomDate ({ hr, min, sec }) {\n      const date = new Date()\n\n      if (hr) date.setHours(date.getHours() - hr)\n      if (min) date.setMinutes(date.getMinutes() - min)\n      if (sec) date.setSeconds(date.getSeconds() - sec)\n\n      return date\n    }\n  }\n}\n\n</script>\n\n"]}]}