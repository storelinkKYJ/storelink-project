{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/apps/user/user-list/cell-renderer/CellRendererStatus.vue?vue&type=style&index=0&lang=scss&scpoped=true&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/apps/user/user-list/cell-renderer/CellRendererStatus.vue","mtime":1610509510824},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/css-loader/index.js","mtime":1610346344703},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1610344923547},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/postcss-loader/src/index.js","mtime":1607839467577},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/sass-loader/dist/cjs.js","mtime":1610346345537},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.ag-grid-cell-chip {\n  &.vs-chip-success {\n    background: rgba(var(--vs-success),.15);\n    color: rgba(var(--vs-success),1) !important;\n    font-weight: 500;\n  }\n  &.vs-chip-warning {\n    background: rgba(var(--vs-warning),.15);\n    color: rgba(var(--vs-warning),1) !important;\n    font-weight: 500;\n  }\n  &.vs-chip-danger {\n    background: rgba(var(--vs-danger),.15);\n    color: rgba(var(--vs-danger),1) !important;\n    font-weight: 500;\n  }\n}\n",{"version":3,"sources":["CellRendererStatus.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CellRendererStatus.vue","sourceRoot":"src/views/apps/user/user-list/cell-renderer","sourcesContent":["<template>\n    <vs-chip class=\"ag-grid-cell-chip\" :color=\"chipColor(params.value)\">\n      <span>{{ params.value }}</span>\n    </vs-chip>\n</template>\n\n<script>\nexport default {\n  name: 'CellRendererStatus',\n  computed: {\n    chipColor () {\n      return (value) => {\n        if (value === 'active') return 'success'\n        else if (value === 'blocked') return 'danger'\n        else if (value === 'deactivated') return 'warning'\n        else return 'primary'\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scpoped>\n.ag-grid-cell-chip {\n  &.vs-chip-success {\n    background: rgba(var(--vs-success),.15);\n    color: rgba(var(--vs-success),1) !important;\n    font-weight: 500;\n  }\n  &.vs-chip-warning {\n    background: rgba(var(--vs-warning),.15);\n    color: rgba(var(--vs-warning),1) !important;\n    font-weight: 500;\n  }\n  &.vs-chip-danger {\n    background: rgba(var(--vs-danger),.15);\n    color: rgba(var(--vs-danger),1) !important;\n    font-weight: 500;\n  }\n}\n</style>\n"]}]}