{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink-project/src/views/apps/user/user-edit/UserEditTabInformation.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink-project/src/views/apps/user/user-edit/UserEditTabInformation.vue","mtime":1610509510824},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/babel-loader/lib/index.js","mtime":1610344922456},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport flatPickr from 'vue-flatpickr-component'\nimport 'flatpickr/dist/flatpickr.css'\nimport vSelect from 'vue-select'\n\nexport default {\n  components: {\n    vSelect,\n    flatPickr\n  },\n  props: {\n    data: {\n      type: Object,\n      required: true\n    }\n  },\n  data () {\n    return {\n\n      data_local: JSON.parse(JSON.stringify(this.data)),\n\n      langOptions: [\n        { label: 'English',  value: 'english'  },\n        { label: 'Spanish',  value: 'spanish'  },\n        { label: 'French',   value: 'french'   },\n        { label: 'Russian',  value: 'russian'  },\n        { label: 'German',   value: 'german'   },\n        { label: 'Arabic',   value: 'arabic'   },\n        { label: 'Sanskrit', value: 'sanskrit' }\n      ]\n    }\n  },\n  computed: {\n    validateForm () {\n      return !this.errors.any()\n    }\n  },\n  methods: {\n    save_changes () {\n      /* eslint-disable */\n      if (!this.validateForm) return\n\n      // Here will go your API call for updating data\n      // You can get data in \"this.data_local\"\n\n      /* eslint-enable */\n    },\n    reset_data () {\n      this.data_local = Object.assign({}, this.data)\n    }\n  }\n}\n",{"version":3,"sources":["UserEditTabInformation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserEditTabInformation.vue","sourceRoot":"src/views/apps/user/user-edit","sourcesContent":["<!-- =========================================================================================\n  File Name: UserEditTabInformation.vue\n  Description: User Edit Information Tab content\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n<template>\n  <div id=\"user-edit-tab-info\">\n    <div class=\"vx-row\">\n      <div class=\"vx-col w-full md:w-1/2\">\n\n        <!-- Col Header -->\n        <div class=\"flex items-end\">\n          <feather-icon icon=\"UserIcon\" class=\"mr-2\" svgClasses=\"w-5 h-5\" />\n          <span class=\"leading-none font-medium\">Personal Information</span>\n        </div>\n\n        <!-- Col Content -->\n        <div>\n\n          <!-- DOB -->\n          <div class=\"mt-4\">\n            <label class=\"text-sm\">Birth Date</label>\n            <flat-pickr v-model=\"data_local.dob\" :config=\"{ dateFormat: 'd F Y', maxDate: new Date() }\" class=\"w-full\" v-validate=\"'required'\" name=\"dob\" />\n            <span class=\"text-danger text-sm\"  v-show=\"errors.has('dob')\">{{ errors.first('dob') }}</span>\n          </div>\n\n          <vs-input class=\"w-full mt-4\" label=\"Mobile\" v-model=\"data_local.mobile\" v-validate=\"{regex: '^\\\\+?([0-9]+)$' }\" name=\"mobile\" />\n          <span class=\"text-danger text-sm\"  v-show=\"errors.has('mobile')\">{{ errors.first('mobile') }}</span>\n\n          <vs-input class=\"w-full mt-4\" label=\"Website\" v-model=\"data_local.website\" v-validate=\"'url:require_protocol'\" name=\"website\" data-vv-as=\"field\" />\n          <span class=\"text-danger text-sm\"  v-show=\"errors.has('website')\">{{ errors.first('website') }}</span>\n\n          <div class=\"mt-4\">\n            <label class=\"text-sm\">Languages</label>\n            <v-select v-model=\"data_local.languages_known\" multiple :closeOnSelect=\"false\" :options=\"langOptions\" v-validate=\"'required'\" name=\"lang_known\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\n            <span class=\"text-danger text-sm\"  v-show=\"errors.has('lang_known')\">{{ errors.first('lang_known') }}</span>\n          </div>\n\n          <!-- Gender -->\n          <div class=\"mt-4\">\n            <label class=\"text-sm\">Gender</label>\n            <div class=\"mt-2\">\n              <vs-radio v-model=\"data_local.gender\" vs-value=\"male\" class=\"mr-4\">Male</vs-radio>\n              <vs-radio v-model=\"data_local.gender\" vs-value=\"female\" class=\"mr-4\">Female</vs-radio>\n              <vs-radio v-model=\"data_local.gender\" vs-value=\"other\">Other</vs-radio>\n            </div>\n          </div>\n\n          <div class=\"mt-6\">\n            <label>Contact Options</label>\n            <div class=\"flex flex-wrap mt-1\">\n            <vs-checkbox v-model=\"data_local.contact_options\" vs-value=\"email\" class=\"mr-4 mb-2\">Email</vs-checkbox>\n            <vs-checkbox v-model=\"data_local.contact_options\" vs-value=\"message\" class=\"mr-4 mb-2\">Message</vs-checkbox>\n            <vs-checkbox v-model=\"data_local.contact_options\" vs-value=\"Phone\" class=\" mb-2\">Phone</vs-checkbox>\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n      <!-- Address Col -->\n      <div class=\"vx-col w-full md:w-1/2\">\n\n          <!-- Col Header -->\n          <div class=\"flex items-end md:mt-0 mt-base\">\n            <feather-icon icon=\"MapPinIcon\" class=\"mr-2\" svgClasses=\"w-5 h-5\" />\n            <span class=\"leading-none font-medium\">Address</span>\n          </div>\n\n          <!-- Col Content -->\n          <div>\n            <vs-input class=\"w-full mt-4\" label=\"Address Line 1\" v-model=\"data_local.location.add_line_1\" v-validate=\"'required'\" name=\"addd_line_1\" />\n            <span class=\"text-danger text-sm\"  v-show=\"errors.has('addd_line_1')\">{{ errors.first('addd_line_1') }}</span>\n\n            <vs-input class=\"w-full mt-4\" label=\"Address Line 2\" v-model=\"data_local.location.add_line_2\" />\n\n            <vs-input class=\"w-full mt-4\" label=\"Post Code\" v-model=\"data_local.location.post_code\" v-validate=\"'required|numeric'\" name=\"post_code\" />\n            <span class=\"text-danger text-sm\"  v-show=\"errors.has('post_code')\">{{ errors.first('post_code') }}</span>\n\n            <vs-input class=\"w-full mt-4\" label=\"City\" v-model=\"data_local.location.city\" v-validate=\"'required|alpha'\" name=\"city\" />\n            <span class=\"text-danger text-sm\"  v-show=\"errors.has('city')\">{{ errors.first('city') }}</span>\n\n            <vs-input class=\"w-full mt-4\" label=\"State\" v-model=\"data_local.location.state\" v-validate=\"'required|alpha'\" name=\"state\" />\n            <span class=\"text-danger text-sm\"  v-show=\"errors.has('state')\">{{ errors.first('state') }}</span>\n\n            <vs-input class=\"w-full mt-4\" label=\"Country\" v-model=\"data_local.location.country\" v-validate=\"'required|alpha'\" name=\"country\" />\n            <span class=\"text-danger text-sm\"  v-show=\"errors.has('country')\">{{ errors.first('country') }}</span>\n\n          </div>\n      </div>\n    </div>\n\n    <!-- Save & Reset Button -->\n    <div class=\"vx-row\">\n      <div class=\"vx-col w-full\">\n        <div class=\"mt-8 flex flex-wrap items-center justify-end\">\n          <vs-button class=\"ml-auto mt-2\" @click=\"save_changes\" :disabled=\"!validateForm\">Save Changes</vs-button>\n          <vs-button class=\"ml-4 mt-2\" type=\"border\" color=\"warning\" @click=\"reset_data\">Reset</vs-button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport flatPickr from 'vue-flatpickr-component'\nimport 'flatpickr/dist/flatpickr.css'\nimport vSelect from 'vue-select'\n\nexport default {\n  components: {\n    vSelect,\n    flatPickr\n  },\n  props: {\n    data: {\n      type: Object,\n      required: true\n    }\n  },\n  data () {\n    return {\n\n      data_local: JSON.parse(JSON.stringify(this.data)),\n\n      langOptions: [\n        { label: 'English',  value: 'english'  },\n        { label: 'Spanish',  value: 'spanish'  },\n        { label: 'French',   value: 'french'   },\n        { label: 'Russian',  value: 'russian'  },\n        { label: 'German',   value: 'german'   },\n        { label: 'Arabic',   value: 'arabic'   },\n        { label: 'Sanskrit', value: 'sanskrit' }\n      ]\n    }\n  },\n  computed: {\n    validateForm () {\n      return !this.errors.any()\n    }\n  },\n  methods: {\n    save_changes () {\n      /* eslint-disable */\n      if (!this.validateForm) return\n\n      // Here will go your API call for updating data\n      // You can get data in \"this.data_local\"\n\n      /* eslint-enable */\n    },\n    reset_data () {\n      this.data_local = Object.assign({}, this.data)\n    }\n  }\n}\n</script>\n"]}]}