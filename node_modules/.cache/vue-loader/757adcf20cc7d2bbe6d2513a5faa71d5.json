{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/forms/form-wizard/FormWizardValidation.vue?vue&type=template&id=1e0024dd&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/forms/form-wizard/FormWizardValidation.vue","mtime":1610509510877},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1610344923547},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"vx-card\",\n    { attrs: { title: \"Form wizard with validation\", \"code-toggler\": \"\" } },\n    [\n      _c(\"p\", [\n        _vm._v(\"Implement Form validation with form wizard using popular \"),\n        _c(\n          \"strong\",\n          [\n            _c(\"router-link\", { attrs: { to: \"/forms/form-validation\" } }, [\n              _vm._v(\"VeeValidate\")\n            ])\n          ],\n          1\n        )\n      ]),\n      _c(\n        \"div\",\n        { staticClass: \"mt-5\" },\n        [\n          _c(\n            \"form-wizard\",\n            {\n              attrs: {\n                color: \"rgba(var(--vs-primary), 1)\",\n                errorColor: \"rgba(var(--vs-danger), 1)\",\n                title: null,\n                subtitle: null,\n                finishButtonText: \"Submit\"\n              }\n            },\n            [\n              _c(\n                \"tab-content\",\n                {\n                  staticClass: \"mb-5\",\n                  attrs: {\n                    title: \"Step 1\",\n                    icon: \"feather icon-home\",\n                    \"before-change\": _vm.validateStep1\n                  }\n                },\n                [\n                  _c(\"form\", { attrs: { \"data-vv-scope\": \"step-1\" } }, [\n                    _c(\"div\", { staticClass: \"vx-row\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"vx-col md:w-1/2 w-full mt-5\" },\n                        [\n                          _c(\"vs-input\", {\n                            directives: [\n                              {\n                                name: \"validate\",\n                                rawName: \"v-validate\",\n                                value: \"required|alpha\",\n                                expression: \"'required|alpha'\"\n                              }\n                            ],\n                            staticClass: \"w-full\",\n                            attrs: { label: \"First Name\", name: \"first_name\" },\n                            model: {\n                              value: _vm.firstName,\n                              callback: function($$v) {\n                                _vm.firstName = $$v\n                              },\n                              expression: \"firstName\"\n                            }\n                          }),\n                          _c(\"span\", { staticClass: \"text-danger\" }, [\n                            _vm._v(\n                              _vm._s(_vm.errors.first(\"step-1.first_name\"))\n                            )\n                          ])\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"div\",\n                        { staticClass: \"vx-col md:w-1/2 w-full mt-5\" },\n                        [\n                          _c(\"vs-input\", {\n                            directives: [\n                              {\n                                name: \"validate\",\n                                rawName: \"v-validate\",\n                                value: \"required|alpha\",\n                                expression: \"'required|alpha'\"\n                              }\n                            ],\n                            staticClass: \"w-full\",\n                            attrs: { label: \"Last Name\", name: \"last_name\" },\n                            model: {\n                              value: _vm.lastName,\n                              callback: function($$v) {\n                                _vm.lastName = $$v\n                              },\n                              expression: \"lastName\"\n                            }\n                          }),\n                          _c(\"span\", { staticClass: \"text-danger\" }, [\n                            _vm._v(_vm._s(_vm.errors.first(\"step-1.last_name\")))\n                          ])\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"div\",\n                        { staticClass: \"vx-col md:w-1/2 w-full mt-5\" },\n                        [\n                          _c(\"vs-input\", {\n                            directives: [\n                              {\n                                name: \"validate\",\n                                rawName: \"v-validate\",\n                                value: \"required|email\",\n                                expression: \"'required|email'\"\n                              }\n                            ],\n                            staticClass: \"w-full\",\n                            attrs: {\n                              type: \"email\",\n                              label: \"Email\",\n                              name: \"email\"\n                            },\n                            model: {\n                              value: _vm.email,\n                              callback: function($$v) {\n                                _vm.email = $$v\n                              },\n                              expression: \"email\"\n                            }\n                          }),\n                          _c(\"span\", { staticClass: \"text-danger\" }, [\n                            _vm._v(_vm._s(_vm.errors.first(\"step-1.email\")))\n                          ])\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"div\",\n                        { staticClass: \"vx-col md:w-1/2 w-full mt-5\" },\n                        [\n                          _c(\n                            \"vs-select\",\n                            {\n                              staticClass: \"w-full select-large\",\n                              attrs: { label: \"City\" },\n                              model: {\n                                value: _vm.city,\n                                callback: function($$v) {\n                                  _vm.city = $$v\n                                },\n                                expression: \"city\"\n                              }\n                            },\n                            _vm._l(_vm.cityOptions, function(item, index) {\n                              return _c(\"vs-select-item\", {\n                                key: index,\n                                staticClass: \"w-full\",\n                                attrs: { value: item.value, text: item.text }\n                              })\n                            }),\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ])\n                  ])\n                ]\n              ),\n              _c(\n                \"tab-content\",\n                {\n                  staticClass: \"mb-5\",\n                  attrs: {\n                    title: \"Step 2\",\n                    icon: \"feather icon-briefcase\",\n                    \"before-change\": _vm.validateStep2\n                  }\n                },\n                [\n                  _c(\"form\", { attrs: { \"data-vv-scope\": \"step-2\" } }, [\n                    _c(\"div\", { staticClass: \"vx-row\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"vx-col md:w-1/2 w-full\" },\n                        [\n                          _c(\"vs-input\", {\n                            directives: [\n                              {\n                                name: \"validate\",\n                                rawName: \"v-validate\",\n                                value: \"required|alpha_spaces\",\n                                expression: \"'required|alpha_spaces'\"\n                              }\n                            ],\n                            staticClass: \"w-full mt-4\",\n                            attrs: {\n                              label: \"Proposal Title\",\n                              name: \"proposal_title\"\n                            },\n                            model: {\n                              value: _vm.proposalTitle,\n                              callback: function($$v) {\n                                _vm.proposalTitle = $$v\n                              },\n                              expression: \"proposalTitle\"\n                            }\n                          }),\n                          _c(\"span\", { staticClass: \"text-danger\" }, [\n                            _vm._v(\n                              _vm._s(_vm.errors.first(\"step-2.proposal_title\"))\n                            )\n                          ]),\n                          _c(\"vs-input\", {\n                            directives: [\n                              {\n                                name: \"validate\",\n                                rawName: \"v-validate\",\n                                value: \"required|alpha_spaces\",\n                                expression: \"'required|alpha_spaces'\"\n                              }\n                            ],\n                            staticClass: \"w-full mt-4\",\n                            attrs: { label: \"Job Title\", name: \"job_title\" },\n                            model: {\n                              value: _vm.jobTitle,\n                              callback: function($$v) {\n                                _vm.jobTitle = $$v\n                              },\n                              expression: \"jobTitle\"\n                            }\n                          }),\n                          _c(\"span\", { staticClass: \"text-danger\" }, [\n                            _vm._v(_vm._s(_vm.errors.first(\"step-2.job_title\")))\n                          ])\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"div\",\n                        { staticClass: \"vx-col md:w-1/2 w-full\" },\n                        [\n                          _c(\"vs-textarea\", {\n                            staticClass: \"md:mt-10 mt-6 mb-0\",\n                            attrs: { label: \"Short discription\", rows: \"3\" },\n                            model: {\n                              value: _vm.textarea,\n                              callback: function($$v) {\n                                _vm.textarea = $$v\n                              },\n                              expression: \"textarea\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ])\n                  ])\n                ]\n              ),\n              _c(\n                \"tab-content\",\n                {\n                  staticClass: \"mb-5\",\n                  attrs: {\n                    title: \"Step 3\",\n                    icon: \"feather icon-image\",\n                    \"before-change\": _vm.validateStep3\n                  }\n                },\n                [\n                  _c(\"form\", { attrs: { \"data-vv-scope\": \"step-3\" } }, [\n                    _c(\"div\", { staticClass: \"vx-row\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"vx-col md:w-1/2 w-full\" },\n                        [\n                          _c(\"vs-input\", {\n                            directives: [\n                              {\n                                name: \"validate\",\n                                rawName: \"v-validate\",\n                                value: \"required|alpha_spaces\",\n                                expression: \"'required|alpha_spaces'\"\n                              }\n                            ],\n                            staticClass: \"w-full mt-5\",\n                            attrs: { label: \"Event Name\", name: \"event_name\" },\n                            model: {\n                              value: _vm.eventName,\n                              callback: function($$v) {\n                                _vm.eventName = $$v\n                              },\n                              expression: \"eventName\"\n                            }\n                          }),\n                          _c(\"span\", { staticClass: \"text-danger\" }, [\n                            _vm._v(\n                              _vm._s(_vm.errors.first(\"step-3.event_name\"))\n                            )\n                          ])\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"div\",\n                        { staticClass: \"vx-col md:w-1/2 w-full\" },\n                        [\n                          _c(\n                            \"vs-select\",\n                            {\n                              staticClass: \"w-full select-large mt-5\",\n                              attrs: { label: \"Event Location\" },\n                              model: {\n                                value: _vm.city,\n                                callback: function($$v) {\n                                  _vm.city = $$v\n                                },\n                                expression: \"city\"\n                              }\n                            },\n                            _vm._l(_vm.cityOptions, function(item, index) {\n                              return _c(\"vs-select-item\", {\n                                key: index,\n                                staticClass: \"w-full\",\n                                attrs: { value: item.value, text: item.text }\n                              })\n                            }),\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"div\",\n                        { staticClass: \"vx-col md:w-1/2 w-full mt-5\" },\n                        [\n                          _c(\n                            \"vs-select\",\n                            {\n                              staticClass: \"w-full select-large\",\n                              attrs: { label: \"Event Status\" },\n                              model: {\n                                value: _vm.status,\n                                callback: function($$v) {\n                                  _vm.status = $$v\n                                },\n                                expression: \"status\"\n                              }\n                            },\n                            _vm._l(_vm.statusOptions, function(item, index) {\n                              return _c(\"vs-select-item\", {\n                                key: index,\n                                staticClass: \"w-full\",\n                                attrs: { value: item.value, text: item.text }\n                              })\n                            }),\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"div\",\n                        { staticClass: \"vx-col md:w-1/2 w-full md:mt-8\" },\n                        [\n                          _c(\"div\", { staticClass: \"demo-alignment\" }, [\n                            _c(\"span\", [_vm._v(\"Requirements:\")]),\n                            _c(\n                              \"div\",\n                              { staticClass: \"flex\" },\n                              [\n                                _c(\"vs-checkbox\", [_vm._v(\"Staffing\")]),\n                                _c(\"vs-checkbox\", [_vm._v(\"Catering\")])\n                              ],\n                              1\n                            )\n                          ])\n                        ]\n                      )\n                    ])\n                  ])\n                ]\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\"template\", { slot: \"codeContainer\" }, [\n        _vm._v(\n          '\\n<template>\\n  <form-wizard color=\"rgba(var(--vs-primary), 1)\" errorColor=\"rgba(var(--vs-danger), 1)\" :title=\"null\" :subtitle=\"null\" finishButtonText=\"Submit\">\\n    <tab-content title=\"Step 1\" class=\"mb-5\" icon=\"feather icon-home\" :before-change=\"validateStep1\">\\n\\n      <!-- tab 1 content -->\\n      <form data-vv-scope=\"step-1\">\\n      <div class=\"vx-row\">\\n        <div class=\"vx-col md:w-1/2 w-full mt-5\">\\n          <vs-input label=\"First Name\" v-model=\"firstName\" class=\"w-full\" name=\"first_name\" v-validate=\"\\'required|alpha\\'\" />\\n          <span class=\"text-danger\">' +\n            _vm._s(_vm.errors.first(\"step-1.first_name\")) +\n            '</span>\\n        </div>\\n        <div class=\"vx-col md:w-1/2 w-full mt-5\">\\n          <vs-input label=\"Last Name\"  v-model=\"lastName\" class=\"w-full\" name=\"last_name\" v-validate=\"\\'required|alpha\\'\" />\\n          <span class=\"text-danger\">' +\n            _vm._s(_vm.errors.first(\"step-1.last_name\")) +\n            '</span>\\n        </div>\\n        <div class=\"vx-col md:w-1/2 w-full mt-5\">\\n          <vs-input type=\"email\" label=\"Email\"  v-model=\"email\" class=\"w-full\" name=\"email\" v-validate=\"\\'required|email\\'\" />\\n          <span class=\"text-danger\">' +\n            _vm._s(_vm.errors.first(\"step-1.email\")) +\n            '</span>\\n        </div>\\n        <div class=\"vx-col md:w-1/2 w-full mt-5\">\\n          <vs-select v-model=\"city\" class=\"w-full select-large\" label=\"City\">\\n            <vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.text\" v-for=\"(item,index) in cityOptions\" class=\"w-full\" />\\n          </vs-select>\\n        </div>\\n      </div>\\n      </form>\\n    </tab-content>\\n\\n    <!-- tab 2 content -->\\n    <tab-content title=\"Step 2\" class=\"mb-5\" icon=\"feather icon-briefcase\" :before-change=\"validateStep2\">\\n      <form data-vv-scope=\"step-2\">\\n      <div class=\"vx-row\">\\n        <div class=\"vx-col md:w-1/2 w-full\">\\n          <vs-input label=\"Proposal Title\" v-model=\"proposalTitle\" class=\"w-full mt-4\" name=\"proposal_title\" v-validate=\"\\'required|alpha_spaces\\'\" />\\n          <span class=\"text-danger\">' +\n            _vm._s(_vm.errors.first(\"step-2.proposal_title\")) +\n            '</span>\\n\\n          <vs-input label=\"Job Title\"  v-model=\"jobTitle\" class=\"w-full mt-4\" name=\"job_title\" v-validate=\"\\'required|alpha_spaces\\'\" />\\n          <span class=\"text-danger\">' +\n            _vm._s(_vm.errors.first(\"step-2.job_title\")) +\n            '</span>\\n        </div>\\n        <div class=\"vx-col md:w-1/2 w-full\">\\n          <vs-textarea v-model=\"textarea\" label=\"Short discription\" class=\"md:mt-10 mt-6 mb-0\" rows=\"3\" />\\n        </div>\\n      </div>\\n      </form>\\n    </tab-content>\\n\\n    <!-- tab 3 content -->\\n    <tab-content title=\"Step 3\" class=\"mb-5\" icon=\"feather icon-image\" :before-change=\"validateStep3\">\\n      <form data-vv-scope=\"step-3\">\\n      <div class=\"vx-row\">\\n        <div class=\"vx-col md:w-1/2 w-full\">\\n          <vs-input label=\"Event Name\" v-model=\"eventName\" class=\"w-full mt-5\" name=\"event_name\" v-validate=\"\\'required|alpha_spaces\\'\" />\\n          <span class=\"text-danger\">' +\n            _vm._s(_vm.errors.first(\"step-3.event_name\")) +\n            '</span>\\n        </div>\\n        <div class=\"vx-col md:w-1/2 w-full\">\\n          <vs-select v-model=\"city\" class=\"w-full select-large mt-5\" label=\"Event Location\">\\n            <vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.text\" v-for=\"(item,index) in cityOptions\" class=\"w-full\" />\\n          </vs-select>\\n        </div>\\n        <div class=\"vx-col md:w-1/2 w-full mt-5\">\\n          <vs-select v-model=\"status\" class=\"w-full select-large\" label=\"Event Status\">\\n            <vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.text\" v-for=\"(item,index) in statusOptions\" class=\"w-full\" />\\n          </vs-select>\\n        </div>\\n        <div class=\"vx-col md:w-1/2 w-full md:mt-8\">\\n          <div class=\"demo-alignment\">\\n            <span>Requirements:</span>\\n            <div class=\"flex\">\\n              <vs-checkbox>Staffing</vs-checkbox>\\n              <vs-checkbox>Catering</vs-checkbox>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      </form>\\n    </tab-content>\\n  </form-wizard>\\n</template>\\n\\n<script>\\nimport { FormWizard, TabContent } from \\'vue-form-wizard\\'\\nimport \\'vue-form-wizard/dist/vue-form-wizard.min.css\\'\\n\\n// For custom error message\\nimport { Validator } from \\'vee-validate\\';\\nconst dict = {\\n  custom: {\\n    first_name: {\\n      required: \\'First name is required\\',\\n      alpha: \"First name may only contain alphabetic characters\"\\n    },\\n    last_name: {\\n      required: \\'Last name is required\\',\\n      alpha: \"Last name may only contain alphabetic characters\"\\n    },\\n    email: {\\n      required: \\'Email is required\\',\\n      email: \"Please enter valid email\"\\n    },\\n    job_title: {\\n      required: \\'Job title name is required\\',\\n      alpha: \"Job title may only contain alphabetic characters\"\\n    },\\n    proposal_title: {\\n      required: \\'Proposal title name is required\\',\\n      alpha: \"Proposal title may only contain alphabetic characters\"\\n    },\\n    event_name: {\\n      required: \\'Event name is required\\',\\n      alpha: \"Event name may only contain alphabetic characters\"\\n    },\\n  }\\n};\\n\\n// register custom messages\\nValidator.localize(\\'en\\', dict);\\n\\nexport default {\\n  data() {\\n    return {\\n      firstName: \"\",\\n      lastName: \"\",\\n      email: \"\",\\n      city: \"new-york\",\\n      proposalTitle: \"\",\\n      jobTitle: \"\",\\n      textarea: \"\",\\n      eventName: \"\",\\n      eventLocation: \"san-francisco\",\\n      status: \"plannning\",\\n      cityOptions: [\\n        { text: \"New York\", value: \"new-york\" },\\n        { text: \"Chicago\", value: \"chicago\" },\\n        { text: \"San Francisco\", value: \"san-francisco\" },\\n        { text: \"Boston\", value: \"boston\" },\\n      ],\\n      statusOptions: [\\n        { text: \"Plannning\", value: \"plannning\" },\\n        { text: \"In Progress\", value: \"in progress\" },\\n        { text: \"Finished\", value: \"finished\" },\\n      ],\\n      LocationOptions: [\\n        { text: \"New York\", value: \"new-york\" },\\n        { text: \"Chicago\", value: \"chicago\" },\\n        { text: \"San Francisco\", value: \"san-francisco\" },\\n        { text: \"Boston\", value: \"boston\" },\\n      ],\\n    }\\n  },\\n  methods: {\\n    validateStep1() {\\n      return new Promise((resolve, reject) => {\\n        this.$validator.validateAll(\\'step-1\\').then(result => {\\n          if (result) {\\n            resolve(true)\\n          } else {\\n            reject(\"correct all values\");\\n          }\\n        })\\n      })\\n    },\\n    validateStep2() {\\n      return new Promise((resolve, reject) => {\\n        this.$validator.validateAll(\"step-2\").then(result => {\\n          if (result) {\\n            resolve(true)\\n          } else {\\n            reject(\"correct all values\");\\n          }\\n        })\\n      })\\n    },\\n    validateStep3() {\\n      return new Promise((resolve, reject) => {\\n        this.$validator.validateAll(\"step-3\").then(result => {\\n          if (result) {\\n            alert(\"Form submitted!\");\\n            resolve(true)\\n          } else {\\n            reject(\"correct all values\");\\n          }\\n        })\\n      })\\n    }\\n  },\\n  components: {\\n    FormWizard,\\n    TabContent\\n  }\\n}\\n</script>\\n    '\n        )\n      ])\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}