{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/apps/calendar/SimpleCalendar.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/apps/calendar/SimpleCalendar.vue","mtime":1610509510820},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/css-loader/index.js","mtime":1610346344703},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1610344923547},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/postcss-loader/src/index.js","mtime":1607839467577},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/sass-loader/dist/cjs.js","mtime":1610346345537},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"@/assets/scss/vuexy/apps/simple-calendar.scss\";\n",{"version":3,"sources":["SimpleCalendar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkUA","file":"SimpleCalendar.vue","sourceRoot":"src/views/apps/calendar","sourcesContent":["<template>\n  <div id=\"simple-calendar-app\">\n    <div class=\"vx-card no-scroll-content\">\n      <calendar-view\n        ref=\"calendar\"\n        :displayPeriodUom=\"calendarView\"\n        :show-date=\"showDate\"\n        :events=\"simpleCalendarEvents\"\n        enableDragDrop\n        :eventTop=\"windowWidth <= 400 ? '2rem' : '3rem'\"\n        eventBorderHeight=\"0px\"\n        eventContentHeight=\"1.65rem\"\n        class=\"theme-default\"\n        @click-date=\"openAddNewEvent\"\n        @click-event=\"openEditEvent\"\n        @drop-on-date=\"eventDragged\">\n\n        <div slot=\"header\" class=\"mb-4\">\n\n          <div class=\"vx-row no-gutter\">\n\n            <!-- Month Name -->\n            <div class=\"vx-col w-1/3 items-center sm:flex hidden\">\n              <!-- Add new event button -->\n              <vs-button icon-pack=\"feather\" icon=\"icon-plus\" @click=\"promptAddNewEvent(new Date())\">Add</vs-button>\n            </div>\n\n            <!-- Current Month -->\n            <div class=\"vx-col sm:w-1/3 w-full sm:my-0 my-3 flex sm:justify-end justify-center order-last\">\n              <div class=\"flex items-center\">\n                <feather-icon\n                  :icon=\"$vs.rtl ? 'ChevronRightIcon' : 'ChevronLeftIcon'\"\n                  @click=\"updateMonth(-1)\"\n                  svgClasses=\"w-5 h-5 m-1\"\n                  class=\"cursor-pointer bg-primary text-white rounded-full\" />\n\n                <span class=\"mx-3 text-xl font-medium whitespace-no-wrap\">{{ showDate | month }}</span>\n\n                <feather-icon\n                  :icon=\"$vs.rtl ? 'ChevronLeftIcon' : 'ChevronRightIcon'\"\n                  @click=\"updateMonth(1)\"\n                  svgClasses=\"w-5 h-5 m-1\"\n                  class=\"cursor-pointer bg-primary text-white rounded-full\" />\n              </div>\n            </div>\n\n            <div class=\"vx-col sm:w-1/3 w-full flex justify-center\">\n              <template v-for=\"(view, index) in calendarViewTypes\">\n                <vs-button\n                  v-if=\"calendarView === view.val\"\n                  :key=\"String(view.val) + 'filled'\"\n                  type=\"filled\"\n                  class=\"p-3 md:px-8 md:py-3\"\n                  :class=\"{'border-l-0 rounded-l-none': index, 'rounded-r-none': calendarViewTypes.length !== index+1}\"\n                  @click=\"calendarView = view.val\"\n                  >{{ view.label }}</vs-button>\n                <vs-button\n                  v-else\n                  :key=\"String(view.val) + 'border'\"\n                  type=\"border\"\n                  class=\"p-3 md:px-8 md:py-3\"\n                  :class=\"{'border-l-0 rounded-l-none': index, 'rounded-r-none': calendarViewTypes.length !== index+1}\"\n                  @click=\"calendarView = view.val\"\n                  >{{ view.label }}</vs-button>\n              </template>\n\n            </div>\n          </div>\n\n          <div class=\"vx-row sm:flex hidden mt-4\">\n            <div class=\"vx-col w-full flex\">\n              <!-- Labels -->\n              <div class=\"flex flex-wrap sm:justify-start justify-center\">\n                  <div v-for=\"(label, index) in calendarLabels\" :key=\"index\" class=\"flex items-center mr-4 mb-2\">\n                      <div class=\"h-3 w-3 inline-block rounded-full mr-2\" :class=\"'bg-' + label.color\"></div>\n                      <span>{{ label.text }}</span>\n                  </div>\n                  <div class=\"flex items-center mr-4 mb-2\">\n                      <div class=\"h-3 w-3 inline-block rounded-full mr-2 bg-primary\"></div>\n                      <span>None</span>\n                  </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </calendar-view>\n    </div>\n\n    <!-- ADD EVENT -->\n    <vs-prompt\n        class=\"calendar-event-dialog\"\n        title=\"Add Event\"\n        accept-text= \"Add Event\"\n        @accept=\"addEvent\"\n        :is-valid=\"validForm\"\n        :active.sync=\"activePromptAddEvent\">\n\n        <div class=\"calendar__label-container flex\">\n\n            <vs-chip v-if=\"labelLocal != 'none'\" class=\"text-white\" :class=\"'bg-' + labelColor(labelLocal)\">{{ labelLocal }}</vs-chip>\n\n            <vs-dropdown vs-custom-content vs-trigger-click class=\"ml-auto my-2 cursor-pointer\">\n\n                <feather-icon icon=\"TagIcon\" svgClasses=\"h-5 w-5\" class=\"cursor-pointer\" @click.prevent></feather-icon>\n\n                <vs-dropdown-menu style=\"z-index: 200001\">\n                        <vs-dropdown-item v-for=\"(label, index) in calendarLabels\" :key=\"index\" @click=\"labelLocal = label.value\">\n                            <div class=\"h-3 w-3 inline-block rounded-full mr-2\" :class=\"'bg-' + label.color\"></div>\n                            <span>{{ label.text }}</span>\n                        </vs-dropdown-item>\n\n                        <vs-dropdown-item @click=\"labelLocal = 'none'\">\n                            <div class=\"h-3 w-3 mr-1 inline-block rounded-full mr-2 bg-primary\"></div>\n                            <span>None</span>\n                        </vs-dropdown-item>\n                </vs-dropdown-menu>\n            </vs-dropdown>\n\n        </div>\n\n        <vs-input name=\"event-name\" v-validate=\"'required'\" class=\"w-full\" label-placeholder=\"Event Title\" v-model=\"title\"></vs-input>\n        <div class=\"my-4\">\n            <small class=\"date-label\">Start Date</small>\n            <datepicker :language=\"$vs.rtl ? langHe : langEn\" name=\"start-date\" v-model=\"startDate\" :disabled=\"disabledFrom\"></datepicker>\n        </div>\n        <div class=\"my-4\">\n            <small class=\"date-label\">End Date</small>\n            <datepicker :language=\"$vs.rtl ? langHe : langEn\" :disabledDates=\"disabledDatesTo\" name=\"end-date\" v-model=\"endDate\"></datepicker>\n        </div>\n        <vs-input name=\"event-url\" v-validate=\"'url'\" class=\"w-full mt-6\" label-placeholder=\"Event URL\" v-model=\"url\" :color=\"!errors.has('event-url') ? 'success' : 'danger'\"></vs-input>\n\n    </vs-prompt>\n\n    <!-- EDIT EVENT -->\n    <vs-prompt\n        class=\"calendar-event-dialog\"\n        title=\"Edit Event\"\n        accept-text= \"Submit\"\n        cancel-text = \"Remove\"\n        button-cancel = \"border\"\n        @cancel=\"removeEvent\"\n        @accept=\"editEvent\"\n        :is-valid=\"validForm\"\n        :active.sync=\"activePromptEditEvent\">\n\n        <div class=\"calendar__label-container flex\">\n\n            <vs-chip v-if=\"labelLocal != 'none'\" class=\"text-white\" :class=\"'bg-' + labelColor(labelLocal)\">{{ labelLocal }}</vs-chip>\n\n            <vs-dropdown vs-custom-content class=\"ml-auto my-2 cursor-pointer\">\n\n                <feather-icon icon=\"TagIcon\" svgClasses=\"h-5 w-5\" @click.prevent></feather-icon>\n\n                <vs-dropdown-menu style=\"z-index: 200001\">\n                        <vs-dropdown-item v-for=\"(label, index) in calendarLabels\" :key=\"index\" @click=\"labelLocal = label.value\">\n                            <div class=\"h-3 w-3 inline-block rounded-full mr-2\" :class=\"'bg-' + label.color\"></div>\n                            <span>{{ label.text }}</span>\n                        </vs-dropdown-item>\n\n                        <vs-dropdown-item @click=\"labelLocal = 'none'\">\n                            <div class=\"h-3 w-3 mr-1 inline-block rounded-full mr-2 bg-primary\"></div>\n                            <span>None</span>\n                        </vs-dropdown-item>\n                </vs-dropdown-menu>\n            </vs-dropdown>\n\n        </div>\n\n        <vs-input name=\"event-name\" v-validate=\"'required'\" class=\"w-full\" label-placeholder=\"Event Title\" v-model=\"title\"></vs-input>\n        <div class=\"my-4\">\n            <small class=\"date-label\">Start Date</small>\n            <datepicker :language=\"$vs.rtl ? langHe : langEn\" :disabledDates=\"disabledDatesFrom\" name=\"start-date\" v-model=\"startDate\"></datepicker>\n        </div>\n        <div class=\"my-4\">\n            <small class=\"date-label\">End Date</small>\n            <datepicker :language=\"$vs.rtl ? langHe : langEn\" :disabledDates=\"disabledDatesTo\" name=\"end-date\" v-model=\"endDate\"></datepicker>\n        </div>\n        <vs-input name=\"event-url\" v-validate=\"'url'\" class=\"w-full mt-6\" label-placeholder=\"Event URL\" v-model=\"url\" :color=\"!errors.has('event-url') ? 'success' : 'danger'\"></vs-input>\n\n    </vs-prompt>\n  </div>\n</template>\n\n<script>\nimport { CalendarView, CalendarViewHeader } from 'vue-simple-calendar'\nimport moduleCalendar from '@/store/calendar/moduleCalendar.js'\nrequire('vue-simple-calendar/static/css/default.css')\n\nimport Datepicker from 'vuejs-datepicker'\nimport { en, he } from 'vuejs-datepicker/src/locale'\n\nexport default {\n  components: {\n    CalendarView,\n    CalendarViewHeader,\n    Datepicker\n  },\n  data () {\n    return {\n      showDate: new Date(),\n      disabledFrom: false,\n      id: 0,\n      title: '',\n      startDate: '',\n      endDate: '',\n      labelLocal: 'none',\n\n      langHe: he,\n      langEn: en,\n\n      url: '',\n      calendarView: 'month',\n\n      activePromptAddEvent: false,\n      activePromptEditEvent: false,\n\n      calendarViewTypes: [\n        {\n          label: 'Month',\n          val: 'month'\n        },\n        {\n          label: 'Week',\n          val: 'week'\n        },\n        {\n          label: 'Year',\n          val: 'year'\n        }\n      ]\n    }\n  },\n  computed: {\n    simpleCalendarEvents () {\n      return this.$store.state.calendar.events\n    },\n    validForm () {\n      return this.title !== '' && this.startDate !== '' && this.endDate !== '' && Date.parse(this.endDate) - Date.parse(this.startDate) >= 0 && !this.errors.has('event-url')\n    },\n    disabledDatesTo () {\n      return { to: new Date(this.startDate) }\n    },\n    disabledDatesFrom () {\n      return { from: new Date(this.endDate) }\n    },\n    calendarLabels () {\n      return this.$store.state.calendar.eventLabels\n    },\n    labelColor () {\n      return (label) => {\n        if      (label === 'business') return 'success'\n        else if (label === 'work')     return 'warning'\n        else if (label === 'personal') return 'danger'\n        else if (label === 'none')     return 'primary'\n      }\n    },\n    windowWidth () {\n      return this.$store.state.windowWidth\n    }\n  },\n  methods: {\n    addEvent () {\n      const obj = { title: this.title, startDate: this.startDate, endDate: this.endDate, label: this.labelLocal, url: this.url }\n      obj.classes = `event-${  this.labelColor(this.labelLocal)}`\n      this.$store.dispatch('calendar/addEvent', obj)\n    },\n    updateMonth (val) {\n      this.showDate = this.$refs.calendar.getIncrementedPeriod(val)\n    },\n    clearFields () {\n      this.title = this.endDate = this.url = ''\n      this.id = 0\n      this.labelLocal = 'none'\n    },\n    promptAddNewEvent (date) {\n      this.disabledFrom = false\n      this.addNewEventDialog(date)\n    },\n    addNewEventDialog (date) {\n      this.clearFields()\n      this.startDate = date\n      this.endDate = date\n      this.activePromptAddEvent = true\n    },\n    openAddNewEvent (date) {\n      this.disabledFrom = true\n      this.addNewEventDialog(date)\n    },\n    openEditEvent (event) {\n      const e = this.$store.getters['calendar/getEvent'](event.id)\n      this.id = e.id\n      this.title = e.title\n      this.startDate = e.startDate\n      this.endDate = e.endDate\n      this.url = e.url\n      this.labelLocal = e.label\n      this.activePromptEditEvent = true\n    },\n    editEvent () {\n      const obj = { id: this.id, title: this.title, startDate: this.startDate, endDate: this.endDate, label: this.labelLocal, url: this.url }\n      obj.classes = `event-${  this.labelColor(this.labelLocal)}`\n      this.$store.dispatch('calendar/editEvent', obj)\n    },\n    removeEvent () {\n      this.$store.dispatch('calendar/removeEvent', this.id)\n    },\n    eventDragged (event, date) {\n      this.$store.dispatch('calendar/eventDragged', {event, date})\n    }\n  },\n  created () {\n    this.$store.registerModule('calendar', moduleCalendar)\n    this.$store.dispatch('calendar/fetchEvents')\n    this.$store.dispatch('calendar/fetchEventLabels')\n  },\n  beforeDestroy () {\n    this.$store.unregisterModule('calendar')\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"@/assets/scss/vuexy/apps/simple-calendar.scss\";\n</style>\n"]}]}