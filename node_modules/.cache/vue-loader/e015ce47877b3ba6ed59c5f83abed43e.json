{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/charts-and-maps/charts/chartjs/ChartjsBubbleChart.vue?vue&type=template&id=e64ed4ce&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/charts-and-maps/charts/chartjs/ChartjsBubbleChart.vue","mtime":1610509510826},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1610344923547},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"vx-card\",\n    {\n      staticClass: \"mb-base\",\n      attrs: { title: \"Bubble Chart\", \"code-toggler\": \"\" }\n    },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"mt-5\" },\n        [\n          _c(\"chartjs-component-bubble-chart\", {\n            attrs: { height: 250, data: _vm.data, options: _vm.options }\n          })\n        ],\n        1\n      ),\n      _c(\"template\", { slot: \"codeContainer\" }, [\n        _vm._v(\n          '\\n<script>\\nimport { Bubble } from \\'vue-chartjs\\'\\n\\nexport default {\\n  extends: Line,\\n  data() {\\n    return {\\n      data: {\\n        labels: \"Africa\",\\n        datasets: [{\\n          label: [\"China\"],\\n          backgroundColor: \"rgba(255,221,50,0.2)\",\\n          borderColor: \"rgba(255,221,50,1)\",\\n          data: [{\\n            x: 21269017,\\n            y: 5.245,\\n            r: 15\\n          }]\\n        }, {\\n          label: [\"Denmark\"],\\n          backgroundColor: \"rgba(60,186,159,0.2)\",\\n          borderColor: \"rgba(60,186,159,1)\",\\n          data: [{\\n            x: 258702,\\n            y: 7.526,\\n            r: 10\\n          }]\\n        }, {\\n          label: [\"Germany\"],\\n          backgroundColor: \"rgba(0,0,0,0.2)\",\\n          borderColor: \"#000\",\\n          data: [{\\n            x: 3979083,\\n            y: 6.994,\\n            r: 15\\n          }]\\n        }, {\\n          label: [\"Japan\"],\\n          backgroundColor: \"rgba(193,46,12,0.2)\",\\n          borderColor: \"rgba(193,46,12,1)\",\\n          data: [{\\n            x: 4931877,\\n            y: 5.921,\\n            r: 15\\n          }]\\n        }]\\n      },\\n      options: {\\n        title: {\\n          display: true,\\n          text: \\'Predicted world population (millions) in 2050\\'\\n        },\\n        scales: {\\n          yAxes: [{\\n            scaleLabel: {\\n              display: true,\\n              labelString: \"Happiness\"\\n            }\\n          }],\\n          xAxes: [{\\n            scaleLabel: {\\n              display: true,\\n              labelString: \"GDP (PPP)\"\\n            }\\n          }]\\n        }\\n      }\\n    }\\n  }\\n  mounted () {\\n    this.renderChart(this.data, this.options)\\n  }\\n}\\n</script>\\n        '\n        )\n      ])\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}