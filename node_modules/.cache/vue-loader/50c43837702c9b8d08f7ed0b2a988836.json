{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink-project/src/views/ui-elements/colors/ColorsChangeColor.vue?vue&type=template&id=458999bd&scoped=true&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink-project/src/views/ui-elements/colors/ColorsChangeColor.vue","mtime":1610509510883},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1610344923547},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"vx-card\",\n    { attrs: { title: \"Change Color\", \"code-toggler\": \"\" } },\n    [\n      _c(\"p\", [\n        _vm._v(\n          \"You can change the color of the application in process of execution with the function $vs.theme which as a parameter requires a json with the colors to change\"\n        )\n      ]),\n      _c(\"p\", [\n        _vm._v(\n          \"Imagine that in the middle of the application we want the primary color change would be something like this:\"\n        )\n      ]),\n      _c(\"prism\", { staticClass: \"rounded-lg\", attrs: { language: \"js\" } }, [\n        _vm._v(\n          \"\\nthis.$vs.theme({\\n  primary:'rgb(5, 173, 88)' // my new color\\n})\\n        \"\n        )\n      ]),\n      _c(\"p\", { staticClass: \"mt-5\" }, [\n        _vm._v(\"By doing this, all \"),\n        _c(\"strong\", [_vm._v(\"Vuesax\")]),\n        _vm._v(\n          \" components and other components which uses primary color in the application will change. Select one of the colors to change it and that all the components of this application will have that color.\"\n        )\n      ]),\n      _c(\"ul\", { staticClass: \"demo-alignment text-white\" }, [\n        _c(\"li\", { staticClass: \"bg-primary\" }, [\n          _c(\"input\", {\n            staticClass: \"absolute w-full h-full cursor-pointer opacity-0\",\n            attrs: { type: \"color\", name: \"\", value: \"\" },\n            on: {\n              change: function($event) {\n                return _vm.changeColor($event.target.value, \"primary\")\n              }\n            }\n          }),\n          _vm._v(\"\\n                primary\\n            \")\n        ]),\n        _c(\"li\", { staticClass: \"bg-success\" }, [\n          _c(\"input\", {\n            staticClass: \"absolute w-full h-full cursor-pointer opacity-0\",\n            attrs: { type: \"color\", name: \"\", value: \"\" },\n            on: {\n              change: function($event) {\n                return _vm.changeColor($event.target.value, \"success\")\n              }\n            }\n          }),\n          _vm._v(\"\\n                success\\n            \")\n        ]),\n        _c(\"li\", { staticClass: \"bg-danger\" }, [\n          _c(\"input\", {\n            staticClass: \"absolute w-full h-full cursor-pointer opacity-0\",\n            attrs: { type: \"color\", name: \"\", value: \"\" },\n            on: {\n              change: function($event) {\n                return _vm.changeColor($event.target.value, \"danger\")\n              }\n            }\n          }),\n          _vm._v(\"\\n                danger\\n            \")\n        ]),\n        _c(\"li\", { staticClass: \"bg-warning\" }, [\n          _c(\"input\", {\n            staticClass: \"absolute w-full h-full cursor-pointer opacity-0\",\n            attrs: { type: \"color\", name: \"\", value: \"\" },\n            on: {\n              change: function($event) {\n                return _vm.changeColor($event.target.value, \"warning\")\n              }\n            }\n          }),\n          _vm._v(\"\\n                warning\\n            \")\n        ]),\n        _c(\"li\", { staticClass: \"bg-dark\" }, [\n          _c(\"input\", {\n            staticClass: \"absolute w-full h-full cursor-pointer opacity-0\",\n            attrs: { type: \"color\", name: \"\", value: \"\" },\n            on: {\n              change: function($event) {\n                return _vm.changeColor($event.target.value, \"dark\")\n              }\n            }\n          }),\n          _vm._v(\"\\n                dark\\n            \")\n        ])\n      ]),\n      _c(\"template\", { slot: \"codeContainer\" }, [\n        _vm._v(\n          '\\n<template>\\n  <ul class=\"demo-alignment text-white\">\\n    <li class=\"colorprimaryx\">\\n      <input @change=\"changeColor($event.target.value,\\'primary\\')\" type=\"color\" name=\"\" value=\"\">\\n      primary\\n    </li>\\n    <li class=\"colorsuccessx\">\\n      <input @change=\"changeColor($event.target.value,\\'success\\')\" type=\"color\" name=\"\" value=\"\">\\n      success\\n    </li>\\n    <li class=\"colordangerx\">\\n      <input @change=\"changeColor($event.target.value,\\'danger\\')\" type=\"color\" name=\"\" value=\"\">\\n      danger\\n    </li>\\n    <li class=\"colorwarningx\">\\n      <input @change=\"changeColor($event.target.value,\\'warning\\')\" type=\"color\" name=\"\" value=\"\">\\n      warning\\n    </li>\\n    <li class=\"colordarkx\">\\n      <input @change=\"changeColor($event.target.value,\\'dark\\')\" type=\"color\" name=\"\" value=\"\">\\n      dark\\n    </li>\\n  </ul>\\n</template>\\n\\n<script>\\nexport default {\\n  methods: {\\n    changeColor(colorx, whatColor) {\\n      this.$vs.theme({\\n        [whatColor]: colorx\\n      })\\n    }\\n  }\\n}\\n</script>\\n\\n<style lang=\"css\" scoped>\\n.colorprimaryx {\\n  background: rgb(var(--vs-primary)) !important;\\n}\\n\\n.colorsuccessx {\\n  background: rgb(var(--vs-success)) !important;\\n}\\n\\n.colordangerx {\\n  background: rgb(var(--vs-danger)) !important;\\n}\\n\\n.colorwarningx {\\n  background: rgb(var(--vs-warning)) !important;\\n}\\n\\n.colordarkx {\\n  background: rgb(var(--vs-dark)) !important;\\n}\\n</style>\\n        '\n        )\n      ])\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}