{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink3-admin/src/layouts/main/Main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/src/layouts/main/Main.vue","mtime":1610509510812},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/thread-loader/dist/cjs.js","mtime":1610344922450},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/babel-loader/lib/index.js","mtime":1610344922456},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport BackToTop           from 'vue-backtotop'\nimport HNavMenu            from '@/layouts/components/horizontal-nav-menu/HorizontalNavMenu.vue'\nimport navMenuItems        from '@/layouts/components/vertical-nav-menu/navMenuItems.js'\nimport TheCustomizer       from '@/layouts/components/customizer/TheCustomizer.vue'\nimport TheNavbarHorizontal from '@/layouts/components/navbar/TheNavbarHorizontal.vue'\nimport TheNavbarVertical   from '@/layouts/components/navbar/TheNavbarVertical.vue'\nimport TheFooter           from '@/layouts/components/TheFooter.vue'\nimport themeConfig         from '@/../themeConfig.js'\nimport VNavMenu            from '@/layouts/components/vertical-nav-menu/VerticalNavMenu.vue'\n\nconst VxTour = () => import('@/components/VxTour.vue')\n\nexport default {\n  components: {\n    BackToTop,\n    HNavMenu,\n    TheCustomizer,\n    TheFooter,\n    TheNavbarHorizontal,\n    TheNavbarVertical,\n    VNavMenu,\n    VxTour\n  },\n  data () {\n    return {\n      disableCustomizer : themeConfig.disableCustomizer,\n      disableThemeTour  : themeConfig.disableThemeTour,\n      dynamicWatchers   : {},\n      footerType        : themeConfig.footerType  || 'static',\n      hideScrollToTop   : themeConfig.hideScrollToTop,\n      isNavbarDark      : false,\n      navbarColor       : themeConfig.navbarColor || '#fff',\n      navbarType        : themeConfig.navbarType  || 'floating',\n      navMenuItems,\n      routerTransition  : themeConfig.routerTransition || 'none',\n      routeTitle        : this.$route.meta.pageTitle,\n      steps: [\n        {\n          target  : '#btnVNavMenuMinToggler',\n          content : 'Toggle Collapse Sidebar.'\n        },\n        {\n          target  : '.vx-navbar__starred-pages',\n          content : 'Create your own bookmarks. You can also re-arrange them using drag & drop.'\n        },\n        {\n          target  : '.i18n-locale',\n          content : 'You can change language from here.'\n        },\n        {\n          target  : '.navbar-fuzzy-search',\n          content : 'Try fuzzy search to visit pages in flash.'\n        },\n        {\n          target  : '.customizer-btn',\n          content : 'Customize template based on your preference',\n          params  : {\n            placement: 'left'\n          }\n        },\n        {\n          target  : '.vs-button.buy-now',\n          content : 'Buy this awesomeness at affordable price!',\n          params  : {\n            placement: 'top'\n          }\n        }\n      ]\n    }\n  },\n  watch: {\n    '$route' () {\n      this.routeTitle = this.$route.meta.pageTitle\n    },\n    isThemeDark (val) {\n      const color = this.navbarColor === '#fff' && val ? '#10163a' : '#fff'\n      this.updateNavbarColor(color)\n    },\n    '$store.state.mainLayoutType' (val) {\n      this.setNavMenuVisibility(val)\n      this.disableThemeTour = true\n    }\n  },\n  computed: {\n    bodyOverlay () { return this.$store.state.bodyOverlay },\n    contentAreaClass () {\n      if (this.mainLayoutType === 'vertical') {\n        if      (this.verticalNavMenuWidth === 'default') return 'content-area-reduced'\n        else if (this.verticalNavMenuWidth === 'reduced') return 'content-area-lg'\n        else return 'content-area-full'\n      } else return 'content-area-full'\n    },\n    footerClasses () {\n      return {\n        'footer-hidden': this.footerType === 'hidden',\n        'footer-sticky': this.footerType === 'sticky',\n        'footer-static': this.footerType === 'static'\n      }\n    },\n    isAppPage () {\n      return this.$route.meta.no_scroll\n    },\n    isThemeDark ()     { return this.$store.state.theme === 'dark' },\n    layoutTypeClass () { return `main-${this.mainLayoutType}`      },\n    mainLayoutType ()  { return this.$store.state.mainLayoutType   },\n    navbarClasses ()   {\n      return {\n        'navbar-hidden'   : this.navbarType === 'hidden',\n        'navbar-sticky'   : this.navbarType === 'sticky',\n        'navbar-static'   : this.navbarType === 'static',\n        'navbar-floating' : this.navbarType === 'floating'\n      }\n    },\n    verticalNavMenuWidth () { return this.$store.state.verticalNavMenuWidth },\n    windowWidth ()          { return this.$store.state.windowWidth }\n  },\n  methods: {\n    changeRouteTitle (title) {\n      this.routeTitle = title\n    },\n    updateNavbar (val) {\n      if (val === 'static') this.updateNavbarColor(this.isThemeDark ? '#10163a' : '#fff')\n      this.navbarType = val\n    },\n    updateNavbarColor (val) {\n      this.navbarColor = val\n      if (val === '#fff') this.isNavbarDark = false\n      else this.isNavbarDark = true\n    },\n    updateFooter (val) {\n      this.footerType = val\n    },\n    updateRouterTransition (val) {\n      this.routerTransition = val\n    },\n    setNavMenuVisibility (layoutType) {\n      if ((layoutType === 'horizontal' && this.windowWidth >= 1200) || (layoutType === 'vertical' && this.windowWidth < 1200)) {\n        this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', false)\n        this.$store.dispatch('updateVerticalNavMenuWidth', 'no-nav-menu')\n      } else {\n        this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', true)\n      }\n    },\n    toggleHideScrollToTop (val) {\n      this.hideScrollToTop = val\n    }\n  },\n  created () {\n    const color = this.navbarColor === '#fff' && this.isThemeDark ? '#10163a' : this.navbarColor\n    this.updateNavbarColor(color)\n    this.setNavMenuVisibility(this.$store.state.mainLayoutType)\n\n    // Dynamic Watchers for tour\n    // Reason: Once tour is disabled it is not required to enable it.\n    // So, watcher is required for just disabling it.\n    this.dynamicWatchers.windowWidth = this.$watch('$store.state.windowWidth', (val) => {\n      if (val < 1200) {\n        this.disableThemeTour = true\n        this.dynamicWatchers.windowWidth()\n      }\n    })\n\n    this.dynamicWatchers.verticalNavMenuWidth = this.$watch('$store.state.verticalNavMenuWidth', () => {\n      this.disableThemeTour = true\n      this.dynamicWatchers.verticalNavMenuWidth()\n    })\n\n    this.dynamicWatchers.rtl = this.$watch('$vs.rtl', () => {\n      this.disableThemeTour = true\n      this.dynamicWatchers.rtl()\n    })\n  },\n  beforeDestroy () {\n    Object.keys(this.dynamicWatchers).map(i => {\n      this.dynamicWatchers[i]()\n      delete this.dynamicWatchers[i]\n    })\n  }\n}\n\n",{"version":3,"sources":["Main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"Main.vue","sourceRoot":"src/layouts/main","sourcesContent":["<!-- =========================================================================================\n    File Name: Main.vue\n    Description: Main layout\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n    Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n  <div class=\"layout--main\" :class=\"[layoutTypeClass, navbarClasses, footerClasses, {'no-scroll': isAppPage}]\">\n\n    <vx-tour :steps=\"steps\" v-if=\"!disableThemeTour && (windowWidth >= 1200 && mainLayoutType === 'vertical' && verticalNavMenuWidth == 'default')\" />\n\n    <the-customizer\n      v-if                    = \"!disableCustomizer\"\n      :footerType             = \"footerType\"\n      :hideScrollToTop        = \"hideScrollToTop\"\n      :navbarType             = \"navbarType\"\n      :navbarColor            = \"navbarColor\"\n      :routerTransition       = \"routerTransition\"\n      @toggleHideScrollToTop  = \"toggleHideScrollToTop\"\n      @updateFooter           = \"updateFooter\"\n      @updateNavbar           = \"updateNavbar\"\n      @updateNavbarColor      = \"updateNavbarColor\"\n      @updateRouterTransition = \"updateRouterTransition\" />\n\n    <v-nav-menu\n      :navMenuItems = \"navMenuItems\"\n      title         = \"Vuexy\"\n      parent        = \".layout--main\" />\n\n    <div id=\"content-area\" :class=\"[contentAreaClass, {'show-overlay': bodyOverlay}]\">\n      <div id=\"content-overlay\" />\n\n    <!-- Navbar -->\n    <template v-if=\"mainLayoutType === 'horizontal' && windowWidth >= 1200\">\n      <the-navbar-horizontal\n        :navbarType= \"navbarType\"\n        :class=\"[\n          {'text-white' : isNavbarDark  && !isThemeDark},\n          {'text-base'  : !isNavbarDark && isThemeDark}\n        ]\" />\n\n      <div style=\"height: 62px\" v-if=\"navbarType === 'static'\"></div>\n\n      <h-nav-menu\n        :class=\"[\n          {'text-white' : isNavbarDark  && !isThemeDark},\n          {'text-base'  : !isNavbarDark && isThemeDark}\n        ]\"\n        :navMenuItems=\"navMenuItems\" />\n    </template>\n\n    <template v-else>\n      <the-navbar-vertical\n        :navbarColor=\"navbarColor\"\n        :class=\"[\n          {'text-white' : isNavbarDark  && !isThemeDark},\n          {'text-base'  : !isNavbarDark && isThemeDark}\n        ]\" />\n    </template>\n    <!-- /Navbar -->\n\n      <div class=\"content-wrapper\">\n\n        <div class=\"router-view\">\n          <div class=\"router-content\">\n\n            <transition :name=\"routerTransition\">\n\n              <div v-if=\"$route.meta.breadcrumb || $route.meta.pageTitle\" class=\"router-header flex flex-wrap items-center mb-6\">\n                <div\n                  class=\"content-area__heading\"\n                  :class=\"{'pr-4 border-0 md:border-r border-solid border-grey-light' : $route.meta.breadcrumb}\">\n                  <h2 class=\"mb-1\">{{ routeTitle }}</h2>\n                </div>\n\n                <!-- BREADCRUMB -->\n                <vx-breadcrumb class=\"ml-4 md:block hidden\" v-if=\"$route.meta.breadcrumb\" :route=\"$route\" :isRTL=\"$vs.rtl\" />\n\n                <!-- DROPDOWN -->\n                <vs-dropdown vs-trigger-click class=\"ml-auto md:block hidden cursor-pointer\">\n                  <vs-button radius icon=\"icon-settings\" icon-pack=\"feather\" />\n\n                  <vs-dropdown-menu class=\"w-32\">\n                    <vs-dropdown-item>\n                      <div @click=\"$router.push('/pages/profile').catch(() => {})\" class=\"flex items-center\">\n                        <feather-icon icon=\"UserIcon\" class=\"inline-block mr-2\" svgClasses=\"w-4 h-4\" />\n                        <span>Profile</span>\n                      </div>\n                    </vs-dropdown-item>\n                    <vs-dropdown-item>\n                      <div @click=\"$router.push('/apps/todo').catch(() => {})\" class=\"flex items-center\">\n                        <feather-icon icon=\"CheckSquareIcon\" class=\"inline-block mr-2\" svgClasses=\"w-4 h-4\" />\n                        <span>Tasks</span>\n                      </div>\n                    </vs-dropdown-item>\n                    <vs-dropdown-item>\n                      <div @click=\"$router.push('/apps/email').catch(() => {})\" class=\"flex items-center\">\n                        <feather-icon icon=\"MailIcon\" class=\"inline-block mr-2\" svgClasses=\"w-4 h-4\" />\n                        <span>Inbox</span>\n                      </div>\n                    </vs-dropdown-item>\n                  </vs-dropdown-menu>\n\n                </vs-dropdown>\n\n              </div>\n            </transition>\n\n            <div class=\"content-area__content\">\n\n              <back-to-top bottom=\"5%\" :right=\"$vs.rtl ? 'calc(100% - 2.2rem - 38px)' : '30px'\" visibleoffset=\"500\" v-if=\"!hideScrollToTop\">\n                <vs-button icon-pack=\"feather\" icon=\"icon-arrow-up\" class=\"shadow-lg btn-back-to-top\" />\n              </back-to-top>\n\n              <transition :name=\"routerTransition\" mode=\"out-in\">\n                <router-view @changeRouteTitle=\"changeRouteTitle\" @setAppClasses=\"(classesStr) => $emit('setAppClasses', classesStr)\" />\n              </transition>\n            </div>\n          </div>\n        </div>\n      </div>\n      <the-footer />\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport BackToTop           from 'vue-backtotop'\nimport HNavMenu            from '@/layouts/components/horizontal-nav-menu/HorizontalNavMenu.vue'\nimport navMenuItems        from '@/layouts/components/vertical-nav-menu/navMenuItems.js'\nimport TheCustomizer       from '@/layouts/components/customizer/TheCustomizer.vue'\nimport TheNavbarHorizontal from '@/layouts/components/navbar/TheNavbarHorizontal.vue'\nimport TheNavbarVertical   from '@/layouts/components/navbar/TheNavbarVertical.vue'\nimport TheFooter           from '@/layouts/components/TheFooter.vue'\nimport themeConfig         from '@/../themeConfig.js'\nimport VNavMenu            from '@/layouts/components/vertical-nav-menu/VerticalNavMenu.vue'\n\nconst VxTour = () => import('@/components/VxTour.vue')\n\nexport default {\n  components: {\n    BackToTop,\n    HNavMenu,\n    TheCustomizer,\n    TheFooter,\n    TheNavbarHorizontal,\n    TheNavbarVertical,\n    VNavMenu,\n    VxTour\n  },\n  data () {\n    return {\n      disableCustomizer : themeConfig.disableCustomizer,\n      disableThemeTour  : themeConfig.disableThemeTour,\n      dynamicWatchers   : {},\n      footerType        : themeConfig.footerType  || 'static',\n      hideScrollToTop   : themeConfig.hideScrollToTop,\n      isNavbarDark      : false,\n      navbarColor       : themeConfig.navbarColor || '#fff',\n      navbarType        : themeConfig.navbarType  || 'floating',\n      navMenuItems,\n      routerTransition  : themeConfig.routerTransition || 'none',\n      routeTitle        : this.$route.meta.pageTitle,\n      steps: [\n        {\n          target  : '#btnVNavMenuMinToggler',\n          content : 'Toggle Collapse Sidebar.'\n        },\n        {\n          target  : '.vx-navbar__starred-pages',\n          content : 'Create your own bookmarks. You can also re-arrange them using drag & drop.'\n        },\n        {\n          target  : '.i18n-locale',\n          content : 'You can change language from here.'\n        },\n        {\n          target  : '.navbar-fuzzy-search',\n          content : 'Try fuzzy search to visit pages in flash.'\n        },\n        {\n          target  : '.customizer-btn',\n          content : 'Customize template based on your preference',\n          params  : {\n            placement: 'left'\n          }\n        },\n        {\n          target  : '.vs-button.buy-now',\n          content : 'Buy this awesomeness at affordable price!',\n          params  : {\n            placement: 'top'\n          }\n        }\n      ]\n    }\n  },\n  watch: {\n    '$route' () {\n      this.routeTitle = this.$route.meta.pageTitle\n    },\n    isThemeDark (val) {\n      const color = this.navbarColor === '#fff' && val ? '#10163a' : '#fff'\n      this.updateNavbarColor(color)\n    },\n    '$store.state.mainLayoutType' (val) {\n      this.setNavMenuVisibility(val)\n      this.disableThemeTour = true\n    }\n  },\n  computed: {\n    bodyOverlay () { return this.$store.state.bodyOverlay },\n    contentAreaClass () {\n      if (this.mainLayoutType === 'vertical') {\n        if      (this.verticalNavMenuWidth === 'default') return 'content-area-reduced'\n        else if (this.verticalNavMenuWidth === 'reduced') return 'content-area-lg'\n        else return 'content-area-full'\n      } else return 'content-area-full'\n    },\n    footerClasses () {\n      return {\n        'footer-hidden': this.footerType === 'hidden',\n        'footer-sticky': this.footerType === 'sticky',\n        'footer-static': this.footerType === 'static'\n      }\n    },\n    isAppPage () {\n      return this.$route.meta.no_scroll\n    },\n    isThemeDark ()     { return this.$store.state.theme === 'dark' },\n    layoutTypeClass () { return `main-${this.mainLayoutType}`      },\n    mainLayoutType ()  { return this.$store.state.mainLayoutType   },\n    navbarClasses ()   {\n      return {\n        'navbar-hidden'   : this.navbarType === 'hidden',\n        'navbar-sticky'   : this.navbarType === 'sticky',\n        'navbar-static'   : this.navbarType === 'static',\n        'navbar-floating' : this.navbarType === 'floating'\n      }\n    },\n    verticalNavMenuWidth () { return this.$store.state.verticalNavMenuWidth },\n    windowWidth ()          { return this.$store.state.windowWidth }\n  },\n  methods: {\n    changeRouteTitle (title) {\n      this.routeTitle = title\n    },\n    updateNavbar (val) {\n      if (val === 'static') this.updateNavbarColor(this.isThemeDark ? '#10163a' : '#fff')\n      this.navbarType = val\n    },\n    updateNavbarColor (val) {\n      this.navbarColor = val\n      if (val === '#fff') this.isNavbarDark = false\n      else this.isNavbarDark = true\n    },\n    updateFooter (val) {\n      this.footerType = val\n    },\n    updateRouterTransition (val) {\n      this.routerTransition = val\n    },\n    setNavMenuVisibility (layoutType) {\n      if ((layoutType === 'horizontal' && this.windowWidth >= 1200) || (layoutType === 'vertical' && this.windowWidth < 1200)) {\n        this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', false)\n        this.$store.dispatch('updateVerticalNavMenuWidth', 'no-nav-menu')\n      } else {\n        this.$store.commit('TOGGLE_IS_VERTICAL_NAV_MENU_ACTIVE', true)\n      }\n    },\n    toggleHideScrollToTop (val) {\n      this.hideScrollToTop = val\n    }\n  },\n  created () {\n    const color = this.navbarColor === '#fff' && this.isThemeDark ? '#10163a' : this.navbarColor\n    this.updateNavbarColor(color)\n    this.setNavMenuVisibility(this.$store.state.mainLayoutType)\n\n    // Dynamic Watchers for tour\n    // Reason: Once tour is disabled it is not required to enable it.\n    // So, watcher is required for just disabling it.\n    this.dynamicWatchers.windowWidth = this.$watch('$store.state.windowWidth', (val) => {\n      if (val < 1200) {\n        this.disableThemeTour = true\n        this.dynamicWatchers.windowWidth()\n      }\n    })\n\n    this.dynamicWatchers.verticalNavMenuWidth = this.$watch('$store.state.verticalNavMenuWidth', () => {\n      this.disableThemeTour = true\n      this.dynamicWatchers.verticalNavMenuWidth()\n    })\n\n    this.dynamicWatchers.rtl = this.$watch('$vs.rtl', () => {\n      this.disableThemeTour = true\n      this.dynamicWatchers.rtl()\n    })\n  },\n  beforeDestroy () {\n    Object.keys(this.dynamicWatchers).map(i => {\n      this.dynamicWatchers[i]()\n      delete this.dynamicWatchers[i]\n    })\n  }\n}\n\n</script>\n\n"]}]}