{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/forms/form-elements/select/SelectGroupItems.vue?vue&type=template&id=4ce597b7&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/forms/form-elements/select/SelectGroupItems.vue","mtime":1610509510872},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1610344923547},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"vx-card\",\n    { attrs: { title: \"Group items\", \"code-toggler\": \"\" } },\n    [\n      _c(\"p\", [\n        _vm._v(\"You can group elements with the sub component \"),\n        _c(\"code\", [_vm._v(\"vs-select-group\")])\n      ]),\n      _c(\n        \"div\",\n        { staticClass: \"demo-alignment\" },\n        [\n          _c(\n            \"vs-select\",\n            {\n              staticClass: \"selectExample\",\n              model: {\n                value: _vm.select81,\n                callback: function($$v) {\n                  _vm.select81 = $$v\n                },\n                expression: \"select81\"\n              }\n            },\n            _vm._l(_vm.options81, function(item, index) {\n              return _c(\n                \"div\",\n                { key: index },\n                [\n                  item.group\n                    ? _c(\n                        \"vs-select-group\",\n                        { attrs: { title: item.title } },\n                        _vm._l(item.group, function(item, index) {\n                          return _c(\"vs-select-item\", {\n                            key: index,\n                            attrs: { value: item.value, text: item.text }\n                          })\n                        }),\n                        1\n                      )\n                    : _vm._e()\n                ],\n                1\n              )\n            }),\n            0\n          ),\n          _c(\n            \"vs-select\",\n            {\n              staticClass: \"selectExample\",\n              attrs: { \"vs-multiple\": \"\" },\n              model: {\n                value: _vm.select82,\n                callback: function($$v) {\n                  _vm.select82 = $$v\n                },\n                expression: \"select82\"\n              }\n            },\n            _vm._l(_vm.options82, function(item, index) {\n              return _c(\n                \"div\",\n                { key: index },\n                [\n                  item.group\n                    ? _c(\n                        \"vs-select-group\",\n                        { attrs: { title: item.title } },\n                        _vm._l(item.group, function(item, index) {\n                          return _c(\"vs-select-item\", {\n                            key: index,\n                            attrs: { value: item.value, text: item.text }\n                          })\n                        }),\n                        1\n                      )\n                    : _vm._e()\n                ],\n                1\n              )\n            }),\n            0\n          ),\n          _c(\n            \"vs-select\",\n            {\n              staticClass: \"selectExample\",\n              attrs: { \"vs-autocomplete\": \"\" },\n              model: {\n                value: _vm.select83,\n                callback: function($$v) {\n                  _vm.select83 = $$v\n                },\n                expression: \"select83\"\n              }\n            },\n            _vm._l(_vm.options83, function(item, index) {\n              return _c(\n                \"div\",\n                { key: index },\n                [\n                  item.group\n                    ? _c(\n                        \"vs-select-group\",\n                        { attrs: { title: item.title } },\n                        _vm._l(item.group, function(item, index) {\n                          return _c(\"vs-select-item\", {\n                            key: index,\n                            attrs: { value: item.value, text: item.text }\n                          })\n                        }),\n                        1\n                      )\n                    : _vm._e()\n                ],\n                1\n              )\n            }),\n            0\n          )\n        ],\n        1\n      ),\n      _c(\"template\", { slot: \"codeContainer\" }, [\n        _vm._v(\n          \"\\n<template lang=\\\"html\\\">\\n  <div class=\\\"con-select-example\\\">\\n\\n    <vs-select class=\\\"selectExample\\\" vs-label=\\\"Defautl\\\" v-model=\\\"select1\\\">\\n      <div :key=\\\"index\\\" v-for=\\\"(item,index) in options1\\\">\\n\\n        <vs-select-group :title=\\\"item.title\\\" v-if=\\\"item.group\\\">\\n          <vs-select-item :key=\\\"index\\\" :value=\\\"item.value\\\" :text=\\\"item.text\\\" v-for=\\\"(item,index) in item.group\\\" />\\n        </vs-select-group>\\n\\n      </div>\\n    </vs-select>\\n\\n    <vs-select vs-multiple class=\\\"selectExample\\\" vs-label=\\\"Multiple\\\" v-model=\\\"select2\\\">\\n      <div :key=\\\"index\\\" v-for=\\\"(item,index) in options2\\\">\\n\\n        <vs-select-group :title=\\\"item.title\\\" v-if=\\\"item.group\\\">\\n          <vs-select-item :key=\\\"index\\\" :value=\\\"item.value\\\" :text=\\\"item.text\\\" v-for=\\\"(item,index) in item.group\\\" />\\n        </vs-select-group>\\n\\n      </div>\\n    </vs-select>\\n\\n    <vs-select vs-autocomplete class=\\\"selectExample\\\" vs-label=\\\"Autocomplete\\\" v-model=\\\"select3\\\">\\n      <div :key=\\\"index\\\" v-for=\\\"(item,index) in options3\\\">\\n\\n        <vs-select-group :title=\\\"item.title\\\" v-if=\\\"item.group\\\">\\n          <vs-select-item :key=\\\"index\\\" :value=\\\"item.value\\\" :text=\\\"item.text\\\" v-for=\\\"(item,index) in item.group\\\" />\\n        </vs-select-group>\\n\\n      </div>\\n    </vs-select>\\n  </div>\\n</template>\\n\\n<script>\\nexport default {\\n  data() {\\n    return {\\n      select1: 6,\\n      select2: [6],\\n      select3: ['red'],\\n      options1: [{\\n          title: 'Figures',\\n          group: [\\n            { text: 'Romboid', value: 4 },\\n            { text: 'Trapeze', value: 5 },\\n            { text: 'Triangle', value: 6 },\\n            { text: 'Polygon', value: 7 },\\n          ]\\n        },\\n        {\\n          title: 'Colors',\\n          group: [\\n            { text: 'Red', value: 'red' },\\n            { text: 'Green', value: 'green' },\\n            { text: 'Blue', value: 'blue' },\\n            { text: 'Purple', value: 'purple' },\\n          ]\\n        }\\n      ],\\n      options2: [{\\n          title: 'Figures',\\n          group: [\\n            { text: 'Romboid', value: 4 },\\n            { text: 'Trapeze', value: 5 },\\n            { text: 'Triangle', value: 6 },\\n            { text: 'Polygon', value: 7 },\\n          ]\\n        },\\n        {\\n          title: 'Colors',\\n          group: [\\n            { text: 'Red', value: 'red' },\\n            { text: 'Green', value: 'green' },\\n            { text: 'Blue', value: 'blue' },\\n            { text: 'Purple', value: 'purple' },\\n          ]\\n        }\\n      ],\\n      options3: [{\\n          title: 'Figures',\\n          group: [\\n            { text: 'Romboid', value: 4 },\\n            { text: 'Trapeze', value: 5 },\\n            { text: 'Triangle', value: 6 },\\n            { text: 'Polygon', value: 7 },\\n          ]\\n        },\\n        {\\n          title: 'Colors',\\n          group: [\\n            { text: 'Red', value: 'red' },\\n            { text: 'Green', value: 'green' },\\n            { text: 'Blue', value: 'blue' },\\n            { text: 'Purple', value: 'purple' },\\n          ]\\n        }\\n      ],\\n    }\\n  },\\n}\\n</script>\\n        \"\n        )\n      ])\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}