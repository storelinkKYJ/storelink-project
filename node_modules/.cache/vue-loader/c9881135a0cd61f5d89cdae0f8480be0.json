{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/apps/user/user-edit/UserEditTabAccount.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/apps/user/user-edit/UserEditTabAccount.vue","mtime":1610509510824},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/thread-loader/dist/cjs.js","mtime":1610344922450},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/babel-loader/lib/index.js","mtime":1610344922456},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport vSelect from 'vue-select'\n\nexport default {\n  components: {\n    vSelect\n  },\n  props: {\n    data: {\n      type: Object,\n      required: true\n    }\n  },\n  data () {\n    return {\n\n      data_local: JSON.parse(JSON.stringify(this.data)),\n\n      statusOptions: [\n        { label: 'Active',  value: 'active' },\n        { label: 'Blocked',  value: 'blocked' },\n        { label: 'Deactivated',  value: 'deactivated' }\n      ],\n      roleOptions: [\n        { label: 'Admin',  value: 'admin' },\n        { label: 'User',  value: 'user' },\n        { label: 'Staff',  value: 'staff' }\n      ]\n    }\n  },\n  computed: {\n    status_local: {\n      get () {\n        return { label: this.capitalize(this.data_local.status),  value: this.data_local.status  }\n      },\n      set (obj) {\n        this.data_local.status = obj.value\n      }\n    },\n    role_local: {\n      get () {\n        return { label: this.capitalize(this.data_local.role),  value: this.data_local.role  }\n      },\n      set (obj) {\n        this.data_local.role = obj.value\n      }\n    },\n    validateForm () {\n      return !this.errors.any()\n    }\n  },\n  methods: {\n    capitalize (str) {\n      return str.slice(0, 1).toUpperCase() + str.slice(1, str.length)\n    },\n    save_changes () {\n      /* eslint-disable */\n      if (!this.validateForm) return\n\n      // Here will go your API call for updating data\n      // You can get data in \"this.data_local\"\n\n      /* eslint-enable */\n    },\n    reset_data () {\n      this.data_local = JSON.parse(JSON.stringify(this.data))\n    },\n    update_avatar () {\n      // You can update avatar Here\n      // For reference you can check dataList example\n      // We haven't integrated it here, because data isn't saved in DB\n    }\n  }\n}\n",{"version":3,"sources":["UserEditTabAccount.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserEditTabAccount.vue","sourceRoot":"src/views/apps/user/user-edit","sourcesContent":["<!-- =========================================================================================\n  File Name: UserEditTabInformation.vue\n  Description: User Edit Information Tab content\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n<template>\n  <div id=\"user-edit-tab-info\">\n\n    <!-- Avatar Row -->\n    <div class=\"vx-row\">\n      <div class=\"vx-col w-full\">\n        <div class=\"flex items-start flex-col sm:flex-row\">\n          <img :src=\"data.avatar\" class=\"mr-8 rounded h-24 w-24\" />\n          <!-- <vs-avatar :src=\"data.avatar\" size=\"80px\" class=\"mr-4\" /> -->\n          <div>\n            <p class=\"text-lg font-medium mb-2 mt-4 sm:mt-0\">{{ data.name  }}</p>\n            <input type=\"file\" class=\"hidden\" ref=\"update_avatar_input\" @change=\"update_avatar\" accept=\"image/*\">\n\n            <!-- Toggle comment of below buttons as one for actual flow & currently shown is only for demo -->\n            <vs-button class=\"mr-4 mb-4\">Change Avatar</vs-button>\n            <!-- <vs-button type=\"border\" class=\"mr-4\" @click=\"$refs.update_avatar_input.click()\">Change Avatar</vs-button> -->\n\n            <vs-button type=\"border\" color=\"danger\">Remove Avatar</vs-button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Content Row -->\n    <div class=\"vx-row\">\n      <div class=\"vx-col md:w-1/2 w-full\">\n        <vs-input class=\"w-full mt-4\" label=\"Username\" v-model=\"data_local.username\" v-validate=\"'required|alpha_num'\" name=\"username\" />\n        <span class=\"text-danger text-sm\"  v-show=\"errors.has('username')\">{{ errors.first('username') }}</span>\n\n        <vs-input class=\"w-full mt-4\" label=\"Name\" v-model=\"data_local.name\" v-validate=\"'required|alpha_spaces'\" name=\"name\" />\n        <span class=\"text-danger text-sm\"  v-show=\"errors.has('name')\">{{ errors.first('name') }}</span>\n\n        <vs-input class=\"w-full mt-4\" label=\"Email\" v-model=\"data_local.email\" type=\"email\" v-validate=\"'required|email'\" name=\"email\" />\n        <span class=\"text-danger text-sm\"  v-show=\"errors.has('email')\">{{ errors.first('email') }}</span>\n      </div>\n\n      <div class=\"vx-col md:w-1/2 w-full\">\n\n        <div class=\"mt-4\">\n          <label class=\"vs-input--label\">Status</label>\n          <v-select v-model=\"status_local\" :clearable=\"false\" :options=\"statusOptions\" v-validate=\"'required'\" name=\"status\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\n          <span class=\"text-danger text-sm\"  v-show=\"errors.has('status')\">{{ errors.first('status') }}</span>\n        </div>\n\n        <div class=\"mt-4\">\n          <label class=\"vs-input--label\">Role</label>\n          <v-select v-model=\"role_local\" :clearable=\"false\" :options=\"roleOptions\" v-validate=\"'required'\" name=\"role\" :dir=\"$vs.rtl ? 'rtl' : 'ltr'\" />\n          <span class=\"text-danger text-sm\"  v-show=\"errors.has('role')\">{{ errors.first('role') }}</span>\n        </div>\n\n        <vs-input class=\"w-full mt-4\" label=\"Company\" v-model=\"data_local.company\" v-validate=\"'alpha_spaces'\" name=\"company\" />\n        <span class=\"text-danger text-sm\"  v-show=\"errors.has('company')\">{{ errors.first('company') }}</span>\n\n      </div>\n    </div>\n\n    <!-- Permissions -->\n    <vx-card class=\"mt-base\" no-shadow card-border>\n\n      <div class=\"vx-row\">\n        <div class=\"vx-col w-full\">\n          <div class=\"flex items-end px-3\">\n            <feather-icon svgClasses=\"w-6 h-6\" icon=\"LockIcon\" class=\"mr-2\" />\n            <span class=\"font-medium text-lg leading-none\">Permissions</span>\n          </div>\n          <vs-divider />\n        </div>\n      </div>\n\n      <div class=\"block overflow-x-auto\">\n        <table class=\"w-full\">\n          <tr>\n            <!--\n              You can also use `Object.keys(Object.values(data_local.permissions)[0])` this logic if you consider,\n              our data structure. You just have to loop over above variable to get table headers.\n              Below we made it simple. So, everyone can understand.\n             -->\n            <th class=\"font-semibold text-base text-left px-3 py-2\" v-for=\"heading in ['Module', 'Read', 'Write', 'Create', 'Delete']\" :key=\"heading\">{{ heading }}</th>\n          </tr>\n\n          <tr v-for=\"(val, name) in data_local.permissions\" :key=\"name\">\n            <td class=\"px-3 py-2\">{{ name }}</td>\n            <td v-for=\"(permission, name) in val\" class=\"px-3 py-2\" :key=\"name+permission\">\n              <vs-checkbox v-model=\"val[name]\" />\n            </td>\n          </tr>\n        </table>\n      </div>\n\n    </vx-card>\n\n    <!-- Save & Reset Button -->\n    <div class=\"vx-row\">\n      <div class=\"vx-col w-full\">\n        <div class=\"mt-8 flex flex-wrap items-center justify-end\">\n          <vs-button class=\"ml-auto mt-2\" @click=\"save_changes\" :disabled=\"!validateForm\">Save Changes</vs-button>\n          <vs-button class=\"ml-4 mt-2\" type=\"border\" color=\"warning\" @click=\"reset_data\">Reset</vs-button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport vSelect from 'vue-select'\n\nexport default {\n  components: {\n    vSelect\n  },\n  props: {\n    data: {\n      type: Object,\n      required: true\n    }\n  },\n  data () {\n    return {\n\n      data_local: JSON.parse(JSON.stringify(this.data)),\n\n      statusOptions: [\n        { label: 'Active',  value: 'active' },\n        { label: 'Blocked',  value: 'blocked' },\n        { label: 'Deactivated',  value: 'deactivated' }\n      ],\n      roleOptions: [\n        { label: 'Admin',  value: 'admin' },\n        { label: 'User',  value: 'user' },\n        { label: 'Staff',  value: 'staff' }\n      ]\n    }\n  },\n  computed: {\n    status_local: {\n      get () {\n        return { label: this.capitalize(this.data_local.status),  value: this.data_local.status  }\n      },\n      set (obj) {\n        this.data_local.status = obj.value\n      }\n    },\n    role_local: {\n      get () {\n        return { label: this.capitalize(this.data_local.role),  value: this.data_local.role  }\n      },\n      set (obj) {\n        this.data_local.role = obj.value\n      }\n    },\n    validateForm () {\n      return !this.errors.any()\n    }\n  },\n  methods: {\n    capitalize (str) {\n      return str.slice(0, 1).toUpperCase() + str.slice(1, str.length)\n    },\n    save_changes () {\n      /* eslint-disable */\n      if (!this.validateForm) return\n\n      // Here will go your API call for updating data\n      // You can get data in \"this.data_local\"\n\n      /* eslint-enable */\n    },\n    reset_data () {\n      this.data_local = JSON.parse(JSON.stringify(this.data))\n    },\n    update_avatar () {\n      // You can update avatar Here\n      // For reference you can check dataList example\n      // We haven't integrated it here, because data isn't saved in DB\n    }\n  }\n}\n</script>\n"]}]}