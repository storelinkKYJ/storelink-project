{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink-project/src/views/forms/form-validation/FormValidationSimple.vue?vue&type=template&id=40b884d6&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink-project/src/views/forms/form-validation/FormValidationSimple.vue","mtime":1610509510876},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1610344923547},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"vx-card\",\n    { attrs: { title: \"Simple form validation\", \"code-toggler\": \"\" } },\n    [\n      _c(\"p\", [\n        _vm._v(\"Simple form validation before submitting form. Add \"),\n        _c(\"code\", [_vm._v(\"v-validate\")]),\n        _vm._v(\" directive to input.\")\n      ]),\n      _c(\"div\", { staticClass: \"mt-5\" }, [\n        _c(\n          \"form\",\n          [\n            _c(\"vs-input\", {\n              directives: [\n                {\n                  name: \"validate\",\n                  rawName: \"v-validate\",\n                  value: \"required\",\n                  expression: \"'required'\"\n                }\n              ],\n              staticClass: \"mt-5\",\n              attrs: { placeholder: \"Input 1\", name: \"input1\" },\n              model: {\n                value: _vm.value1,\n                callback: function($$v) {\n                  _vm.value1 = $$v\n                },\n                expression: \"value1\"\n              }\n            }),\n            _c(\n              \"span\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.errors.has(\"input1\"),\n                    expression: \"errors.has('input1')\"\n                  }\n                ],\n                staticClass: \"text-danger text-sm\"\n              },\n              [_vm._v(_vm._s(_vm.errors.first(\"input1\")))]\n            ),\n            _c(\"vs-input\", {\n              directives: [\n                {\n                  name: \"validate\",\n                  rawName: \"v-validate\",\n                  value: \"required\",\n                  expression: \"'required'\"\n                }\n              ],\n              staticClass: \"mt-5\",\n              attrs: { placeholder: \"Input 2\", name: \"input2\" },\n              model: {\n                value: _vm.value2,\n                callback: function($$v) {\n                  _vm.value2 = $$v\n                },\n                expression: \"value2\"\n              }\n            }),\n            _c(\n              \"span\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.errors.has(\"input2\"),\n                    expression: \"errors.has('input2')\"\n                  }\n                ],\n                staticClass: \"text-danger text-sm\"\n              },\n              [_vm._v(_vm._s(_vm.errors.first(\"input2\")))]\n            ),\n            _c(\n              \"vs-button\",\n              {\n                staticClass: \"mt-5 block\",\n                attrs: { type: \"filled\" },\n                on: {\n                  click: function($event) {\n                    $event.preventDefault()\n                    return _vm.submitForm($event)\n                  }\n                }\n              },\n              [_vm._v(\"Submit\")]\n            )\n          ],\n          1\n        )\n      ]),\n      _c(\"template\", { slot: \"codeContainer\" }, [\n        _vm._v(\n          '\\n<template>\\n  <form>\\n    <vs-input size=\"large\" v-validate=\"\\'required\\'\" placeholder=\"Input 1\" name=\"input1\" v-model=\"value1\" class=\"mt-5\" />\\n    <span class=\"text-danger text-sm\" v-show=\"errors.has(\\'input1\\')\">' +\n            _vm._s(\"{{ errors.first('input1') }}\") +\n            '</span>\\n\\n    <vs-input size=\"large\" v-validate=\"\\'required\\'\" placeholder=\"Input 2\" name=\"input2\" v-model=\"value2\" class=\"mt-5\" />\\n    <span class=\"text-danger text-sm\" v-show=\"errors.has(\\'input2\\')\">' +\n            _vm._s(\"{{ errors.first('input2') }}\") +\n            '</span>\\n\\n    <vs-button type=\"filled\" @click.prevent=\"submitForm\" class=\"mt-5 block\">Submit</vs-button>\\n  </form>\\n</template>\\n\\n<script>\\nexport default {\\n  data() {\\n    return {\\n      value1: \"\",\\n      value2: \"\",\\n    }\\n  },\\n  methods: {\\n    submitForm() {\\n      this.$validator.validateAll().then(result => {\\n        if(result) {\\n          // if form have no errors\\n          alert(\"form submitted!\");\\n        }else{\\n          // form have errors\\n        }\\n      })\\n    }\\n  },\\n}\\n</script>\\n        '\n        )\n      ])\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}