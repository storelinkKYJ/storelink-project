{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink-project/src/views/components/vuesax/slider/SliderRange.vue?vue&type=template&id=5751bd8c&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink-project/src/views/components/vuesax/slider/SliderRange.vue","mtime":1610509510866},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1610344923547},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["\n    <vx-card title=\"Range\" code-toggler>\n\n        <p>With Range you can allow the user to select a range inside a range of allowed values. You can use the v-model property with <strong>Array</strong> and a minimum and maximum value represented as: <code>[min, max]</code></p>\n        <div class=\"mt-5\">\n            <vs-slider color=\"warning\" v-model=\"value1\"/>\n            <vs-slider color=\"danger\" ticks step=\"10\" v-model=\"value2\"/>\n        </div>\n\n        <template slot=\"codeContainer\">\n&lt;template&gt;\n  &lt;vs-slider color=&quot;warning&quot; v-model=&quot;value1&quot;/&gt;\n  &lt;vs-slider color=&quot;danger&quot; ticks step=10 v-model=&quot;value2&quot;/&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data(){\n    return {\n      value1:[60,90],\n      value2:[30,40]\n    }\n  }\n}\n&lt;/script&gt;\n        </template>\n\n    </vx-card>\n",null]}