{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink-project/src/views/components/vuesax/chip/ChipCustomizeCloseClearChipIcon.vue?vue&type=template&id=907d568c&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink-project/src/views/components/vuesax/chip/ChipCustomizeCloseClearChipIcon.vue","mtime":1610509510855},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1610344923547},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"vx-card\",\n    {\n      attrs: {\n        title: \"Customize Close and Clear Chips Icons\",\n        \"code-toggler\": \"\"\n      }\n    },\n    [\n      _c(\"p\", [\n        _vm._v(\n          \"You can change the icons used for the close button and the clear button when using multiple chips with the \"\n        ),\n        _c(\"code\", [_vm._v(\"vs-chips\")]),\n        _vm._v(\" component.\")\n      ]),\n      _c(\"p\", [\n        _vm._v(\"For the main parameter, pass the \"),\n        _c(\"code\", [_vm._v(\"close-icon\")]),\n        _vm._v(\n          \" property, which is the close icon that appears on each chip. You can change the Clear Chips button with the \"\n        ),\n        _c(\"code\", [_vm._v(\"remove-icon\")]),\n        _vm._v(\" property\")\n      ]),\n      _c(\n        \"vs-alert\",\n        {\n          staticClass: \"mt-5\",\n          attrs: { color: \"primary\", icon: \"new_releases\", active: \"true\" }\n        },\n        [\n          _c(\"p\", [\n            _vm._v(\n              \"Vuesax uses the Google Material Icons font library by default. For a list of all available icons, visit the official \"\n            ),\n            _c(\n              \"a\",\n              {\n                attrs: { href: \"https://material.io/icons/\", target: \"_blank\" }\n              },\n              [_vm._v(\"Material Icons page\")]\n            ),\n            _vm._v(\".\")\n          ]),\n          _c(\"p\", [\n            _vm._v(\n              \"FontAwesome and other fonts library are supported. Simply use the icon-pack with fa or fas. You still need to include the Font Awesome icons in your project.\"\n            )\n          ])\n        ]\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"mt-5\" },\n        [\n          _c(\"div\", { staticClass: \"op-block mb-5\" }, [\n            _vm._v(\" \" + _vm._s(_vm.chips) + \" \")\n          ]),\n          _c(\n            \"vs-chips\",\n            {\n              attrs: {\n                color: \"rgb(145, 32, 159)\",\n                placeholder: \"New Element\",\n                \"icon-pack\": \"feather\",\n                \"remove-icon\": \"icon-trash-2\"\n              },\n              model: {\n                value: _vm.chips,\n                callback: function($$v) {\n                  _vm.chips = $$v\n                },\n                expression: \"chips\"\n              }\n            },\n            _vm._l(_vm.chips, function(chip, index) {\n              return _c(\n                \"vs-chip\",\n                {\n                  key: chip + \"-\" + index,\n                  attrs: {\n                    closable: \"\",\n                    \"icon-pack\": \"feather\",\n                    \"close-icon\": \"icon-trash-2\"\n                  },\n                  on: {\n                    click: function($event) {\n                      return _vm.remove(chip)\n                    }\n                  }\n                },\n                [\n                  _vm._v(\n                    \"\\n                    \" +\n                      _vm._s(chip) +\n                      \"\\n                \"\n                  )\n                ]\n              )\n            }),\n            1\n          )\n        ],\n        1\n      ),\n      _c(\"template\", { slot: \"codeContainer\" }, [\n        _vm._v(\n          '\\n<template>\\n  <div class=\"op-block mb-4\"> ' +\n            _vm._s(\"{{ chips }}\") +\n            ' </div>\\n  <vs-chips color=\"rgb(145, 32, 159)\" placeholder=\"New Element\" v-model=\"chips\" icon-pack=\"feather\" remove-icon=\"icon-trash-2\">\\n    <vs-chip\\n      :key=\"chip\"\\n      @click=\"remove(chip)\"\\n      v-for=\"chip in chips\"\\n      closable\\n      icon-pack=\"feather\"\\n      close-icon=\"icon-trash-2\">\\n      ' +\n            _vm._s(\"{{ chip }}\") +\n            \"\\n    </vs-chip>\\n  </vs-chips>\\n</template>\\n\\n<script>\\nexport default {\\n  data(){\\n    return {\\n      chips:[\\n        'Dribbble',\\n        'GitHub',\\n        'Behance',\\n        'Vuejs',\\n        'Vuexy',\\n      ],\\n    }\\n  },\\n  methods: {\\n    remove (item) {\\n      this.chips.splice(this.chips.indexOf(item), 1)\\n    }\\n  }\\n}\\n</script>\\n        \"\n        )\n      ])\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}