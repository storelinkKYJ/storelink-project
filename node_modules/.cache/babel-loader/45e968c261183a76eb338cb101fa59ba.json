{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/babel-loader/lib/index.js!/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/apps/email/EmailView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/apps/email/EmailView.vue","mtime":1610509510822},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/babel-loader/lib/index.js","mtime":1610344922456},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\nimport EmailMailCard from \"./EmailMailCard.vue\";\nexport default {\n  props: {\n    emailTags: {\n      type: Array,\n      required: true\n    },\n    openMailId: {\n      required: true,\n      validator: function validator(prop) {\n        return typeof prop === 'number' || prop === null;\n      }\n    },\n    isSidebarActive: {\n      type: Boolean,\n      required: true\n    },\n    mailFilter: {\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      showThread: false,\n      settings: {\n        maxScrollbarLength: 60,\n        wheelSpeed: 0.50\n      }\n    };\n  },\n  watch: {\n    isSidebarActive: function isSidebarActive(value) {\n      var _this = this;\n\n      if (!value) {\n        this.$emit('closeSidebar');\n        setTimeout(function () {\n          _this.showThread = false;\n        }, 500);\n      }\n    }\n  },\n  computed: {\n    currentMail: function currentMail() {\n      return this.$store.getters['email/getMail'](this.openMailId);\n    },\n    labelColor: function labelColor() {\n      var _this2 = this;\n\n      return function (label) {\n        var tags = _this2.$store.state.email.mailTags;\n        return tags.find(function (tag) {\n          return tag.value === label;\n        }).color;\n      };\n    },\n    currentMailLabels: {\n      get: function get() {\n        return this.currentMail.labels;\n      },\n      set: function set(value) {\n        if (Array.isArray(value)) {\n          var payload = {\n            mailId: this.openMailId,\n            labels: value\n          };\n          this.$store.dispatch('email/setLabels', payload);\n        }\n      }\n    },\n    scrollbarTag: function scrollbarTag() {\n      return this.$store.getters.scrollbarTag;\n    }\n  },\n  methods: {\n    toggleIsStarred: function toggleIsStarred() {\n      var payload = {\n        mailId: this.openMailId,\n        value: !this.currentMail.isStarred\n      };\n      this.$store.dispatch('email/toggleIsMailStarred', payload);\n    },\n    moveTo: function moveTo(to) {\n      this.$emit('closeSidebar');\n      this.$emit('moveTo', to);\n    }\n  },\n  components: {\n    VuePerfectScrollbar: VuePerfectScrollbar,\n    EmailMailCard: EmailMailCard\n  },\n  updated: function updated() {\n    if (!this.currentMail) return;\n    if (this.currentMail.unread && this.isSidebarActive) this.$store.dispatch('email/setUnread', {\n      emailIds: [this.openMailId],\n      unread: false\n    });\n  }\n};",{"version":3,"sources":["EmailView.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- =========================================================================================\n    File Name: EmailView.vue\n    Description: Email Application - Single Email View (Inbox)\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n    <div>\n        <vs-sidebar click-not-close parent=\"#email-app\" :hidden-background=\"true\" class=\"full-vs-sidebar email-view-sidebar items-no-padding\" v-model=\"isSidebarActive\" position-right>\n            <div class=\"mail-sidebar-content px-0 sm:pb-6 h-full\" v-if=\"currentMail\">\n                <div class=\"flex flex-wrap items-center email-header justify-between md:px-8 px-6 sm:pb-2 sm: pt-6 d-theme-dark-bg\">\n                    <div class=\"flex mb-4\">\n                        <div class=\"flex items-center\">\n                            <feather-icon :icon=\"$vs.rtl ? 'ArrowRightIcon' : 'ArrowLeftIcon'\" @click=\"$emit('closeSidebar')\" class=\"cursor-pointer mr-4\" svg-classes=\"w-6 h-6\"></feather-icon>\n                            <h4 v-if=\"currentMail.subject\">{{ currentMail.subject }}</h4>\n                            <h4 v-else>(no subject)</h4>\n                        </div>\n                    </div>\n                    <div class=\"ml-10 mb-4 mt-1\">\n                        <div class=\"email__actions--single flex items-baseline\">\n\n                            <feather-icon icon=\"StarIcon\" class=\"cursor-pointer\" :svgClasses=\"[{'text-warning stroke-current stroke-current': currentMail.isStarred}, 'h-6 w-6']\" @click=\"toggleIsStarred\" />\n\n                            <!-- MOVE TO DROPDOWN -->\n                            <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\" v-if=\"mailFilter != 'sent'\">\n                                <feather-icon icon=\"FolderIcon\" svg-classes=\"h-6 w-6\" class=\"ml-4\"></feather-icon>\n                                <vs-dropdown-menu>\n                                  <vs-dropdown-item @click=\"moveTo('inbox')\" v-if=\"currentMail.mailFolder != 'inbox'\">\n                                    <span class=\"flex items-center\">\n                                      <feather-icon icon=\"MailIcon\" svgClasses=\"h-4 w-4\" class=\"mr-2\" />\n                                      <span>Inbox</span>\n                                    </span>\n                                  </vs-dropdown-item>\n\n                                  <vs-dropdown-item @click=\"moveTo('draft')\" v-if=\"currentMail.mailFolder != 'draft'\">\n                                    <span class=\"flex items-center\">\n                                      <feather-icon icon=\"Edit2Icon\" svgClasses=\"h-4 w-4\" class=\"mr-2\" />\n                                      <span>Draft</span>\n                                    </span>\n                                  </vs-dropdown-item>\n\n                                  <vs-dropdown-item @click=\"moveTo('spam')\" v-if=\"currentMail.mailFolder != 'spam'\">\n                                    <span class=\"flex items-center\">\n                                      <feather-icon icon=\"InfoIcon\" svgClasses=\"h-4 w-4\" class=\"mr-2\" />\n                                      <span>Spam</span>\n                                    </span>\n                                  </vs-dropdown-item>\n\n                                  <vs-dropdown-item @click=\"moveTo('trash')\" v-if=\"currentMail.mailFolder != 'trash'\">\n                                    <span class=\"flex items-center\">\n                                      <feather-icon icon=\"TrashIcon\" svgClasses=\"h-4 w-4\" class=\"mr-2\" />\n                                      <span>Trash</span>\n                                    </span>\n                                  </vs-dropdown-item>\n                                </vs-dropdown-menu>\n                            </vs-dropdown>\n\n                            <!-- ADD LABEL DROPDOWN -->\n                            <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\">\n                                <feather-icon icon=\"TagIcon\" svg-classes=\"h-6 w-6\" class=\"cursor-pointer ml-4\"></feather-icon>\n                                <vs-dropdown-menu style=\"z-index: 40001\">\n                                        <vs-dropdown-item v-for=\"(label, index) in emailTags\" :key=\"index\" @click.stop>\n                                            <vs-checkbox :vs-value=\"label.value\" v-model=\"currentMailLabels\">{{ label.text }}</vs-checkbox>\n                                        </vs-dropdown-item>\n                                </vs-dropdown-menu>\n                            </vs-dropdown>\n\n                            <feather-icon icon=\"MailIcon\" svg-classes=\"h-6 w-6\" class=\"cursor-pointer ml-4\" @click=\"$emit('markUnread')\"></feather-icon>\n                            <feather-icon v-if=\"currentMail.mailFolder != 'trash'\" icon=\"TrashIcon\" svg-classes=\"h-6 w-6\" class=\"cursor-pointer ml-4\" @click=\"$emit('removeMail')\"></feather-icon>\n                            <feather-icon :icon=\"$vs.rtl ? 'ChevronsRightIcon' : 'ChevronsLeftIcon'\" svg-classes=\"h-6 w-6\" class=\"cursor-pointer ml-4 hidden sm:inline-flex\" @click=\"$emit('previousMail')\" />\n                            <feather-icon :icon=\"$vs.rtl ? 'ChevronsLeftIcon' : 'ChevronsRightIcon'\" svg-classes=\"h-6 w-6\" class=\"cursor-pointer ml-4 hidden sm:inline-flex\" @click=\"$emit('nextMail')\" />\n                        </div>\n                    </div>\n                </div>\n\n                <component :is=\"scrollbarTag\" class=\"scroll-area-mail-content md:px-8 md:pb-8 pt-4 px-6 pb-6\" :settings=\"settings\" :key=\"$vs.rtl\">\n                <!-- LABEL ROW -->\n                <div class=\"vx-row\">\n                    <div class=\"vx-col w-full\">\n                        <div class=\"email__labels--single flex ml-10 items-center mt-2\">\n                            <transition-group name=\"list\" tag=\"div\" class=\"flex\">\n                                <div v-for=\"label in currentMail.labels\" :key=\"label\" class=\"open-mail-label flex items-center mr-4\">\n                                    <div class=\"h-3 w-3 rounded-full mr-1\" :class=\"'bg-' + labelColor(label)\"></div>\n                                    <span class=\"text-sm\">{{ label | capitalize }}</span>\n                                </div>\n                            </transition-group>\n                        </div>\n                    </div>\n                </div>\n                <!-- /LABEL ROW -->\n                <br>\n\n                <div class=\"vx-row mb-4\" v-if=\"currentMail.replies.length && !showThread\">\n                    <div class=\"vx-col w-full\">\n                        <span class=\"text-primary font-medium ml-10 cursor-pointer\" @click=\"showThread = true\">{{ currentMail.replies.length }} Earlier Messages</span>\n                    </div>\n                </div>\n                <div v-if=\"isSidebarActive\">\n\n                    <!-- ALL MESSAGES - THREAD -->\n                    <div class=\"vx-row\" v-for=\"threadMail in currentMail.replies.slice().reverse()\" :key=\"threadMail.id\" v-if=\"showThread\">\n                        <div class=\"vx-col w-full\">\n                            <email-mail-card :mailContent=\"threadMail\" class=\"mb-10\" />\n                        </div>\n                    </div>\n\n                    <!-- LATEST MESSAGE -->\n                    <div class=\"vx-row\">\n                        <div class=\"vx-col w-full\">\n                          <email-mail-card :mailContent=\"currentMail\" />\n                        </div>\n                    </div>\n\n                    <div class=\"vx-row\" style=\"margin-top: 2.2rem\">\n                        <div class=\"vx-col w-full\">\n                            <vx-card>\n                                <div class=\"vx-row\">\n                                    <div class=\"vx-col w-full flex justify-between\">\n                                        <span class=\"text-lg\">Click here to <span class=\"text-primary font-semibold cursor-pointer\">Reply</span> or <span class=\"text-primary font-semibold cursor-pointer\">Forward</span></span>\n                                        <feather-icon icon=\"PaperclipIcon\"></feather-icon>\n                                    </div>\n                                </div>\n                            </vx-card>\n                        </div>\n                    </div>\n                </div>\n                </component>\n            </div>\n        </vs-sidebar>\n    </div>\n</template>\n\n<script>\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\nimport EmailMailCard from './EmailMailCard.vue'\n\nexport default {\n  props: {\n    emailTags: {\n      type: Array,\n      required: true\n    },\n    openMailId: {\n      required: true,\n      validator: prop => typeof prop === 'number' || prop === null\n    },\n    isSidebarActive: {\n      type: Boolean,\n      required: true\n    },\n    mailFilter: {\n      type: String\n    }\n  },\n  data () {\n    return {\n      showThread: false,\n      settings: {\n        maxScrollbarLength: 60,\n        wheelSpeed: 0.50\n      }\n    }\n  },\n  watch: {\n    isSidebarActive (value) {\n      if (!value) {\n        this.$emit('closeSidebar')\n        setTimeout(() => {\n          this.showThread = false\n        }, 500)\n      }\n    }\n  },\n  computed: {\n    currentMail () {\n      return this.$store.getters['email/getMail'](this.openMailId)\n    },\n    labelColor () {\n      return (label) => {\n        const tags = this.$store.state.email.mailTags\n        return tags.find((tag) => {\n          return tag.value === label\n        }).color\n      }\n    },\n    currentMailLabels: {\n      get () {\n        return this.currentMail.labels\n      },\n      set (value) {\n        if (Array.isArray(value)) {\n          const payload = { mailId: this.openMailId, labels: value }\n          this.$store.dispatch('email/setLabels', payload)\n        }\n      }\n    },\n    scrollbarTag () { return this.$store.getters.scrollbarTag }\n  },\n  methods: {\n    toggleIsStarred () {\n      const payload = { mailId: this.openMailId, value: !this.currentMail.isStarred }\n      this.$store.dispatch('email/toggleIsMailStarred', payload)\n    },\n    moveTo (to) {\n      this.$emit('closeSidebar')\n      this.$emit('moveTo', to)\n    }\n  },\n  components: {\n    VuePerfectScrollbar,\n    EmailMailCard\n  },\n  updated () {\n    if (!this.currentMail) return\n    if (this.currentMail.unread && this.isSidebarActive) this.$store.dispatch('email/setUnread', { emailIds: [this.openMailId], unread: false })\n  }\n}\n\n</script>\n\n"],"sourceRoot":"src/views/apps/email"}]}