{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/babel-loader/lib/index.js!/Users/gim-yeongjae/Desktop/storelink-project/src/fake-db/data/apps/calendar/index.js","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink-project/src/fake-db/data/apps/calendar/index.js","mtime":1610509510804},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/babel-loader/lib/index.js","mtime":1610344922456}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.array.last-index-of\";\nimport mock from '@/fake-db/mock.js'; // Contact\n\nvar data = {\n  events: [{\n    id: 1,\n    title: 'My Event',\n    startDate: new Date(new Date() - 1000 * 60 * 60 * 24 * 3),\n    endDate: new Date(new Date() - 1000 * 60 * 60 * 24 * 2),\n    url: '',\n    classes: 'event-success',\n    label: 'business'\n  }],\n  labels: [{\n    text: 'Business',\n    value: 'business',\n    color: 'success'\n  }, {\n    text: 'Work',\n    value: 'work',\n    color: 'warning'\n  }, {\n    text: 'Personal',\n    value: 'personal',\n    color: 'danger'\n  }]\n}; // GET : Calendar Events\n\nmock.onGet('/api/apps/calendar/events').reply(function () {\n  return [200, data.events];\n}); // POST : Add new events\n\nmock.onPost('/api/apps/calendar/events/').reply(function (request) {\n  // Get event from post data\n  var event = JSON.parse(request.data).event;\n  var length = data.events.length;\n  var lastIndex = 0;\n\n  if (length) {\n    lastIndex = data.events[length - 1].id;\n  }\n\n  event.id = lastIndex + 1;\n  data.events.push(event);\n  return [201, {\n    id: event.id\n  }];\n}); // GET: Fetch Calendar Labels\n\nmock.onGet('api/apps/calendar/labels').reply(function () {\n  return [200, data.labels];\n}); // POST: Update Event\n\nmock.onPost(/\\/api\\/apps\\/calendar\\/event\\/\\d+/).reply(function (request) {\n  var e = JSON.parse(request.data).event;\n  e.startDate = new Date(e.startDate);\n  e.endDate = new Date(e.endDate);\n  var eventId = request.url.substring(request.url.lastIndexOf('/') + 1);\n  var event = data.events.find(function (event) {\n    return event.id == eventId;\n  });\n  Object.assign(event, e);\n  return [200, event];\n}); // DELETE: Remove Event\n\nmock.onDelete(/\\/api\\/apps\\/calendar\\/event\\/\\d+/).reply(function (request) {\n  var eventId = request.url.substring(request.url.lastIndexOf('/') + 1);\n  var eventIndex = data.events.findIndex(function (event) {\n    return event.id == eventId;\n  });\n  data.events.splice(eventIndex, 1);\n  return [200];\n}); // POST: Update Dragged Event\n\nmock.onPost(/\\/api\\/apps\\/calendar\\/event\\/dragged\\/\\d+/).reply(function (request) {\n  var eventId = request.url.substring(request.url.lastIndexOf('/') + 1);\n  var event = data.events.find(function (event) {\n    return event.id == eventId;\n  });\n  var payload = JSON.parse(request.data).payload;\n  var draggedDateStart = new Date(payload.date);\n  var eventStartDate = new Date(event.startDate).getTime();\n  var eventEndDate = new Date(event.endDate).getTime();\n  var diff = draggedDateStart - eventStartDate;\n  var newEndDate = new Date(eventEndDate + diff);\n  event.startDate = draggedDateStart;\n  event.endDate = newEndDate;\n  return [200, event];\n});",{"version":3,"sources":["/Users/gim-yeongjae/Desktop/storelink-project/src/fake-db/data/apps/calendar/index.js"],"names":["mock","data","events","id","title","startDate","Date","endDate","url","classes","label","labels","text","value","color","onGet","reply","onPost","request","event","JSON","parse","length","lastIndex","push","e","eventId","substring","lastIndexOf","find","Object","assign","onDelete","eventIndex","findIndex","splice","payload","draggedDateStart","date","eventStartDate","getTime","eventEndDate","diff","newEndDate"],"mappings":"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","sourcesContent":["import mock from '@/fake-db/mock.js'\n\n// Contact\nconst data = {\n  events: [\n    {\n      id: 1,\n      title: 'My Event',\n      startDate: new Date(new Date() - 1000 * 60 * 60 * 24 * 3),\n      endDate: new Date(new Date() - 1000 * 60 * 60 * 24 * 2),\n      url: '',\n      classes: 'event-success',\n      label: 'business'\n    }\n  ],\n  labels: [\n    {\n      text: 'Business',\n      value : 'business',\n      color: 'success'\n    },\n    {\n      text: 'Work',\n      value: 'work',\n      color: 'warning'\n    },\n    {\n      text: 'Personal',\n      value: 'personal',\n      color: 'danger'\n    }\n  ]\n}\n\n// GET : Calendar Events\nmock.onGet('/api/apps/calendar/events').reply(() => {\n  return [200, data.events]\n})\n\n// POST : Add new events\nmock.onPost('/api/apps/calendar/events/').reply((request) => {\n\n  // Get event from post data\n  const event = JSON.parse(request.data).event\n\n  const length = data.events.length\n  let lastIndex = 0\n  if (length) {\n    lastIndex = data.events[length - 1].id\n  }\n  event.id = lastIndex + 1\n\n  data.events.push(event)\n\n  return [201, {id: event.id}]\n})\n\n// GET: Fetch Calendar Labels\nmock.onGet('api/apps/calendar/labels').reply(() => {\n  return [200, data.labels]\n})\n\n// POST: Update Event\nmock.onPost(/\\/api\\/apps\\/calendar\\/event\\/\\d+/).reply((request) => {\n\n  const e = JSON.parse(request.data).event\n  e.startDate = new Date(e.startDate)\n  e.endDate = new Date(e.endDate)\n\n  const eventId = request.url.substring(request.url.lastIndexOf('/') + 1)\n\n\n  const event = data.events.find((event) => event.id == eventId)\n  Object.assign(event, e)\n\n  return [200, event]\n})\n\n// DELETE: Remove Event\nmock.onDelete(/\\/api\\/apps\\/calendar\\/event\\/\\d+/).reply((request) => {\n\n  const eventId = request.url.substring(request.url.lastIndexOf('/') + 1)\n\n  const eventIndex = data.events.findIndex((event) => event.id == eventId)\n  data.events.splice(eventIndex, 1)\n  return [200]\n})\n\n// POST: Update Dragged Event\nmock.onPost(/\\/api\\/apps\\/calendar\\/event\\/dragged\\/\\d+/).reply((request) => {\n\n  const eventId = request.url.substring(request.url.lastIndexOf('/') + 1)\n  const event = data.events.find((event) => event.id == eventId)\n  const payload = JSON.parse(request.data).payload\n\n  const draggedDateStart = new Date(payload.date)\n\n  const eventStartDate = new Date(event.startDate).getTime()\n  const eventEndDate = new Date(event.endDate).getTime()\n\n  const diff = draggedDateStart - eventStartDate\n  const newEndDate = new Date(eventEndDate + diff)\n  event.startDate = draggedDateStart\n  event.endDate = newEndDate\n\n  return [200, event]\n})\n"]}]}