{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/babel-loader/lib/index.js!/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/forms/form-wizard/FormWizardValidation.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/forms/form-wizard/FormWizardValidation.vue","mtime":1610509510877},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/babel-loader/lib/index.js","mtime":1610344922456},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { FormWizard, TabContent } from 'vue-form-wizard';\nimport 'vue-form-wizard/dist/vue-form-wizard.min.css'; // For custom error message\n\nimport { Validator } from 'vee-validate';\nvar dict = {\n  custom: {\n    first_name: {\n      required: 'First name is required',\n      alpha: 'First name may only contain alphabetic characters'\n    },\n    last_name: {\n      required: 'Last name is required',\n      alpha: 'Last name may only contain alphabetic characters'\n    },\n    email: {\n      required: 'Email is required',\n      email: 'Please enter valid email'\n    },\n    job_title: {\n      required: 'Job title name is required',\n      alpha: 'Job title may only contain alphabetic characters'\n    },\n    proposal_title: {\n      required: 'Proposal title name is required',\n      alpha: 'Proposal title may only contain alphabetic characters'\n    },\n    event_name: {\n      required: 'Event name is required',\n      alpha: 'Event name may only contain alphabetic characters'\n    }\n  }\n}; // register custom messages\n\nValidator.localize('en', dict);\nexport default {\n  data: function data() {\n    return {\n      firstName: '',\n      lastName: '',\n      email: '',\n      city: 'new-york',\n      proposalTitle: '',\n      jobTitle: '',\n      textarea: '',\n      eventName: '',\n      eventLocation: 'san-francisco',\n      status: 'plannning',\n      cityOptions: [{\n        text: 'New York',\n        value: 'new-york'\n      }, {\n        text: 'Chicago',\n        value: 'chicago'\n      }, {\n        text: 'San Francisco',\n        value: 'san-francisco'\n      }, {\n        text: 'Boston',\n        value: 'boston'\n      }],\n      statusOptions: [{\n        text: 'Plannning',\n        value: 'plannning'\n      }, {\n        text: 'In Progress',\n        value: 'in progress'\n      }, {\n        text: 'Finished',\n        value: 'finished'\n      }],\n      LocationOptions: [{\n        text: 'New York',\n        value: 'new-york'\n      }, {\n        text: 'Chicago',\n        value: 'chicago'\n      }, {\n        text: 'San Francisco',\n        value: 'san-francisco'\n      }, {\n        text: 'Boston',\n        value: 'boston'\n      }]\n    };\n  },\n  methods: {\n    validateStep1: function validateStep1() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this.$validator.validateAll('step-1').then(function (result) {\n          if (result) {\n            resolve(true);\n          } else {\n            reject('correct all values');\n          }\n        });\n      });\n    },\n    validateStep2: function validateStep2() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this2.$validator.validateAll('step-2').then(function (result) {\n          if (result) {\n            resolve(true);\n          } else {\n            reject('correct all values');\n          }\n        });\n      });\n    },\n    validateStep3: function validateStep3() {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this3.$validator.validateAll('step-3').then(function (result) {\n          if (result) {\n            alert('Form submitted!');\n            resolve(true);\n          } else {\n            reject('correct all values');\n          }\n        });\n      });\n    }\n  },\n  components: {\n    FormWizard: FormWizard,\n    TabContent: TabContent\n  }\n};",{"version":3,"sources":["FormWizardValidation.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- =========================================================================================\n  File Name: FormWizardValidation.vue\n  Description: Form wizard with validation\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n  <vx-card title=\"Form wizard with validation\" code-toggler>\n\n    <p>Implement Form validation with form wizard using popular <strong> <router-link to=\"/forms/form-validation\">VeeValidate</router-link></strong></p>\n\n    <div class=\"mt-5\">\n      <form-wizard color=\"rgba(var(--vs-primary), 1)\" errorColor=\"rgba(var(--vs-danger), 1)\" :title=\"null\" :subtitle=\"null\" finishButtonText=\"Submit\">\n        <tab-content title=\"Step 1\" class=\"mb-5\" icon=\"feather icon-home\" :before-change=\"validateStep1\">\n\n          <!-- tab 1 content -->\n          <form data-vv-scope=\"step-1\">\n          <div class=\"vx-row\">\n            <div class=\"vx-col md:w-1/2 w-full mt-5\">\n              <vs-input label=\"First Name\" v-model=\"firstName\" class=\"w-full\" name=\"first_name\" v-validate=\"'required|alpha'\" />\n              <span class=\"text-danger\">{{ errors.first('step-1.first_name') }}</span>\n            </div>\n            <div class=\"vx-col md:w-1/2 w-full mt-5\">\n              <vs-input label=\"Last Name\"  v-model=\"lastName\" class=\"w-full\" name=\"last_name\" v-validate=\"'required|alpha'\" />\n              <span class=\"text-danger\">{{ errors.first('step-1.last_name') }}</span>\n            </div>\n            <div class=\"vx-col md:w-1/2 w-full mt-5\">\n              <vs-input type=\"email\" label=\"Email\"  v-model=\"email\" class=\"w-full\" name=\"email\" v-validate=\"'required|email'\" />\n              <span class=\"text-danger\">{{ errors.first('step-1.email') }}</span>\n            </div>\n            <div class=\"vx-col md:w-1/2 w-full mt-5\">\n              <vs-select v-model=\"city\" class=\"w-full select-large\" label=\"City\">\n                <vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.text\" v-for=\"(item,index) in cityOptions\" class=\"w-full\" />\n              </vs-select>\n            </div>\n          </div>\n          </form>\n        </tab-content>\n\n        <!-- tab 2 content -->\n        <tab-content title=\"Step 2\" class=\"mb-5\" icon=\"feather icon-briefcase\" :before-change=\"validateStep2\">\n          <form data-vv-scope=\"step-2\">\n          <div class=\"vx-row\">\n            <div class=\"vx-col md:w-1/2 w-full\">\n              <vs-input label=\"Proposal Title\" v-model=\"proposalTitle\" class=\"w-full mt-4\" name=\"proposal_title\" v-validate=\"'required|alpha_spaces'\" />\n              <span class=\"text-danger\">{{ errors.first('step-2.proposal_title') }}</span>\n\n              <vs-input label=\"Job Title\"  v-model=\"jobTitle\" class=\"w-full mt-4\" name=\"job_title\" v-validate=\"'required|alpha_spaces'\" />\n              <span class=\"text-danger\">{{ errors.first('step-2.job_title') }}</span>\n            </div>\n            <div class=\"vx-col md:w-1/2 w-full\">\n              <vs-textarea v-model=\"textarea\" label=\"Short discription\" class=\"md:mt-10 mt-6 mb-0\" rows=\"3\" />\n            </div>\n          </div>\n          </form>\n        </tab-content>\n\n        <!-- tab 3 content -->\n        <tab-content title=\"Step 3\" class=\"mb-5\" icon=\"feather icon-image\" :before-change=\"validateStep3\">\n          <form data-vv-scope=\"step-3\">\n          <div class=\"vx-row\">\n            <div class=\"vx-col md:w-1/2 w-full\">\n              <vs-input label=\"Event Name\" v-model=\"eventName\" class=\"w-full mt-5\" name=\"event_name\" v-validate=\"'required|alpha_spaces'\" />\n              <span class=\"text-danger\">{{ errors.first('step-3.event_name') }}</span>\n            </div>\n            <div class=\"vx-col md:w-1/2 w-full\">\n              <vs-select v-model=\"city\" class=\"w-full select-large mt-5\" label=\"Event Location\">\n                <vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.text\" v-for=\"(item,index) in cityOptions\" class=\"w-full\" />\n              </vs-select>\n            </div>\n            <div class=\"vx-col md:w-1/2 w-full mt-5\">\n              <vs-select v-model=\"status\" class=\"w-full select-large\" label=\"Event Status\">\n                <vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.text\" v-for=\"(item,index) in statusOptions\" class=\"w-full\" />\n              </vs-select>\n            </div>\n            <div class=\"vx-col md:w-1/2 w-full md:mt-8\">\n              <div class=\"demo-alignment\">\n                <span>Requirements:</span>\n                <div class=\"flex\">\n                  <vs-checkbox>Staffing</vs-checkbox>\n                  <vs-checkbox>Catering</vs-checkbox>\n                </div>\n              </div>\n            </div>\n          </div>\n          </form>\n        </tab-content>\n      </form-wizard>\n    </div>\n\n    <template slot=\"codeContainer\">\n&lt;template&gt;\n  &lt;form-wizard color=&quot;rgba(var(--vs-primary), 1)&quot; errorColor=&quot;rgba(var(--vs-danger), 1)&quot; :title=&quot;null&quot; :subtitle=&quot;null&quot; finishButtonText=&quot;Submit&quot;&gt;\n    &lt;tab-content title=&quot;Step 1&quot; class=&quot;mb-5&quot; icon=&quot;feather icon-home&quot; :before-change=&quot;validateStep1&quot;&gt;\n\n      &lt;!-- tab 1 content --&gt;\n      &lt;form data-vv-scope=&quot;step-1&quot;&gt;\n      &lt;div class=&quot;vx-row&quot;&gt;\n        &lt;div class=&quot;vx-col md:w-1/2 w-full mt-5&quot;&gt;\n          &lt;vs-input label=&quot;First Name&quot; v-model=&quot;firstName&quot; class=&quot;w-full&quot; name=&quot;first_name&quot; v-validate=&quot;'required|alpha'&quot; /&gt;\n          &lt;span class=&quot;text-danger&quot;&gt;{{ errors.first('step-1.first_name') }}&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;vx-col md:w-1/2 w-full mt-5&quot;&gt;\n          &lt;vs-input label=&quot;Last Name&quot;  v-model=&quot;lastName&quot; class=&quot;w-full&quot; name=&quot;last_name&quot; v-validate=&quot;'required|alpha'&quot; /&gt;\n          &lt;span class=&quot;text-danger&quot;&gt;{{ errors.first('step-1.last_name') }}&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;vx-col md:w-1/2 w-full mt-5&quot;&gt;\n          &lt;vs-input type=&quot;email&quot; label=&quot;Email&quot;  v-model=&quot;email&quot; class=&quot;w-full&quot; name=&quot;email&quot; v-validate=&quot;'required|email'&quot; /&gt;\n          &lt;span class=&quot;text-danger&quot;&gt;{{ errors.first('step-1.email') }}&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;vx-col md:w-1/2 w-full mt-5&quot;&gt;\n          &lt;vs-select v-model=&quot;city&quot; class=&quot;w-full select-large&quot; label=&quot;City&quot;&gt;\n            &lt;vs-select-item :key=&quot;index&quot; :value=&quot;item.value&quot; :text=&quot;item.text&quot; v-for=&quot;(item,index) in cityOptions&quot; class=&quot;w-full&quot; /&gt;\n          &lt;/vs-select&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n      &lt;/form&gt;\n    &lt;/tab-content&gt;\n\n    &lt;!-- tab 2 content --&gt;\n    &lt;tab-content title=&quot;Step 2&quot; class=&quot;mb-5&quot; icon=&quot;feather icon-briefcase&quot; :before-change=&quot;validateStep2&quot;&gt;\n      &lt;form data-vv-scope=&quot;step-2&quot;&gt;\n      &lt;div class=&quot;vx-row&quot;&gt;\n        &lt;div class=&quot;vx-col md:w-1/2 w-full&quot;&gt;\n          &lt;vs-input label=&quot;Proposal Title&quot; v-model=&quot;proposalTitle&quot; class=&quot;w-full mt-4&quot; name=&quot;proposal_title&quot; v-validate=&quot;'required|alpha_spaces'&quot; /&gt;\n          &lt;span class=&quot;text-danger&quot;&gt;{{ errors.first('step-2.proposal_title') }}&lt;/span&gt;\n\n          &lt;vs-input label=&quot;Job Title&quot;  v-model=&quot;jobTitle&quot; class=&quot;w-full mt-4&quot; name=&quot;job_title&quot; v-validate=&quot;'required|alpha_spaces'&quot; /&gt;\n          &lt;span class=&quot;text-danger&quot;&gt;{{ errors.first('step-2.job_title') }}&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;vx-col md:w-1/2 w-full&quot;&gt;\n          &lt;vs-textarea v-model=&quot;textarea&quot; label=&quot;Short discription&quot; class=&quot;md:mt-10 mt-6 mb-0&quot; rows=&quot;3&quot; /&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n      &lt;/form&gt;\n    &lt;/tab-content&gt;\n\n    &lt;!-- tab 3 content --&gt;\n    &lt;tab-content title=&quot;Step 3&quot; class=&quot;mb-5&quot; icon=&quot;feather icon-image&quot; :before-change=&quot;validateStep3&quot;&gt;\n      &lt;form data-vv-scope=&quot;step-3&quot;&gt;\n      &lt;div class=&quot;vx-row&quot;&gt;\n        &lt;div class=&quot;vx-col md:w-1/2 w-full&quot;&gt;\n          &lt;vs-input label=&quot;Event Name&quot; v-model=&quot;eventName&quot; class=&quot;w-full mt-5&quot; name=&quot;event_name&quot; v-validate=&quot;'required|alpha_spaces'&quot; /&gt;\n          &lt;span class=&quot;text-danger&quot;&gt;{{ errors.first('step-3.event_name') }}&lt;/span&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;vx-col md:w-1/2 w-full&quot;&gt;\n          &lt;vs-select v-model=&quot;city&quot; class=&quot;w-full select-large mt-5&quot; label=&quot;Event Location&quot;&gt;\n            &lt;vs-select-item :key=&quot;index&quot; :value=&quot;item.value&quot; :text=&quot;item.text&quot; v-for=&quot;(item,index) in cityOptions&quot; class=&quot;w-full&quot; /&gt;\n          &lt;/vs-select&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;vx-col md:w-1/2 w-full mt-5&quot;&gt;\n          &lt;vs-select v-model=&quot;status&quot; class=&quot;w-full select-large&quot; label=&quot;Event Status&quot;&gt;\n            &lt;vs-select-item :key=&quot;index&quot; :value=&quot;item.value&quot; :text=&quot;item.text&quot; v-for=&quot;(item,index) in statusOptions&quot; class=&quot;w-full&quot; /&gt;\n          &lt;/vs-select&gt;\n        &lt;/div&gt;\n        &lt;div class=&quot;vx-col md:w-1/2 w-full md:mt-8&quot;&gt;\n          &lt;div class=&quot;demo-alignment&quot;&gt;\n            &lt;span&gt;Requirements:&lt;/span&gt;\n            &lt;div class=&quot;flex&quot;&gt;\n              &lt;vs-checkbox&gt;Staffing&lt;/vs-checkbox&gt;\n              &lt;vs-checkbox&gt;Catering&lt;/vs-checkbox&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n      &lt;/form&gt;\n    &lt;/tab-content&gt;\n  &lt;/form-wizard&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport { FormWizard, TabContent } from 'vue-form-wizard'\nimport 'vue-form-wizard/dist/vue-form-wizard.min.css'\n\n// For custom error message\nimport { Validator } from 'vee-validate';\nconst dict = {\n  custom: {\n    first_name: {\n      required: 'First name is required',\n      alpha: &quot;First name may only contain alphabetic characters&quot;\n    },\n    last_name: {\n      required: 'Last name is required',\n      alpha: &quot;Last name may only contain alphabetic characters&quot;\n    },\n    email: {\n      required: 'Email is required',\n      email: &quot;Please enter valid email&quot;\n    },\n    job_title: {\n      required: 'Job title name is required',\n      alpha: &quot;Job title may only contain alphabetic characters&quot;\n    },\n    proposal_title: {\n      required: 'Proposal title name is required',\n      alpha: &quot;Proposal title may only contain alphabetic characters&quot;\n    },\n    event_name: {\n      required: 'Event name is required',\n      alpha: &quot;Event name may only contain alphabetic characters&quot;\n    },\n  }\n};\n\n// register custom messages\nValidator.localize('en', dict);\n\nexport default {\n  data() {\n    return {\n      firstName: &quot;&quot;,\n      lastName: &quot;&quot;,\n      email: &quot;&quot;,\n      city: &quot;new-york&quot;,\n      proposalTitle: &quot;&quot;,\n      jobTitle: &quot;&quot;,\n      textarea: &quot;&quot;,\n      eventName: &quot;&quot;,\n      eventLocation: &quot;san-francisco&quot;,\n      status: &quot;plannning&quot;,\n      cityOptions: [\n        { text: &quot;New York&quot;, value: &quot;new-york&quot; },\n        { text: &quot;Chicago&quot;, value: &quot;chicago&quot; },\n        { text: &quot;San Francisco&quot;, value: &quot;san-francisco&quot; },\n        { text: &quot;Boston&quot;, value: &quot;boston&quot; },\n      ],\n      statusOptions: [\n        { text: &quot;Plannning&quot;, value: &quot;plannning&quot; },\n        { text: &quot;In Progress&quot;, value: &quot;in progress&quot; },\n        { text: &quot;Finished&quot;, value: &quot;finished&quot; },\n      ],\n      LocationOptions: [\n        { text: &quot;New York&quot;, value: &quot;new-york&quot; },\n        { text: &quot;Chicago&quot;, value: &quot;chicago&quot; },\n        { text: &quot;San Francisco&quot;, value: &quot;san-francisco&quot; },\n        { text: &quot;Boston&quot;, value: &quot;boston&quot; },\n      ],\n    }\n  },\n  methods: {\n    validateStep1() {\n      return new Promise((resolve, reject) =&gt; {\n        this.$validator.validateAll('step-1').then(result =&gt; {\n          if (result) {\n            resolve(true)\n          } else {\n            reject(&quot;correct all values&quot;);\n          }\n        })\n      })\n    },\n    validateStep2() {\n      return new Promise((resolve, reject) =&gt; {\n        this.$validator.validateAll(&quot;step-2&quot;).then(result =&gt; {\n          if (result) {\n            resolve(true)\n          } else {\n            reject(&quot;correct all values&quot;);\n          }\n        })\n      })\n    },\n    validateStep3() {\n      return new Promise((resolve, reject) =&gt; {\n        this.$validator.validateAll(&quot;step-3&quot;).then(result =&gt; {\n          if (result) {\n            alert(&quot;Form submitted!&quot;);\n            resolve(true)\n          } else {\n            reject(&quot;correct all values&quot;);\n          }\n        })\n      })\n    }\n  },\n  components: {\n    FormWizard,\n    TabContent\n  }\n}\n&lt;/script&gt;\n    </template>\n  </vx-card>\n</template>\n\n<script>\nimport { FormWizard, TabContent } from 'vue-form-wizard'\nimport 'vue-form-wizard/dist/vue-form-wizard.min.css'\n\n// For custom error message\nimport { Validator } from 'vee-validate'\nconst dict = {\n  custom: {\n    first_name: {\n      required: 'First name is required',\n      alpha: 'First name may only contain alphabetic characters'\n    },\n    last_name: {\n      required: 'Last name is required',\n      alpha: 'Last name may only contain alphabetic characters'\n    },\n    email: {\n      required: 'Email is required',\n      email: 'Please enter valid email'\n    },\n    job_title: {\n      required: 'Job title name is required',\n      alpha: 'Job title may only contain alphabetic characters'\n    },\n    proposal_title: {\n      required: 'Proposal title name is required',\n      alpha: 'Proposal title may only contain alphabetic characters'\n    },\n    event_name: {\n      required: 'Event name is required',\n      alpha: 'Event name may only contain alphabetic characters'\n    }\n  }\n}\n\n// register custom messages\nValidator.localize('en', dict)\n\nexport default {\n  data () {\n    return {\n      firstName: '',\n      lastName: '',\n      email: '',\n      city: 'new-york',\n      proposalTitle: '',\n      jobTitle: '',\n      textarea: '',\n      eventName: '',\n      eventLocation: 'san-francisco',\n      status: 'plannning',\n      cityOptions: [\n        { text: 'New York', value: 'new-york' },\n        { text: 'Chicago', value: 'chicago' },\n        { text: 'San Francisco', value: 'san-francisco' },\n        { text: 'Boston', value: 'boston' }\n      ],\n      statusOptions: [\n        { text: 'Plannning', value: 'plannning' },\n        { text: 'In Progress', value: 'in progress' },\n        { text: 'Finished', value: 'finished' }\n      ],\n      LocationOptions: [\n        { text: 'New York', value: 'new-york' },\n        { text: 'Chicago', value: 'chicago' },\n        { text: 'San Francisco', value: 'san-francisco' },\n        { text: 'Boston', value: 'boston' }\n      ]\n    }\n  },\n  methods: {\n    validateStep1 () {\n      return new Promise((resolve, reject) => {\n        this.$validator.validateAll('step-1').then(result => {\n          if (result) {\n            resolve(true)\n          } else {\n            reject('correct all values')\n          }\n        })\n      })\n    },\n    validateStep2 () {\n      return new Promise((resolve, reject) => {\n        this.$validator.validateAll('step-2').then(result => {\n          if (result) {\n            resolve(true)\n          } else {\n            reject('correct all values')\n          }\n        })\n      })\n    },\n    validateStep3 () {\n      return new Promise((resolve, reject) => {\n        this.$validator.validateAll('step-3').then(result => {\n          if (result) {\n            alert('Form submitted!')\n            resolve(true)\n          } else {\n            reject('correct all values')\n          }\n        })\n      })\n    }\n  },\n  components: {\n    FormWizard,\n    TabContent\n  }\n}\n</script>\n"],"sourceRoot":"src/views/forms/form-wizard"}]}