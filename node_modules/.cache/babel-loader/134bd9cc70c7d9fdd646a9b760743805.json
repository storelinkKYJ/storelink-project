{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/babel-loader/lib/index.js!/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink-project/src/views/components/extra-components/tree/TreeAsyncTree.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink-project/src/views/components/extra-components/tree/TreeAsyncTree.vue","mtime":1610509510849},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/babel-loader/lib/index.js","mtime":1610344922456},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["import _toConsumableArray from \"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { VTree, VSelectTree } from 'vue-tree-halower';\nexport default {\n  data: function data() {\n    return {\n      initSelected: ['node-1'],\n      treeData: [{\n        title: 'node1',\n        expanded: false,\n        async: true\n      }]\n    };\n  },\n  methods: {\n    nodechecked: function nodechecked(node, v) {\n      alert(\"that a node-check envent ...\".concat(node.title).concat(v));\n    },\n    asyncLoad: function () {\n      var _asyncLoad = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(node) {\n        var _node$children;\n\n        var _node$checked, checked, pro;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _node$checked = node.checked, checked = _node$checked === void 0 ? false : _node$checked;\n                this.$set(node, 'loading', true);\n                _context.next = 4;\n                return new Promise(function (resolve) {\n                  setTimeout(resolve, 2000, [{\n                    title: 'test1',\n                    async: true\n                  }, {\n                    title: 'test2',\n                    async: true\n                  }, {\n                    title: 'test3'\n                  }]);\n                });\n\n              case 4:\n                pro = _context.sent;\n\n                if (!node.hasOwnProperty('children')) {\n                  this.$set(node, 'children', []);\n                }\n\n                (_node$children = node.children).push.apply(_node$children, _toConsumableArray(pro));\n\n                this.$set(node, 'loading', false);\n\n                if (checked) {\n                  this.$refs.tree.childCheckedHandle(node, checked);\n                }\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function asyncLoad(_x) {\n        return _asyncLoad.apply(this, arguments);\n      }\n\n      return asyncLoad;\n    }()\n  },\n  components: {\n    VTree: VTree,\n    VSelectTree: VSelectTree\n  }\n};",{"version":3,"sources":["TreeAsyncTree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,SAAA,KAAA,EAAA,WAAA,QAAA,kBAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,CAAA,QAAA,CADA;AAEA,MAAA,QAAA,EAAA,CACA;AACA,QAAA,KAAA,EAAA,OADA;AAEA,QAAA,QAAA,EAAA,KAFA;AAGA,QAAA,KAAA,EAAA;AAHA,OADA;AAFA,KAAA;AAUA,GAZA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,IADA,EACA,CADA,EACA;AACA,MAAA,KAAA,uCAAA,IAAA,CAAA,KAAA,SAAA,CAAA,EAAA;AACA,KAHA;AAIA,IAAA,SAJA;AAAA,gGAIA,IAJA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gCAKA,IALA,CAKA,OALA,EAKA,OALA,8BAKA,KALA;AAMA,qBAAA,IAAA,CAAA,IAAA,EAAA,SAAA,EAAA,IAAA;AANA;AAAA,uBAOA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,kBAAA,UAAA,CAAA,OAAA,EAAA,IAAA,EAAA,CAAA;AAAA,oBAAA,KAAA,EAAA,OAAA;AAAA,oBAAA,KAAA,EAAA;AAAA,mBAAA,EAAA;AAAA,oBAAA,KAAA,EAAA,OAAA;AAAA,oBAAA,KAAA,EAAA;AAAA,mBAAA,EAAA;AAAA,oBAAA,KAAA,EAAA;AAAA,mBAAA,CAAA,CAAA;AACA,iBAFA,CAPA;;AAAA;AAOA,gBAAA,GAPA;;AAUA,oBAAA,CAAA,IAAA,CAAA,cAAA,CAAA,UAAA,CAAA,EAAA;AACA,uBAAA,IAAA,CAAA,IAAA,EAAA,UAAA,EAAA,EAAA;AACA;;AACA,kCAAA,IAAA,CAAA,QAAA,EAAA,IAAA,0CAAA,GAAA;;AACA,qBAAA,IAAA,CAAA,IAAA,EAAA,SAAA,EAAA,KAAA;;AACA,oBAAA,OAAA,EAAA;AACA,uBAAA,KAAA,CAAA,IAAA,CAAA,kBAAA,CAAA,IAAA,EAAA,OAAA;AACA;;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAbA;AAiCA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA,KADA;AAEA,IAAA,WAAA,EAAA;AAFA;AAjCA,CAAA","sourcesContent":["<template>\n  <vx-card title=\"Async Tree\" code-toggler>\n    <v-tree ref=\"tree\" :data=\"treeData\" :multiple=\"false\" @node-check=\"nodechecked\" @async-load-nodes=\"asyncLoad\"/>\n\n    <template slot=\"codeContainer\">\n&lt;tempalte&gt;\n  &lt;v-tree ref=&quot;tree&quot; :data=&apos;treeData&apos; :multiple=&apos;false&apos; @node-check=&apos;nodechecked&apos; @async-load-nodes=&apos;asyncLoad&apos;/&gt;\n&lt;/tempalte&gt;\n\n&lt;script&gt;\nimport { VTree, VSelectTree}  from &apos;vue-tree-halower&apos;\n\nexport default {\n  data() {\n    return {\n      initSelected: [&apos;node-1&apos;],\n      treeData: [{\n        title: &apos;node1&apos;,\n        expanded: false,\n        async: true\n      }]\n    }\n  },\n  methods: {\n    nodechecked (node, v) {\n      alert(&apos;that a node-check envent ...&apos; + node.title + v)\n    },\n    async asyncLoad (node) {\n      const {checked = false} = node\n      this.$set(node, &apos;loading&apos;, true)\n      let pro = await new Promise(resolve =&gt; {\n        setTimeout(resolve, 2000, [{title: &apos;test1&apos;, async: true}, {title: &apos;test2&apos;, async: true}, {title: &apos;test3&apos;}])\n      })\n      if (!node.hasOwnProperty(&apos;children&apos;)) {\n        this.$set(node, &apos;children&apos;, [])\n      }\n      node.children.push(...pro)\n      this.$set(node, &apos;loading&apos;, false)\n      if (checked) {\n        this.$refs.tree.childCheckedHandle(node, checked)\n      }\n    },\n  },\n  components: {\n    VTree,\n    VSelectTree\n  }\n}\n&lt;/script&gt;\n    </template>\n  </vx-card>\n</template>\n\n<script>\nimport { VTree, VSelectTree}  from 'vue-tree-halower'\n\nexport default {\n  data () {\n    return {\n      initSelected: ['node-1'],\n      treeData: [\n        {\n          title: 'node1',\n          expanded: false,\n          async: true\n        }\n      ]\n    }\n  },\n  methods: {\n    nodechecked (node, v) {\n      alert(`that a node-check envent ...${  node.title  }${v}`)\n    },\n    async asyncLoad (node) {\n      const {checked = false} = node\n      this.$set(node, 'loading', true)\n      const pro = await new Promise(resolve => {\n        setTimeout(resolve, 2000, [{title: 'test1', async: true}, {title: 'test2', async: true}, {title: 'test3'}])\n      })\n      if (!node.hasOwnProperty('children')) {\n        this.$set(node, 'children', [])\n      }\n      node.children.push(...pro)\n      this.$set(node, 'loading', false)\n      if (checked) {\n        this.$refs.tree.childCheckedHandle(node, checked)\n      }\n    }\n  },\n  components: {\n    VTree,\n    VSelectTree\n  }\n}\n</script>\n"],"sourceRoot":"src/views/components/extra-components/tree"}]}