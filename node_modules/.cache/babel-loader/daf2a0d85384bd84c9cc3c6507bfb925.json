{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/babel-loader/lib/index.js!/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/apps/chat/ChatLog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/apps/chat/ChatLog.vue","mtime":1610509510820},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/babel-loader/lib/index.js","mtime":1610344922456},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: {\n    userId: {\n      type: Number,\n      required: true\n    }\n  },\n  computed: {\n    chatData: function chatData() {\n      return this.$store.getters['chat/chatDataOfUser'](this.userId);\n    },\n    activeUserImg: function activeUserImg() {\n      return this.$store.state.AppActiveUser.photoURL;\n    },\n    senderImg: function senderImg() {\n      var _this = this;\n\n      return function (isSentByActiveUser) {\n        if (isSentByActiveUser) return _this.$store.state.AppActiveUser.photoURL;else return _this.$store.getters['chat/contact'](_this.userId).photoURL;\n      };\n    },\n    hasSentPreviousMsg: function hasSentPreviousMsg() {\n      return function (last_sender, current_sender) {\n        return last_sender === current_sender;\n      };\n    }\n  },\n  methods: {\n    isSameDay: function isSameDay(time_to, time_from) {\n      var date_time_to = new Date(Date.parse(time_to));\n      var date_time_from = new Date(Date.parse(time_from));\n      return date_time_to.getFullYear() === date_time_from.getFullYear() && date_time_to.getMonth() === date_time_from.getMonth() && date_time_to.getDate() === date_time_from.getDate();\n    },\n    toDate: function toDate(time) {\n      var locale = 'en-us';\n      var date_obj = new Date(Date.parse(time));\n      var monthName = date_obj.toLocaleString(locale, {\n        month: 'short'\n      });\n      return \"\".concat(date_obj.getDate(), \" \").concat(monthName);\n    },\n    scrollToBottom: function scrollToBottom() {\n      var _this2 = this;\n\n      this.$nextTick(function () {\n        _this2.$parent.$el.scrollTop = _this2.$parent.$el.scrollHeight;\n      });\n    }\n  },\n  updated: function updated() {\n    this.scrollToBottom();\n  },\n  mounted: function mounted() {\n    this.scrollToBottom();\n  }\n};",{"version":3,"sources":["ChatLog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GADA;AAOA,EAAA,QAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,qBAAA,EAAA,KAAA,MAAA,CAAA;AACA,KAHA;AAIA,IAAA,aAJA,2BAIA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,aAAA,CAAA,QAAA;AACA,KANA;AAOA,IAAA,SAPA,uBAOA;AAAA;;AACA,aAAA,UAAA,kBAAA,EAAA;AACA,YAAA,kBAAA,EAAA,OAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,aAAA,CAAA,QAAA,CAAA,KACA,OAAA,KAAA,CAAA,MAAA,CAAA,OAAA,CAAA,cAAA,EAAA,KAAA,CAAA,MAAA,EAAA,QAAA;AACA,OAHA;AAIA,KAZA;AAaA,IAAA,kBAbA,gCAaA;AACA,aAAA,UAAA,WAAA,EAAA,cAAA;AAAA,eAAA,WAAA,KAAA,cAAA;AAAA,OAAA;AACA;AAfA,GAPA;AAwBA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,qBACA,OADA,EACA,SADA,EACA;AACA,UAAA,YAAA,GAAA,IAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,CAAA;AACA,UAAA,cAAA,GAAA,IAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,SAAA,CAAA,CAAA;AACA,aAAA,YAAA,CAAA,WAAA,OAAA,cAAA,CAAA,WAAA,EAAA,IACA,YAAA,CAAA,QAAA,OAAA,cAAA,CAAA,QAAA,EADA,IAEA,YAAA,CAAA,OAAA,OAAA,cAAA,CAAA,OAAA,EAFA;AAGA,KAPA;AAQA,IAAA,MARA,kBAQA,IARA,EAQA;AACA,UAAA,MAAA,GAAA,OAAA;AACA,UAAA,QAAA,GAAA,IAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA;AACA,UAAA,SAAA,GAAA,QAAA,CAAA,cAAA,CAAA,MAAA,EAAA;AACA,QAAA,KAAA,EAAA;AADA,OAAA,CAAA;AAGA,uBAAA,QAAA,CAAA,OAAA,EAAA,cAAA,SAAA;AACA,KAfA;AAgBA,IAAA,cAhBA,4BAgBA;AAAA;;AACA,WAAA,SAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,SAAA,GAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,YAAA;AACA,OAFA;AAGA;AApBA,GAxBA;AA8CA,EAAA,OA9CA,qBA8CA;AACA,SAAA,cAAA;AACA,GAhDA;AAiDA,EAAA,OAjDA,qBAiDA;AACA,SAAA,cAAA;AACA;AAnDA,CAAA","sourcesContent":["<!-- =========================================================================================\n    File Name: ChatLog.vue\n    Description: Chat Application - Log of chat\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n<template>\n    <div id=\"component-chat-log\" class=\"m-8\" v-if=\"chatData\">\n        <div v-for=\"(msg, index) in chatData.msg\" class=\"msg-grp-container\" :key=\"index\">\n\n            <!-- If previous msg is older than current time -->\n            <template v-if=\"chatData.msg[index-1]\">\n                <vs-divider v-if=\"!isSameDay(msg.time, chatData.msg[index-1].time)\" class=\"msg-time\">\n                    <span>{{ toDate(msg.time) }}</span>\n                </vs-divider>\n                <div class=\"spacer mt-8\" v-if=\"!hasSentPreviousMsg(chatData.msg[index-1].isSent, msg.isSent)\"></div>\n            </template>\n\n            <div class=\"flex items-start\" :class=\"[{'flex-row-reverse' : msg.isSent}]\">\n\n                <template v-if=\"chatData.msg[index-1]\">\n                    <template v-if=\"(!hasSentPreviousMsg(chatData.msg[index-1].isSent, msg.isSent) || !isSameDay(msg.time, chatData.msg[index-1].time))\">\n                        <vs-avatar size=\"40px\" class=\"border-2 shadow border-solid border-white m-0 flex-shrink-0\" :class=\"msg.isSent ? 'sm:ml-5 ml-3' : 'sm:mr-5 mr-3'\" :src=\"senderImg(msg.isSent)\"></vs-avatar>\n                    </template>\n                </template>\n\n                <template v-if=\"index == 0\">\n                    <vs-avatar size=\"40px\" class=\"border-2 shadow border-solid border-white m-0 flex-shrink-0\" :class=\"msg.isSent ? 'sm:ml-5 ml-3' : 'sm:mr-5 mr-3'\" :src=\"senderImg(msg.isSent)\"></vs-avatar>\n                </template>\n\n                <template v-if=\"chatData.msg[index-1]\">\n                    <div class=\"mr-16\" v-if=\"!(!hasSentPreviousMsg(chatData.msg[index-1].isSent, msg.isSent) || !isSameDay(msg.time, chatData.msg[index-1].time))\"></div>\n                </template>\n\n                <div class=\"msg break-words relative shadow-md rounded py-3 px-4 mb-2 rounded-lg max-w-sm\" :class=\"{'bg-primary-gradient text-white': msg.isSent, 'border border-solid border-transparent bg-white': !msg.isSent}\">\n                    <span>{{ msg.textContent }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default{\n  props: {\n    userId: {\n      type: Number,\n      required: true\n    }\n  },\n  computed: {\n    chatData () {\n      return this.$store.getters['chat/chatDataOfUser'](this.userId)\n    },\n    activeUserImg () {\n      return this.$store.state.AppActiveUser.photoURL\n    },\n    senderImg () {\n      return (isSentByActiveUser) => {\n        if (isSentByActiveUser) return this.$store.state.AppActiveUser.photoURL\n        else return this.$store.getters['chat/contact'](this.userId).photoURL\n      }\n    },\n    hasSentPreviousMsg () {\n      return (last_sender, current_sender) => last_sender === current_sender\n    }\n  },\n  methods: {\n    isSameDay (time_to, time_from) {\n      const date_time_to = new Date(Date.parse(time_to))\n      const date_time_from = new Date(Date.parse(time_from))\n      return date_time_to.getFullYear() === date_time_from.getFullYear() &&\n                date_time_to.getMonth() === date_time_from.getMonth() &&\n                date_time_to.getDate() === date_time_from.getDate()\n    },\n    toDate (time) {\n      const locale = 'en-us'\n      const date_obj = new Date(Date.parse(time))\n      const monthName = date_obj.toLocaleString(locale, {\n        month: 'short'\n      })\n      return `${date_obj.getDate()  } ${   monthName}`\n    },\n    scrollToBottom () {\n      this.$nextTick(() => {\n        this.$parent.$el.scrollTop = this.$parent.$el.scrollHeight\n      })\n    }\n  },\n  updated () {\n    this.scrollToBottom()\n  },\n  mounted () {\n    this.scrollToBottom()\n  }\n}\n</script>\n"],"sourceRoot":"src/views/apps/chat"}]}