{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/babel-loader/lib/index.js!/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink-project/src/views/charts-and-maps/charts/echarts/EchartsScatterChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink-project/src/views/charts-and-maps/charts/echarts/EchartsScatterChart.vue","mtime":1610509510830},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/babel-loader/lib/index.js","mtime":1610344922456},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ECharts from 'vue-echarts/components/ECharts';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/chart/scatter';\nimport 'echarts/lib/chart/effectScatter';\nimport { graphic } from 'echarts/lib/export';\nexport default {\n  data: function data() {\n    var data = [[[28604, 77, 17096869, 'Australia', 1990], [31163, 77.4, 27662440, 'Canada', 1990], [1516, 68, 1154605773, 'China', 1990], [13670, 74.7, 10582082, 'Cuba', 1990], [28599, 75, 4986705, 'Finland', 1990], [29476, 77.1, 56943299, 'France', 1990], [31476, 75.4, 78958237, 'Germany', 1990], [28666, 78.1, 254830, 'Iceland', 1990], [1777, 57.7, 870601776, 'India', 1990], [29550, 79.1, 122249285, 'Japan', 1990], [2076, 67.9, 20194354, 'North Korea', 1990], [12087, 72, 42972254, 'South Korea', 1990], [24021, 75.4, 3397534, 'New Zealand', 1990], [43296, 76.8, 4240375, 'Norway', 1990], [10088, 70.8, 38195258, 'Poland', 1990], [19349, 69.6, 147568552, 'Russia', 1990], [10670, 67.3, 53994605, 'Turkey', 1990], [26424, 75.7, 57110117, 'United Kingdom', 1990], [37062, 75.4, 252847810, 'United States', 1990]], [[44056, 81.8, 23968973, 'Australia', 2015], [43294, 81.7, 35939927, 'Canada', 2015], [13334, 76.9, 1376048943, 'China', 2015], [21291, 78.5, 11389562, 'Cuba', 2015], [38923, 80.8, 5503457, 'Finland', 2015], [37599, 81.9, 64395345, 'France', 2015], [44053, 81.1, 80688545, 'Germany', 2015], [42182, 82.8, 329425, 'Iceland', 2015], [5903, 66.8, 1311050527, 'India', 2015], [36162, 83.5, 126573481, 'Japan', 2015], [1390, 71.4, 25155317, 'North Korea', 2015], [34644, 80.7, 50293439, 'South Korea', 2015], [34186, 80.6, 4528526, 'New Zealand', 2015], [64304, 81.6, 5210967, 'Norway', 2015], [24787, 77.3, 38611794, 'Poland', 2015], [23038, 73.13, 143456918, 'Russia', 2015], [19360, 76.5, 78665830, 'Turkey', 2015], [38225, 81.4, 64715810, 'United Kingdom', 2015], [53354, 79.1, 321773631, 'United States', 2015]]];\n    return {\n      scatter: {\n        legend: {\n          right: 10,\n          data: ['1990', '2015']\n        },\n        xAxis: {\n          splitLine: {\n            lineStyle: {\n              type: 'dashed'\n            }\n          }\n        },\n        yAxis: {\n          splitLine: {\n            lineStyle: {\n              type: 'dashed'\n            }\n          },\n          scale: true\n        },\n        series: [{\n          name: '1990',\n          data: data[0],\n          type: 'scatter',\n          symbolSize: function symbolSize(data) {\n            return Math.sqrt(data[2]) / 5e2;\n          },\n          label: {\n            emphasis: {\n              show: true,\n              formatter: function formatter(_ref) {\n                var data = _ref.data;\n                return data[3];\n              },\n              position: 'top'\n            }\n          },\n          itemStyle: {\n            normal: {\n              shadowBlur: 10,\n              shadowColor: 'rgba(120, 36, 50, 0.5)',\n              shadowOffsetY: 5,\n              color: new graphic.RadialGradient(0.4, 0.3, 1, [{\n                offset: 0,\n                color: 'rgb(251, 118, 123)'\n              }, {\n                offset: 1,\n                color: 'rgb(204, 46, 72)'\n              }])\n            }\n          }\n        }, {\n          name: '2015',\n          data: data[1],\n          type: 'scatter',\n          symbolSize: function symbolSize(data) {\n            return Math.sqrt(data[2]) / 5e2;\n          },\n          label: {\n            emphasis: {\n              show: true,\n              formatter: function formatter(_ref2) {\n                var data = _ref2.data;\n                return data[3];\n              },\n              position: 'top'\n            }\n          },\n          itemStyle: {\n            normal: {\n              shadowBlur: 10,\n              shadowColor: 'rgba(25, 100, 150, 0.5)',\n              shadowOffsetY: 5,\n              color: new graphic.RadialGradient(0.4, 0.3, 1, [{\n                offset: 0,\n                color: 'rgb(129, 227, 238)'\n              }, {\n                offset: 1,\n                color: 'rgb(25, 183, 207)'\n              }])\n            }\n          }\n        }]\n      }\n    };\n  },\n  components: {\n    ECharts: ECharts\n  }\n};",{"version":3,"sources":["EchartsScatterChart.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- =========================================================================================\n  File Name: EchartsScatterChart.vue\n  Description: Create scatter chart\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n  <vx-card title=\"Scatter Chart\" class=\"mb-base\" code-toggler>\n\n    <div class=\"mt-5\">\n      <e-charts autoresize :options=\"scatter\" ref=\"scatter\" auto-resize />\n    </div>\n\n    <template slot=\"codeContainer\">\n&lt;template&gt;\n  &lt;e-charts autoresize :options=&quot;scatter&quot; ref=&quot;scatter&quot; auto-resize /&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport ECharts from 'vue-echarts/components/ECharts'\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/chart/scatter'\nimport 'echarts/lib/chart/effectScatter'\nimport theme from './theme.json'\nimport { graphic } from 'echarts/lib/export'\n\nexport default {\n  data() {\n    const data = [\n      [\n        [ 28604, 77, 17096869, 'Australia', 1990 ],\n        [ 31163, 77.4, 27662440, 'Canada', 1990 ],\n        [ 1516, 68, 1154605773, 'China', 1990 ],\n        [ 13670, 74.7, 10582082, 'Cuba', 1990 ],\n        [ 28599, 75, 4986705, 'Finland', 1990 ],\n        [ 29476, 77.1, 56943299, 'France', 1990 ],\n        [ 31476, 75.4, 78958237, 'Germany', 1990 ],\n        [ 28666, 78.1, 254830, 'Iceland', 1990 ],\n        [ 1777, 57.7, 870601776, 'India', 1990 ],\n        [ 29550, 79.1, 122249285, 'Japan', 1990 ],\n        [ 2076, 67.9, 20194354, 'North Korea', 1990 ],\n        [ 12087, 72, 42972254, 'South Korea', 1990 ],\n        [ 24021, 75.4, 3397534, 'New Zealand', 1990 ],\n        [ 43296, 76.8, 4240375, 'Norway', 1990 ],\n        [ 10088, 70.8, 38195258, 'Poland', 1990 ],\n        [ 19349, 69.6, 147568552, 'Russia', 1990 ],\n        [ 10670, 67.3, 53994605, 'Turkey', 1990 ],\n        [ 26424, 75.7, 57110117, 'United Kingdom', 1990 ],\n        [ 37062, 75.4, 252847810, 'United States', 1990 ]\n      ],\n      [\n        [ 44056, 81.8, 23968973, 'Australia', 2015 ],\n        [ 43294, 81.7, 35939927, 'Canada', 2015 ],\n        [ 13334, 76.9, 1376048943, 'China', 2015 ],\n        [ 21291, 78.5, 11389562, 'Cuba', 2015 ],\n        [ 38923, 80.8, 5503457, 'Finland', 2015 ],\n        [ 37599, 81.9, 64395345, 'France', 2015 ],\n        [ 44053, 81.1, 80688545, 'Germany', 2015 ],\n        [ 42182, 82.8, 329425, 'Iceland', 2015 ],\n        [ 5903, 66.8, 1311050527, 'India', 2015 ],\n        [ 36162, 83.5, 126573481, 'Japan', 2015 ],\n        [ 1390, 71.4, 25155317, 'North Korea', 2015 ],\n        [ 34644, 80.7, 50293439, 'South Korea', 2015 ],\n        [ 34186, 80.6, 4528526, 'New Zealand', 2015 ],\n        [ 64304, 81.6, 5210967, 'Norway', 2015 ],\n        [ 24787, 77.3, 38611794, 'Poland', 2015 ],\n        [ 23038, 73.13, 143456918, 'Russia', 2015 ],\n        [ 19360, 76.5, 78665830, 'Turkey', 2015 ],\n        [ 38225, 81.4, 64715810, 'United Kingdom', 2015 ],\n        [ 53354, 79.1, 321773631, 'United States', 2015 ]\n      ]\n    ]\n    return {\n      scatter:{\n        legend: {\n          right: 10,\n          data: ['1990', '2015']\n        },\n        xAxis: {\n          splitLine: {\n            lineStyle: {\n              type: 'dashed'\n            }\n          }\n        },\n        yAxis: {\n          splitLine: {\n            lineStyle: {\n              type: 'dashed'\n            }\n          },\n          scale: true\n        },\n        series: [{\n          name: '1990',\n          data: data[0],\n          type: 'scatter',\n          symbolSize (data) {\n            return Math.sqrt(data[2]) / 5e2\n          },\n          label: {\n            emphasis: {\n              show: true,\n              formatter ({data}) {\n                return data[3]\n              },\n              position: 'top'\n            }\n          },\n          itemStyle: {\n            normal: {\n              shadowBlur: 10,\n              shadowColor: 'rgba(120, 36, 50, 0.5)',\n              shadowOffsetY: 5,\n              color: new graphic.RadialGradient(0.4, 0.3, 1, [\n                {\n                  offset: 0,\n                  color: 'rgb(251, 118, 123)'\n                }, {\n                  offset: 1,\n                  color: 'rgb(204, 46, 72)'\n                }\n              ])\n            }\n          }\n        }, {\n          name: '2015',\n          data: data[1],\n          type: 'scatter',\n          symbolSize (data) {\n            return Math.sqrt(data[2]) / 5e2\n          },\n          label: {\n            emphasis: {\n              show: true,\n              formatter ({data}) {\n                return data[3]\n              },\n              position: 'top'\n            }\n          },\n          itemStyle: {\n            normal: {\n              shadowBlur: 10,\n              shadowColor: 'rgba(25, 100, 150, 0.5)',\n              shadowOffsetY: 5,\n              color: new graphic.RadialGradient(0.4, 0.3, 1, [{\n                offset: 0,\n                color: 'rgb(129, 227, 238)'\n              }, {\n                offset: 1,\n                color: 'rgb(25, 183, 207)'\n              }])\n            }\n          }\n        }]\n      },\n    }\n  },\n  components: {\n    ECharts\n  }\n}\n&lt;/script&gt;\n    </template>\n  </vx-card>\n</template>\n\n<script>\nimport ECharts from 'vue-echarts/components/ECharts'\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/chart/scatter'\nimport 'echarts/lib/chart/effectScatter'\nimport { graphic } from 'echarts/lib/export'\n\nexport default {\n  data () {\n    const data = [\n      [\n        [28604, 77, 17096869, 'Australia', 1990],\n        [31163, 77.4, 27662440, 'Canada', 1990],\n        [1516, 68, 1154605773, 'China', 1990],\n        [13670, 74.7, 10582082, 'Cuba', 1990],\n        [28599, 75, 4986705, 'Finland', 1990],\n        [29476, 77.1, 56943299, 'France', 1990],\n        [31476, 75.4, 78958237, 'Germany', 1990],\n        [28666, 78.1, 254830, 'Iceland', 1990],\n        [1777, 57.7, 870601776, 'India', 1990],\n        [29550, 79.1, 122249285, 'Japan', 1990],\n        [2076, 67.9, 20194354, 'North Korea', 1990],\n        [12087, 72, 42972254, 'South Korea', 1990],\n        [24021, 75.4, 3397534, 'New Zealand', 1990],\n        [43296, 76.8, 4240375, 'Norway', 1990],\n        [10088, 70.8, 38195258, 'Poland', 1990],\n        [19349, 69.6, 147568552, 'Russia', 1990],\n        [10670, 67.3, 53994605, 'Turkey', 1990],\n        [26424, 75.7, 57110117, 'United Kingdom', 1990],\n        [37062, 75.4, 252847810, 'United States', 1990]\n      ],\n      [\n        [44056, 81.8, 23968973, 'Australia', 2015],\n        [43294, 81.7, 35939927, 'Canada', 2015],\n        [13334, 76.9, 1376048943, 'China', 2015],\n        [21291, 78.5, 11389562, 'Cuba', 2015],\n        [38923, 80.8, 5503457, 'Finland', 2015],\n        [37599, 81.9, 64395345, 'France', 2015],\n        [44053, 81.1, 80688545, 'Germany', 2015],\n        [42182, 82.8, 329425, 'Iceland', 2015],\n        [5903, 66.8, 1311050527, 'India', 2015],\n        [36162, 83.5, 126573481, 'Japan', 2015],\n        [1390, 71.4, 25155317, 'North Korea', 2015],\n        [34644, 80.7, 50293439, 'South Korea', 2015],\n        [34186, 80.6, 4528526, 'New Zealand', 2015],\n        [64304, 81.6, 5210967, 'Norway', 2015],\n        [24787, 77.3, 38611794, 'Poland', 2015],\n        [23038, 73.13, 143456918, 'Russia', 2015],\n        [19360, 76.5, 78665830, 'Turkey', 2015],\n        [38225, 81.4, 64715810, 'United Kingdom', 2015],\n        [53354, 79.1, 321773631, 'United States', 2015]\n      ]\n    ]\n    return {\n      scatter: {\n        legend: {\n          right: 10,\n          data: ['1990', '2015']\n        },\n        xAxis: {\n          splitLine: {\n            lineStyle: {\n              type: 'dashed'\n            }\n          }\n        },\n        yAxis: {\n          splitLine: {\n            lineStyle: {\n              type: 'dashed'\n            }\n          },\n          scale: true\n        },\n        series: [\n          {\n            name: '1990',\n            data: data[0],\n            type: 'scatter',\n            symbolSize (data) {\n              return Math.sqrt(data[2]) / 5e2\n            },\n            label: {\n              emphasis: {\n                show: true,\n                formatter ({ data }) {\n                  return data[3]\n                },\n                position: 'top'\n              }\n            },\n            itemStyle: {\n              normal: {\n                shadowBlur: 10,\n                shadowColor: 'rgba(120, 36, 50, 0.5)',\n                shadowOffsetY: 5,\n                color: new graphic.RadialGradient(0.4, 0.3, 1, [\n                  {\n                    offset: 0,\n                    color: 'rgb(251, 118, 123)'\n                  }, {\n                    offset: 1,\n                    color: 'rgb(204, 46, 72)'\n                  }\n                ])\n              }\n            }\n          }, {\n            name: '2015',\n            data: data[1],\n            type: 'scatter',\n            symbolSize (data) {\n              return Math.sqrt(data[2]) / 5e2\n            },\n            label: {\n              emphasis: {\n                show: true,\n                formatter ({ data }) {\n                  return data[3]\n                },\n                position: 'top'\n              }\n            },\n            itemStyle: {\n              normal: {\n                shadowBlur: 10,\n                shadowColor: 'rgba(25, 100, 150, 0.5)',\n                shadowOffsetY: 5,\n                color: new graphic.RadialGradient(0.4, 0.3, 1, [\n                  {\n                    offset: 0,\n                    color: 'rgb(129, 227, 238)'\n                  }, {\n                    offset: 1,\n                    color: 'rgb(25, 183, 207)'\n                  }\n                ])\n              }\n            }\n          }\n        ]\n      }\n    }\n  },\n  components: {\n    ECharts\n  }\n}\n</script>\n"],"sourceRoot":"src/views/charts-and-maps/charts/echarts"}]}