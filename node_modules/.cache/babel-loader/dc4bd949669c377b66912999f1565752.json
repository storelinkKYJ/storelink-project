{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/babel-loader/lib/index.js!/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink-project/src/views/apps/todo/TodoAddNew.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink-project/src/views/apps/todo/TodoAddNew.vue","mtime":1610509510823},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/babel-loader/lib/index.js","mtime":1610344922456},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      activePrompt: false,\n      taskLocal: {\n        title: '',\n        desc: '',\n        isCompleted: false,\n        isImportant: false,\n        isStarred: false,\n        tags: []\n      }\n    };\n  },\n  computed: {\n    taskTags: function taskTags() {\n      return this.$store.state.todo.taskTags;\n    },\n    validateForm: function validateForm() {\n      return !this.errors.any() && this.taskLocal.title !== '';\n    }\n  },\n  methods: {\n    clearFields: function clearFields() {\n      Object.assign(this.taskLocal, {\n        title: '',\n        desc: '',\n        isCompleted: false,\n        isImportant: false,\n        isStarred: false,\n        tags: []\n      });\n    },\n    addTodo: function addTodo() {\n      var _this = this;\n\n      this.$validator.validateAll().then(function (result) {\n        if (result) {\n          _this.$store.dispatch('todo/addTask', Object.assign({}, _this.taskLocal));\n\n          _this.clearFields();\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["TodoAddNew.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,KADA;AAGA,MAAA,SAAA,EAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,IAAA,EAAA,EAFA;AAGA,QAAA,WAAA,EAAA,KAHA;AAIA,QAAA,WAAA,EAAA,KAJA;AAKA,QAAA,SAAA,EAAA,KALA;AAMA,QAAA,IAAA,EAAA;AANA;AAHA,KAAA;AAYA,GAdA;AAeA,EAAA,QAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,QAAA;AACA,KAHA;AAIA,IAAA,YAJA,0BAIA;AACA,aAAA,CAAA,KAAA,MAAA,CAAA,GAAA,EAAA,IAAA,KAAA,SAAA,CAAA,KAAA,KAAA,EAAA;AACA;AANA,GAfA;AAuBA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,MAAA,MAAA,CAAA,MAAA,CAAA,KAAA,SAAA,EAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,IAAA,EAAA,EAFA;AAGA,QAAA,WAAA,EAAA,KAHA;AAIA,QAAA,WAAA,EAAA,KAJA;AAKA,QAAA,SAAA,EAAA,KALA;AAMA,QAAA,IAAA,EAAA;AANA,OAAA;AAQA,KAVA;AAWA,IAAA,OAXA,qBAWA;AAAA;;AACA,WAAA,UAAA,CAAA,WAAA,GAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA,YAAA,MAAA,EAAA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,cAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAA,CAAA,SAAA,CAAA;;AACA,UAAA,KAAA,CAAA,WAAA;AACA;AACA,OALA;AAMA;AAlBA;AAvBA,CAAA","sourcesContent":["<!-- =========================================================================================\n    File Name: TodoAddNew.vue\n    Description: Add new todo component\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n    <div class=\"px-6 pb-2 pt-6\">\n    <vs-button @click=\"activePrompt = true\" class=\"w-full\">Add Task</vs-button>\n    <vs-prompt\n        title=\"Add Task\"\n        accept-text= \"Add Task\"\n        button-cancel = \"border\"\n        @cancel=\"clearFields\"\n        @accept=\"addTodo\"\n        @close=\"clearFields\"\n        :is-valid=\"validateForm\"\n        :active.sync=\"activePrompt\">\n        <div>\n            <form>\n                <div class=\"vx-row\">\n\n                    <div class=\"vx-col ml-auto flex\">\n                        <feather-icon icon=\"InfoIcon\" class=\"cursor-pointer\" :svgClasses=\"[{'text-success stroke-current': taskLocal.isImportant}, 'w-5', 'h-5 mr-4']\" @click.prevent=\"taskLocal.isImportant = !taskLocal.isImportant\"></feather-icon>\n\n                        <feather-icon icon=\"StarIcon\" class=\"cursor-pointer\" :svgClasses=\"[{'text-warning stroke-current': taskLocal.isStarred}, 'w-5', 'h-5 mr-4']\" @click.prevent=\"taskLocal.isStarred = !taskLocal.isStarred\"></feather-icon>\n\n                        <vs-dropdown class=\"cursor-pointer flex\" vs-custom-content>\n\n                            <feather-icon icon=\"TagIcon\" svgClasses=\"h-5 w-5\" @click.prevent></feather-icon>\n                            <!-- <vs-button radius color=\"success\" type=\"flat\" iconPack=\"feather\" icon=\"icon-tag\" @click.prevent></vs-button> -->\n\n                            <vs-dropdown-menu style=\"z-index: 200001\">\n                                    <vs-dropdown-item @click.stop v-for=\"(tag, index) in taskTags\" :key=\"index\">\n                                        <vs-checkbox :vs-value=\"tag.value\" v-model=\"taskLocal.tags\">{{ tag.text }}</vs-checkbox>\n                                    </vs-dropdown-item>\n                            </vs-dropdown-menu>\n                        </vs-dropdown>\n                    </div>\n                </div>\n\n                <div class=\"vx-row\">\n                    <div class=\"vx-col w-full\">\n                        <vs-input v-validate=\"'required'\" name=\"title\" class=\"w-full mb-4 mt-5\" placeholder=\"Title\" v-model=\"taskLocal.title\" :color=\"validateForm ? 'success' : 'danger'\" />\n                        <vs-textarea rows=\"5\" label=\"Add description\" v-model=\"taskLocal.desc\" />\n                    </div>\n                </div>\n\n            </form>\n        </div>\n    </vs-prompt>\n    </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      activePrompt: false,\n\n      taskLocal: {\n        title: '',\n        desc: '',\n        isCompleted: false,\n        isImportant: false,\n        isStarred: false,\n        tags: []\n      }\n    }\n  },\n  computed: {\n    taskTags () {\n      return this.$store.state.todo.taskTags\n    },\n    validateForm () {\n      return !this.errors.any() && this.taskLocal.title !== ''\n    }\n  },\n  methods: {\n    clearFields () {\n      Object.assign(this.taskLocal, {\n        title: '',\n        desc: '',\n        isCompleted: false,\n        isImportant: false,\n        isStarred: false,\n        tags: []\n      })\n    },\n    addTodo () {\n      this.$validator.validateAll().then(result => {\n        if (result) {\n          this.$store.dispatch('todo/addTask', Object.assign({}, this.taskLocal))\n          this.clearFields()\n        }\n      })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/apps/todo"}]}