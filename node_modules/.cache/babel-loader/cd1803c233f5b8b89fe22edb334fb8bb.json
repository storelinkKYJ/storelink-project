{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/babel-loader/lib/index.js!/Users/gim-yeongjae/Desktop/storelink3-admin/src/store/auth/moduleAuthActions.js","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/src/store/auth/moduleAuthActions.js","mtime":1610509510813},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/babel-loader/lib/index.js","mtime":1610344922456}],"contextDependencies":[],"result":["/*=========================================================================================\n  File Name: moduleAuthActions.js\n  Description: Auth Module Actions\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\nimport jwt from \"../../http/requests/auth/jwt/index.js\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport router from '@/router';\nexport default {\n  loginAttempt: function loginAttempt(_ref, payload) {\n    var dispatch = _ref.dispatch;\n    // New payload for login action\n    var newPayload = {\n      userDetails: payload.userDetails,\n      notify: payload.notify,\n      closeAnimation: payload.closeAnimation\n    }; // If remember_me is enabled change firebase Persistence\n\n    if (!payload.checkbox_remember_me) {\n      // Change firebase Persistence\n      firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION) // If success try to login\n      .then(function () {\n        dispatch('login', newPayload);\n      }) // If error notify\n      .catch(function (err) {\n        // Close animation if passed as payload\n        if (payload.closeAnimation) payload.closeAnimation();\n        payload.notify({\n          time: 2500,\n          title: 'Error',\n          text: err.message,\n          iconPack: 'feather',\n          icon: 'icon-alert-circle',\n          color: 'danger'\n        });\n      });\n    } else {\n      // Try to login\n      dispatch('login', newPayload);\n    }\n  },\n  login: function login(_ref2, payload) {\n    var commit = _ref2.commit,\n        state = _ref2.state,\n        dispatch = _ref2.dispatch;\n\n    // If user is already logged in notify and exit\n    if (state.isUserLoggedIn()) {\n      // Close animation if passed as payload\n      if (payload.closeAnimation) payload.closeAnimation();\n      payload.notify({\n        title: 'Login Attempt',\n        text: 'You are already logged in!',\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'warning'\n      });\n      return false;\n    } // Try to sigin\n\n\n    firebase.auth().signInWithEmailAndPassword(payload.userDetails.email, payload.userDetails.password).then(function (result) {\n      // Set FLAG username update required for updating username\n      var isUsernameUpdateRequired = false; // if username is provided and updateUsername FLAG is true\n      // set local username update FLAG to true\n      // try to update username\n\n      if (payload.updateUsername && payload.userDetails.displayName) {\n        isUsernameUpdateRequired = true;\n        dispatch('updateUsername', {\n          user: result.user,\n          username: payload.userDetails.displayName,\n          notify: payload.notify,\n          isReloadRequired: true\n        });\n      } // Close animation if passed as payload\n\n\n      if (payload.closeAnimation) payload.closeAnimation(); // if username update is not required\n      // just reload the page to get fresh data\n      // set new user data in localstorage\n\n      if (!isUsernameUpdateRequired) {\n        router.push(router.currentRoute.query.to || '/');\n        commit('UPDATE_USER_INFO', result.user.providerData[0], {\n          root: true\n        });\n      }\n    }, function (err) {\n      // Close animation if passed as payload\n      if (payload.closeAnimation) payload.closeAnimation();\n      payload.notify({\n        time: 2500,\n        title: 'Error',\n        text: err.message,\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'danger'\n      });\n    });\n  },\n  // Google Login\n  loginWithGoogle: function loginWithGoogle(_ref3, payload) {\n    var commit = _ref3.commit,\n        state = _ref3.state;\n\n    if (state.isUserLoggedIn()) {\n      payload.notify({\n        title: 'Login Attempt',\n        text: 'You are already logged in!',\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'warning'\n      });\n      return false;\n    }\n\n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(function (result) {\n      router.push(router.currentRoute.query.to || '/');\n      commit('UPDATE_USER_INFO', result.user.providerData[0], {\n        root: true\n      });\n    }).catch(function (err) {\n      payload.notify({\n        time: 2500,\n        title: 'Error',\n        text: err.message,\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'danger'\n      });\n    });\n  },\n  // Facebook Login\n  loginWithFacebook: function loginWithFacebook(_ref4, payload) {\n    var commit = _ref4.commit,\n        state = _ref4.state;\n\n    if (state.isUserLoggedIn()) {\n      payload.notify({\n        title: 'Login Attempt',\n        text: 'You are already logged in!',\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'warning'\n      });\n      return false;\n    }\n\n    var provider = new firebase.auth.FacebookAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(function (result) {\n      router.push(router.currentRoute.query.to || '/');\n      commit('UPDATE_USER_INFO', result.user.providerData[0], {\n        root: true\n      });\n    }).catch(function (err) {\n      payload.notify({\n        time: 2500,\n        title: 'Error',\n        text: err.message,\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'danger'\n      });\n    });\n  },\n  // Twitter Login\n  loginWithTwitter: function loginWithTwitter(_ref5, payload) {\n    var commit = _ref5.commit,\n        state = _ref5.state;\n\n    if (state.isUserLoggedIn()) {\n      payload.notify({\n        title: 'Login Attempt',\n        text: 'You are already logged in!',\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'warning'\n      });\n      return false;\n    }\n\n    var provider = new firebase.auth.TwitterAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(function (result) {\n      router.push(router.currentRoute.query.to || '/');\n      commit('UPDATE_USER_INFO', result.user.providerData[0], {\n        root: true\n      });\n    }).catch(function (err) {\n      payload.notify({\n        time: 2500,\n        title: 'Error',\n        text: err.message,\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'danger'\n      });\n    });\n  },\n  // Github Login\n  loginWithGithub: function loginWithGithub(_ref6, payload) {\n    var commit = _ref6.commit,\n        state = _ref6.state;\n\n    if (state.isUserLoggedIn()) {\n      payload.notify({\n        title: 'Login Attempt',\n        text: 'You are already logged in!',\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'warning'\n      });\n      return false;\n    }\n\n    var provider = new firebase.auth.GithubAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(function (result) {\n      router.push(router.currentRoute.query.to || '/');\n      commit('UPDATE_USER_INFO', result.user.providerData[0], {\n        root: true\n      });\n    }).catch(function (err) {\n      payload.notify({\n        time: 2500,\n        title: 'Error',\n        text: err.message,\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'danger'\n      });\n    });\n  },\n  registerUser: function registerUser(_ref7, payload) {\n    var dispatch = _ref7.dispatch;\n    // create user using firebase\n    firebase.auth().createUserWithEmailAndPassword(payload.userDetails.email, payload.userDetails.password).then(function () {\n      payload.notify({\n        title: 'Account Created',\n        text: 'You are successfully registered!',\n        iconPack: 'feather',\n        icon: 'icon-check',\n        color: 'success'\n      });\n      var newPayload = {\n        userDetails: payload.userDetails,\n        notify: payload.notify,\n        updateUsername: true\n      };\n      dispatch('login', newPayload);\n    }, function (error) {\n      payload.notify({\n        title: 'Error',\n        text: error.message,\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'danger'\n      });\n    });\n  },\n  updateUsername: function updateUsername(_ref8, payload) {\n    var commit = _ref8.commit;\n    payload.user.updateProfile({\n      displayName: payload.displayName\n    }).then(function () {\n      // If username update is success\n      // update in localstorage\n      var newUserData = Object.assign({}, payload.user.providerData[0]);\n      newUserData.displayName = payload.displayName;\n      commit('UPDATE_USER_INFO', newUserData, {\n        root: true\n      }); // If reload is required to get fresh data after update\n      // Reload current page\n\n      if (payload.isReloadRequired) {\n        router.push(router.currentRoute.query.to || '/');\n      }\n    }).catch(function (err) {\n      payload.notify({\n        time: 8800,\n        title: 'Error',\n        text: err.message,\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'danger'\n      });\n    });\n  },\n  // JWT\n  loginJWT: function loginJWT(_ref9, payload) {\n    var commit = _ref9.commit;\n    return new Promise(function (resolve, reject) {\n      jwt.login(payload.userDetails.email, payload.userDetails.password).then(function (response) {\n        // If there's user data in response\n        if (response.data.userData) {\n          // Navigate User to homepage\n          router.push(router.currentRoute.query.to || '/'); // Set accessToken\n\n          localStorage.setItem('accessToken', response.data.accessToken); // Update user details\n\n          commit('UPDATE_USER_INFO', response.data.userData, {\n            root: true\n          }); // Set bearer token in axios\n\n          commit('SET_BEARER', response.data.accessToken);\n          resolve(response);\n        } else {\n          reject({\n            message: 'Wrong Email or Password'\n          });\n        }\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  registerUserJWT: function registerUserJWT(_ref10, payload) {\n    var commit = _ref10.commit;\n    var _payload$userDetails = payload.userDetails,\n        displayName = _payload$userDetails.displayName,\n        email = _payload$userDetails.email,\n        password = _payload$userDetails.password,\n        confirmPassword = _payload$userDetails.confirmPassword;\n    return new Promise(function (resolve, reject) {\n      // Check confirm password\n      if (password !== confirmPassword) {\n        reject({\n          message: 'Password doesn\\'t match. Please try again.'\n        });\n      }\n\n      jwt.registerUser(displayName, email, password).then(function (response) {\n        // Redirect User\n        router.push(router.currentRoute.query.to || '/'); // Update data in localStorage\n\n        localStorage.setItem('accessToken', response.data.accessToken);\n        commit('UPDATE_USER_INFO', response.data.userData, {\n          root: true\n        });\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  fetchAccessToken: function fetchAccessToken() {\n    return new Promise(function (resolve) {\n      jwt.refreshToken().then(function (response) {\n        resolve(response);\n      });\n    });\n  }\n};",{"version":3,"sources":["/Users/gim-yeongjae/Desktop/storelink3-admin/src/store/auth/moduleAuthActions.js"],"names":["jwt","firebase","router","loginAttempt","payload","dispatch","newPayload","userDetails","notify","closeAnimation","checkbox_remember_me","auth","setPersistence","Auth","Persistence","SESSION","then","catch","err","time","title","text","message","iconPack","icon","color","login","commit","state","isUserLoggedIn","signInWithEmailAndPassword","email","password","result","isUsernameUpdateRequired","updateUsername","displayName","user","username","isReloadRequired","push","currentRoute","query","to","providerData","root","loginWithGoogle","provider","GoogleAuthProvider","signInWithPopup","loginWithFacebook","FacebookAuthProvider","loginWithTwitter","TwitterAuthProvider","loginWithGithub","GithubAuthProvider","registerUser","createUserWithEmailAndPassword","error","updateProfile","newUserData","Object","assign","loginJWT","Promise","resolve","reject","response","data","userData","localStorage","setItem","accessToken","registerUserJWT","confirmPassword","fetchAccessToken","refreshToken"],"mappings":"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","sourcesContent":["/*=========================================================================================\n  File Name: moduleAuthActions.js\n  Description: Auth Module Actions\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\n\nimport jwt from '../../http/requests/auth/jwt/index.js'\n\n\nimport firebase from 'firebase/app'\nimport 'firebase/auth'\nimport router from '@/router'\n\nexport default {\n  loginAttempt ({ dispatch }, payload) {\n\n    // New payload for login action\n    const newPayload = {\n      userDetails: payload.userDetails,\n      notify: payload.notify,\n      closeAnimation: payload.closeAnimation\n    }\n\n    // If remember_me is enabled change firebase Persistence\n    if (!payload.checkbox_remember_me) {\n\n      // Change firebase Persistence\n      firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION)\n\n      // If success try to login\n        .then(function () {\n          dispatch('login', newPayload)\n        })\n\n      // If error notify\n        .catch(function (err) {\n\n          // Close animation if passed as payload\n          if (payload.closeAnimation) payload.closeAnimation()\n\n          payload.notify({\n            time: 2500,\n            title: 'Error',\n            text: err.message,\n            iconPack: 'feather',\n            icon: 'icon-alert-circle',\n            color: 'danger'\n          })\n        })\n    } else {\n      // Try to login\n      dispatch('login', newPayload)\n    }\n  },\n  login ({ commit, state, dispatch }, payload) {\n\n    // If user is already logged in notify and exit\n    if (state.isUserLoggedIn()) {\n      // Close animation if passed as payload\n      if (payload.closeAnimation) payload.closeAnimation()\n\n      payload.notify({\n        title: 'Login Attempt',\n        text: 'You are already logged in!',\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'warning'\n      })\n\n      return false\n    }\n\n    // Try to sigin\n    firebase.auth().signInWithEmailAndPassword(payload.userDetails.email, payload.userDetails.password)\n\n      .then((result) => {\n\n        // Set FLAG username update required for updating username\n        let isUsernameUpdateRequired = false\n\n        // if username is provided and updateUsername FLAG is true\n        // set local username update FLAG to true\n        // try to update username\n        if (payload.updateUsername && payload.userDetails.displayName) {\n\n          isUsernameUpdateRequired = true\n\n          dispatch('updateUsername', {\n            user: result.user,\n            username: payload.userDetails.displayName,\n            notify: payload.notify,\n            isReloadRequired: true\n          })\n        }\n\n        // Close animation if passed as payload\n        if (payload.closeAnimation) payload.closeAnimation()\n\n        // if username update is not required\n        // just reload the page to get fresh data\n        // set new user data in localstorage\n        if (!isUsernameUpdateRequired) {\n          router.push(router.currentRoute.query.to || '/')\n          commit('UPDATE_USER_INFO', result.user.providerData[0], {root: true})\n        }\n      }, (err) => {\n\n        // Close animation if passed as payload\n        if (payload.closeAnimation) payload.closeAnimation()\n\n        payload.notify({\n          time: 2500,\n          title: 'Error',\n          text: err.message,\n          iconPack: 'feather',\n          icon: 'icon-alert-circle',\n          color: 'danger'\n        })\n      })\n  },\n\n  // Google Login\n  loginWithGoogle ({commit, state}, payload) {\n    if (state.isUserLoggedIn()) {\n      payload.notify({\n        title: 'Login Attempt',\n        text: 'You are already logged in!',\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'warning'\n      })\n      return false\n    }\n    const provider = new firebase.auth.GoogleAuthProvider()\n\n    firebase.auth().signInWithPopup(provider)\n      .then((result) => {\n        router.push(router.currentRoute.query.to || '/')\n        commit('UPDATE_USER_INFO', result.user.providerData[0], {root: true})\n      }).catch((err) => {\n        payload.notify({\n          time: 2500,\n          title: 'Error',\n          text: err.message,\n          iconPack: 'feather',\n          icon: 'icon-alert-circle',\n          color: 'danger'\n        })\n      })\n  },\n\n  // Facebook Login\n  loginWithFacebook ({commit, state}, payload) {\n    if (state.isUserLoggedIn()) {\n      payload.notify({\n        title: 'Login Attempt',\n        text: 'You are already logged in!',\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'warning'\n      })\n      return false\n    }\n    const provider = new firebase.auth.FacebookAuthProvider()\n\n    firebase.auth().signInWithPopup(provider)\n      .then((result) => {\n        router.push(router.currentRoute.query.to || '/')\n        commit('UPDATE_USER_INFO', result.user.providerData[0], {root: true})\n      }).catch((err) => {\n        payload.notify({\n          time: 2500,\n          title: 'Error',\n          text: err.message,\n          iconPack: 'feather',\n          icon: 'icon-alert-circle',\n          color: 'danger'\n        })\n      })\n  },\n\n  // Twitter Login\n  loginWithTwitter ({commit, state}, payload) {\n    if (state.isUserLoggedIn()) {\n      payload.notify({\n        title: 'Login Attempt',\n        text: 'You are already logged in!',\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'warning'\n      })\n      return false\n    }\n    const provider = new firebase.auth.TwitterAuthProvider()\n\n    firebase.auth().signInWithPopup(provider)\n      .then((result) => {\n        router.push(router.currentRoute.query.to || '/')\n        commit('UPDATE_USER_INFO', result.user.providerData[0], {root: true})\n      }).catch((err) => {\n        payload.notify({\n          time: 2500,\n          title: 'Error',\n          text: err.message,\n          iconPack: 'feather',\n          icon: 'icon-alert-circle',\n          color: 'danger'\n        })\n      })\n  },\n\n  // Github Login\n  loginWithGithub ({commit, state}, payload) {\n    if (state.isUserLoggedIn()) {\n      payload.notify({\n        title: 'Login Attempt',\n        text: 'You are already logged in!',\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'warning'\n      })\n      return false\n    }\n    const provider = new firebase.auth.GithubAuthProvider()\n\n    firebase.auth().signInWithPopup(provider)\n      .then((result) => {\n        router.push(router.currentRoute.query.to || '/')\n        commit('UPDATE_USER_INFO', result.user.providerData[0], {root: true})\n      }).catch((err) => {\n        payload.notify({\n          time: 2500,\n          title: 'Error',\n          text: err.message,\n          iconPack: 'feather',\n          icon: 'icon-alert-circle',\n          color: 'danger'\n        })\n      })\n  },\n  registerUser ({dispatch}, payload) {\n\n    // create user using firebase\n    firebase.auth().createUserWithEmailAndPassword(payload.userDetails.email, payload.userDetails.password)\n      .then(() => {\n        payload.notify({\n          title: 'Account Created',\n          text: 'You are successfully registered!',\n          iconPack: 'feather',\n          icon: 'icon-check',\n          color: 'success'\n        })\n\n        const newPayload = {\n          userDetails: payload.userDetails,\n          notify: payload.notify,\n          updateUsername: true\n        }\n        dispatch('login', newPayload)\n      }, (error) => {\n        payload.notify({\n          title: 'Error',\n          text: error.message,\n          iconPack: 'feather',\n          icon: 'icon-alert-circle',\n          color: 'danger'\n        })\n      })\n  },\n  updateUsername ({ commit }, payload) {\n    payload.user.updateProfile({\n      displayName: payload.displayName\n    }).then(() => {\n\n      // If username update is success\n      // update in localstorage\n      const newUserData = Object.assign({}, payload.user.providerData[0])\n      newUserData.displayName = payload.displayName\n      commit('UPDATE_USER_INFO', newUserData, {root: true})\n\n      // If reload is required to get fresh data after update\n      // Reload current page\n      if (payload.isReloadRequired) {\n        router.push(router.currentRoute.query.to || '/')\n      }\n    }).catch((err) => {\n      payload.notify({\n        time: 8800,\n        title: 'Error',\n        text: err.message,\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'danger'\n      })\n    })\n  },\n\n\n  // JWT\n  loginJWT ({ commit }, payload) {\n\n    return new Promise((resolve, reject) => {\n      jwt.login(payload.userDetails.email, payload.userDetails.password)\n        .then(response => {\n\n          // If there's user data in response\n          if (response.data.userData) {\n            // Navigate User to homepage\n            router.push(router.currentRoute.query.to || '/')\n\n            // Set accessToken\n            localStorage.setItem('accessToken', response.data.accessToken)\n\n            // Update user details\n            commit('UPDATE_USER_INFO', response.data.userData, {root: true})\n\n            // Set bearer token in axios\n            commit('SET_BEARER', response.data.accessToken)\n\n            resolve(response)\n          } else {\n            reject({message: 'Wrong Email or Password'})\n          }\n\n        })\n        .catch(error => { reject(error) })\n    })\n  },\n  registerUserJWT ({ commit }, payload) {\n\n    const { displayName, email, password, confirmPassword } = payload.userDetails\n\n    return new Promise((resolve, reject) => {\n\n      // Check confirm password\n      if (password !== confirmPassword) {\n        reject({message: 'Password doesn\\'t match. Please try again.'})\n      }\n\n      jwt.registerUser(displayName, email, password)\n        .then(response => {\n          // Redirect User\n          router.push(router.currentRoute.query.to || '/')\n\n          // Update data in localStorage\n          localStorage.setItem('accessToken', response.data.accessToken)\n          commit('UPDATE_USER_INFO', response.data.userData, {root: true})\n\n          resolve(response)\n        })\n        .catch(error => { reject(error) })\n    })\n  },\n  fetchAccessToken () {\n    return new Promise((resolve) => {\n      jwt.refreshToken().then(response => { resolve(response) })\n    })\n  }\n}\n"]}]}