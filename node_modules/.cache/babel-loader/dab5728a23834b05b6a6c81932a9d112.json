{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/babel-loader/lib/index.js!/Users/gim-yeongjae/Desktop/storelink-project/src/store/state.js","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink-project/src/store/state.js","mtime":1610509510817},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink-project/node_modules/babel-loader/lib/index.js","mtime":1610344922456}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\n\n/*=========================================================================================\n  File Name: state.js\n  Description: Vuex Store - state\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\nimport navbarSearchAndPinList from '@/layouts/components/navbar/navbarSearchAndPinList';\nimport themeConfig, { colors } from '@/../themeConfig.js'; // /////////////////////////////////////////////\n// Helper\n// /////////////////////////////////////////////\n// *From Auth - Data will be received from auth provider\n\nvar userDefaults = {\n  uid: 0,\n  // From Auth\n  displayName: 'John Doe',\n  // From Auth\n  about: 'Dessert chocolate cake lemon drops jujubes. Biscuit cupcake ice cream bear claw brownie brownie marshmallow.',\n  photoURL: require('@/assets/images/portrait/small/avatar-s-11.jpg'),\n  // From Auth\n  status: 'online',\n  userRole: 'admin'\n};\nvar userInfoLocalStorage = JSON.parse(localStorage.getItem('userInfo')) || {}; // Set default values for active-user\n// More data can be added by auth provider or other plugins/packages\n\nvar getUserInfo = function getUserInfo() {\n  var userInfo = {}; // Update property in user\n\n  Object.keys(userDefaults).forEach(function (key) {\n    // If property is defined in localStorage => Use that\n    userInfo[key] = userInfoLocalStorage[key] ? userInfoLocalStorage[key] : userDefaults[key];\n  }); // Include properties from localStorage\n\n  Object.keys(userInfoLocalStorage).forEach(function (key) {\n    if (userInfo[key] === undefined && userInfoLocalStorage[key] !== null) userInfo[key] = userInfoLocalStorage[key];\n  });\n  return userInfo;\n}; // Check if device is touch device\n// This is used to remove perfect scrollbar from touch devices\n// Using Dynamic components\n\n\nvar is_touch_device = function is_touch_device() {\n  var prefixes = ' -webkit- -moz- -o- -ms- '.split(' ');\n\n  var mq = function mq(query) {\n    return window.matchMedia(query).matches;\n  };\n\n  if ('ontouchstart' in window || window.DocumentTouch) {\n    return true;\n  } // include the 'heartz' as a way to have a non matching MQ to help terminate the join\n  // https://git.io/vznFH\n\n\n  var query = ['(', prefixes.join('touch-enabled),('), 'heartz', ')'].join('');\n  return mq(query);\n}; // /////////////////////////////////////////////\n// State\n// /////////////////////////////////////////////\n\n\nvar state = {\n  AppActiveUser: getUserInfo(),\n  bodyOverlay: false,\n  isVerticalNavMenuActive: true,\n  is_touch_device: is_touch_device(),\n  mainLayoutType: themeConfig.mainLayoutType || 'vertical',\n  navbarSearchAndPinList: navbarSearchAndPinList,\n  reduceButton: themeConfig.sidebarCollapsed,\n  verticalNavMenuWidth: 'default',\n  verticalNavMenuItemsMin: false,\n  scrollY: 0,\n  starredPages: navbarSearchAndPinList['pages'].data.filter(function (page) {\n    return page.is_bookmarked;\n  }),\n  theme: themeConfig.theme || 'light',\n  themePrimaryColor: colors.primary,\n  // Can be used to get current window with\n  // Note: Above breakpoint state is for internal use of sidebar & navbar component\n  windowWidth: null\n};\nexport default state;",{"version":3,"sources":["/Users/gim-yeongjae/Desktop/storelink-project/src/store/state.js"],"names":["navbarSearchAndPinList","themeConfig","colors","userDefaults","uid","displayName","about","photoURL","require","status","userRole","userInfoLocalStorage","JSON","parse","localStorage","getItem","getUserInfo","userInfo","Object","keys","forEach","key","undefined","is_touch_device","prefixes","split","mq","query","window","matchMedia","matches","DocumentTouch","join","state","AppActiveUser","bodyOverlay","isVerticalNavMenuActive","mainLayoutType","reduceButton","sidebarCollapsed","verticalNavMenuWidth","verticalNavMenuItemsMin","scrollY","starredPages","data","filter","page","is_bookmarked","theme","themePrimaryColor","primary","windowWidth"],"mappings":"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","sourcesContent":["/*=========================================================================================\n  File Name: state.js\n  Description: Vuex Store - state\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n==========================================================================================*/\n\nimport navbarSearchAndPinList from '@/layouts/components/navbar/navbarSearchAndPinList'\nimport themeConfig, { colors } from '@/../themeConfig.js'\n\n// /////////////////////////////////////////////\n// Helper\n// /////////////////////////////////////////////\n\n// *From Auth - Data will be received from auth provider\nconst userDefaults = {\n  uid         : 0,          // From Auth\n  displayName : 'John Doe', // From Auth\n  about       : 'Dessert chocolate cake lemon drops jujubes. Biscuit cupcake ice cream bear claw brownie brownie marshmallow.',\n  photoURL    : require('@/assets/images/portrait/small/avatar-s-11.jpg'), // From Auth\n  status      : 'online',\n  userRole    : 'admin'\n}\n\nconst userInfoLocalStorage = JSON.parse(localStorage.getItem('userInfo')) || {}\n\n// Set default values for active-user\n// More data can be added by auth provider or other plugins/packages\nconst getUserInfo = () => {\n  const userInfo = {}\n\n  // Update property in user\n  Object.keys(userDefaults).forEach((key) => {\n    // If property is defined in localStorage => Use that\n    userInfo[key] = userInfoLocalStorage[key] ?  userInfoLocalStorage[key] : userDefaults[key]\n  })\n\n  // Include properties from localStorage\n  Object.keys(userInfoLocalStorage).forEach((key) => {\n    if (userInfo[key] === undefined && userInfoLocalStorage[key] !== null) userInfo[key] = userInfoLocalStorage[key]\n  })\n\n  return userInfo\n}\n\n\n// Check if device is touch device\n// This is used to remove perfect scrollbar from touch devices\n// Using Dynamic components\nconst is_touch_device = () => {\n  const prefixes = ' -webkit- -moz- -o- -ms- '.split(' ')\n  const mq = function (query) {\n    return window.matchMedia(query).matches\n  }\n\n  if ('ontouchstart' in window || window.DocumentTouch) {\n    return true\n  }\n\n  // include the 'heartz' as a way to have a non matching MQ to help terminate the join\n  // https://git.io/vznFH\n  const query = ['(', prefixes.join('touch-enabled),('), 'heartz', ')'].join('')\n  return mq(query)\n}\n\n\n// /////////////////////////////////////////////\n// State\n// /////////////////////////////////////////////\n\nconst state = {\n  AppActiveUser           : getUserInfo(),\n  bodyOverlay             : false,\n  isVerticalNavMenuActive : true,\n  is_touch_device         : is_touch_device(),\n  mainLayoutType          : themeConfig.mainLayoutType || 'vertical',\n  navbarSearchAndPinList,\n  reduceButton            : themeConfig.sidebarCollapsed,\n  verticalNavMenuWidth    : 'default',\n  verticalNavMenuItemsMin : false,\n  scrollY                 : 0,\n  starredPages            : navbarSearchAndPinList['pages'].data.filter((page) => page.is_bookmarked),\n  theme                   : themeConfig.theme || 'light',\n  themePrimaryColor       : colors.primary,\n\n  // Can be used to get current window with\n  // Note: Above breakpoint state is for internal use of sidebar & navbar component\n  windowWidth: null\n}\n\nexport default state\n"]}]}