{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/babel-loader/lib/index.js!/Users/gim-yeongjae/Desktop/storelink3-admin/src/fake-db/data/apps/chat/index.js","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/src/fake-db/data/apps/chat/index.js","mtime":1610509510804},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/babel-loader/lib/index.js","mtime":1610344922456}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\nimport mock from '@/fake-db/mock.js'; // Contact\n\nvar data = {\n  contacts: [{\n    uid: 1,\n    displayName: 'Felecia Rower',\n    about: 'Cake pie jelly jelly beans. Marzipan lemon drops halvah cake. Pudding cookie lemon drops icing',\n    photoURL: require('@/assets/images/portrait/small/avatar-s-1.jpg'),\n    status: 'offline'\n  }, {\n    uid: 2,\n    displayName: 'Adalberto Granzin',\n    about: 'Toffee caramels jelly-o tart gummi bears cake I love ice cream lollipop. Sweet liquorice croissant candy danish dessert icing. Cake macaroon gingerbread toffee sweet.',\n    photoURL: require('@/assets/images/portrait/small/avatar-s-2.jpg'),\n    status: 'do not disturb'\n  }, {\n    uid: 3,\n    displayName: 'Joaquina Weisenborn',\n    about: 'Souffl√© souffl√© caramels sweet roll. Jelly lollipop sesame snaps bear claw jelly beans sugar plum sugar plum.',\n    photoURL: require('@/assets/images/portrait/small/avatar-s-3.jpg'),\n    status: 'do not disturb'\n  }, {\n    uid: 4,\n    displayName: 'Verla Morgano',\n    about: 'Chupa chups candy canes chocolate bar marshmallow liquorice muffin. Lemon drops oat cake tart liquorice tart cookie. Jelly-o cookie tootsie roll halvah.',\n    photoURL: require('@/assets/images/portrait/small/avatar-s-4.jpg'),\n    status: 'online'\n  }, {\n    uid: 5,\n    displayName: 'Margot Henschke',\n    about: 'Cake pie jelly jelly beans. Marzipan lemon drops halvah cake. Pudding cookie lemon drops icing',\n    photoURL: require('@/assets/images/portrait/small/avatar-s-5.jpg'),\n    status: 'do not disturb'\n  }, {\n    uid: 6,\n    displayName: 'Sal Piggee',\n    about: 'Toffee caramels jelly-o tart gummi bears cake I love ice cream lollipop. Sweet liquorice croissant candy danish dessert icing. Cake macaroon gingerbread toffee sweet.',\n    photoURL: require('@/assets/images/portrait/small/avatar-s-6.jpg'),\n    status: 'online'\n  }, {\n    uid: 7,\n    displayName: 'Miguel Guelff',\n    about: 'Biscuit powder oat cake donut brownie ice cream I love souffl√©. I love tootsie roll I love powder tootsie roll.',\n    photoURL: require('@/assets/images/portrait/small/avatar-s-7.jpg'),\n    status: 'online'\n  }, {\n    uid: 8,\n    displayName: 'Mauro Elenbaas',\n    about: 'Bear claw ice cream lollipop gingerbread carrot cake. Brownie gummi bears chocolate muffin croissant jelly I love marzipan wafer.',\n    photoURL: require('@/assets/images/portrait/small/avatar-s-8.jpg'),\n    status: 'away'\n  }, {\n    uid: 9,\n    displayName: 'Bridgett Omohundro',\n    about: 'Gummies gummi bears I love candy icing apple pie I love marzipan bear claw. I love tart biscuit I love candy canes pudding chupa chups liquorice croissant.',\n    photoURL: require('@/assets/images/portrait/small/avatar-s-9.jpg'),\n    status: 'offline'\n  }, {\n    uid: 10,\n    displayName: 'Zenia Jacobs',\n    about: 'Cake pie jelly jelly beans. Marzipan lemon drops halvah cake. Pudding cookie lemon drops icing',\n    photoURL: require('@/assets/images/portrait/small/avatar-s-10.jpg'),\n    status: 'away'\n  }],\n  chats: {\n    1: {\n      isPinned: true,\n      msg: [{\n        textContent: 'How can we help? We\\'re here for you!',\n        time: 'Mon Dec 10 2018 07:45:00 GMT+0000 (GMT)',\n        isSent: true,\n        isSeen: true\n      }, {\n        textContent: 'Hey John, I am looking for the best admin template. Could you please help me to find it out?',\n        time: 'Mon Dec 10 2018 07:45:23 GMT+0000 (GMT)',\n        isSent: false,\n        isSeen: true\n      }, {\n        textContent: 'It should be Bootstrap 4 compatible.',\n        time: 'Mon Dec 10 2018 07:45:55 GMT+0000 (GMT)',\n        isSent: false,\n        isSeen: true\n      }, {\n        textContent: 'Absolutely!',\n        time: 'Mon Dec 10 2018 07:46:00 GMT+0000 (GMT)',\n        isSent: true,\n        isSeen: true\n      }, {\n        textContent: 'Modern admin is the responsive bootstrap 4 admin template.!',\n        time: 'Mon Dec 10 2018 07:46:05 GMT+0000 (GMT)',\n        isSent: true,\n        isSeen: true\n      }, {\n        textContent: 'Looks clean and fresh UI.',\n        time: 'Mon Dec 10 2018 07:46:23 GMT+0000 (GMT)',\n        isSent: false,\n        isSeen: true\n      }, {\n        textContent: 'It\\'s perfect for my next project.',\n        time: 'Mon Dec 10 2018 07:46:33 GMT+0000 (GMT)',\n        isSent: false,\n        isSeen: true\n      }, {\n        textContent: 'How can I purchase it?',\n        time: 'Mon Dec 10 2018 07:46:43 GMT+0000 (GMT)',\n        isSent: false,\n        isSeen: true\n      }, {\n        textContent: 'Thanks, from ThemeForest.',\n        time: 'Mon Dec 10 2018 07:46:53 GMT+0000 (GMT)',\n        isSent: true,\n        isSeen: true\n      }, {\n        textContent: 'I will purchase it for sure. üëç',\n        time: 'Mon Dec 10 2018 07:47:00 GMT+0000 (GMT)',\n        isSent: false,\n        isSeen: false\n      }]\n    },\n    2: {\n      isPinned: false,\n      msg: [{\n        textContent: 'Hi',\n        time: 'Mon Dec 10 2018 07:45:00 GMT+0000 (GMT)',\n        isSent: true,\n        isSeen: true\n      }, {\n        textContent: 'Hello. How can I help You?',\n        time: 'Mon Dec 11 2018 07:45:15 GMT+0000 (GMT)',\n        isSent: false,\n        isSeen: true\n      }, {\n        textContent: 'Can I get details of my last transaction I made last month?',\n        time: 'Mon Dec 11 2018 07:46:10 GMT+0000 (GMT)',\n        isSent: true,\n        isSeen: true\n      }, {\n        textContent: 'We need to check if we can provide you such information.',\n        time: 'Mon Dec 11 2018 07:45:15 GMT+0000 (GMT)',\n        isSent: false,\n        isSeen: true\n      }, {\n        textContent: 'I will inform you as I get update on this.',\n        time: 'Mon Dec 11 2018 07:46:15 GMT+0000 (GMT)',\n        isSent: false,\n        isSeen: true\n      }, {\n        textContent: 'If it takes long you can mail me at my mail address.',\n        time: 'Mon Dec 11 2018 07:46:20 GMT+0000 (GMT)',\n        isSent: true,\n        isSeen: false\n      }]\n    }\n  }\n}; // Functions\n\nvar chatDataOfUser = function chatDataOfUser(id) {\n  return data.chats[Object.keys(data.chats).find(function (key) {\n    return key == id;\n  })];\n}; // GET : Contacts List\n\n\nmock.onGet('/api/apps/chat/contacts').reply(function (request) {\n  // Filter contact based on search query\n  var filteredContacts = data.contacts.filter(function (contact) {\n    return contact.displayName.toLowerCase().includes(request.params.q.toLowerCase());\n  });\n  return [200, filteredContacts];\n}); // GET : Get All Contacts\n\nmock.onGet('/api/apps/chat/contacts').reply(function () {\n  return [200, data.contacts];\n}); // GET : Get All Chats\n\nmock.onGet('/api/apps/chat/chats').reply(function () {\n  return [200, data.chats];\n}); // GET : Chats List\n\nmock.onGet('/api/apps/chat/chat-contacts').reply(function (request) {\n  var chatContactsArray = data.contacts.filter(function (contact) {\n    if (data.chats[contact.uid]) return data.chats[contact.uid] && contact.displayName.toLowerCase().includes(request.params.q.toLowerCase());\n  });\n  return [200, chatContactsArray];\n}); // POST : Mark all msgs as seen\n\nmock.onPost('/api/apps/chat/mark-all-seen/').reply(function (request) {\n  var contactId = JSON.parse(request.data).contactId; // Get chat data\n\n  var chatLog = chatDataOfUser(contactId); // console.log(chatLog);\n\n  chatDataOfUser(1) == chatLog; // Loop over all msg & mark them as seen\n\n  chatLog.msg.forEach(function (msg) {\n    msg.isSeen = true;\n  }); // Set unsen Msg flag to 0\n\n  chatLog.unseenMsg = 0; // console.log(data.chats[0] == chatDataOfUser(contactId));\n\n  return [200];\n});\nmock.onPost('/api/apps/chat/set-pinned/').reply(function (request) {\n  var _JSON$parse = JSON.parse(request.data),\n      contactId = _JSON$parse.contactId,\n      value = _JSON$parse.value;\n\n  var index = Object.keys(data.chats).find(function (key) {\n    return key == contactId;\n  });\n  data.chats[index].isPinned = value;\n  return [200, data.chats[index]];\n});\nmock.onPost('/api/apps/chat/msg').reply(function (request) {\n  var payload = JSON.parse(request.data).payload; // Get chat data\n\n  payload.chatData = chatDataOfUser(payload.id);\n\n  if (payload.chatData) {\n    // If there's already chat. Push msg to existing chat\n    data.chats[Object.keys(data.chats).find(function (key) {\n      return key == payload.id;\n    })].msg.push(payload.msg);\n  } else {\n    // Create New chat and add msg\n    data.chats[payload.id] = {\n      isPinned: payload.isPinned,\n      msg: [payload.msg]\n    };\n  }\n\n  return [200];\n});\nmock.onPost('/api/apps/chat/mark-all-seen').reply(function (request) {\n  var uid = JSON.parse(request.data).id; // Get chat data\n\n  var chatLog = chatDataOfUser(uid);\n  chatLog.msg.forEach(function (msg) {\n    msg.isSeen = true;\n  });\n  return [200];\n});",{"version":3,"sources":["/Users/gim-yeongjae/Desktop/storelink3-admin/src/fake-db/data/apps/chat/index.js"],"names":["mock","data","contacts","uid","displayName","about","photoURL","require","status","chats","isPinned","msg","textContent","time","isSent","isSeen","chatDataOfUser","id","Object","keys","find","key","onGet","reply","request","filteredContacts","filter","contact","toLowerCase","includes","params","q","chatContactsArray","onPost","contactId","JSON","parse","chatLog","forEach","unseenMsg","value","index","payload","chatData","push"],"mappings":"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","sourcesContent":["import mock from '@/fake-db/mock.js'\n\n// Contact\nconst data = {\n  contacts: [\n    {\n      uid: 1,\n      displayName: 'Felecia Rower',\n      about: 'Cake pie jelly jelly beans. Marzipan lemon drops halvah cake. Pudding cookie lemon drops icing',\n      photoURL: require('@/assets/images/portrait/small/avatar-s-1.jpg'),\n      status: 'offline'\n    },\n    {\n      uid: 2,\n      displayName: 'Adalberto Granzin',\n      about: 'Toffee caramels jelly-o tart gummi bears cake I love ice cream lollipop. Sweet liquorice croissant candy danish dessert icing. Cake macaroon gingerbread toffee sweet.',\n      photoURL: require('@/assets/images/portrait/small/avatar-s-2.jpg'),\n      status: 'do not disturb'\n    },\n    {\n      uid: 3,\n      displayName: 'Joaquina Weisenborn',\n      about: 'Souffl√© souffl√© caramels sweet roll. Jelly lollipop sesame snaps bear claw jelly beans sugar plum sugar plum.',\n      photoURL: require('@/assets/images/portrait/small/avatar-s-3.jpg'),\n      status: 'do not disturb'\n    },\n    {\n      uid: 4,\n      displayName: 'Verla Morgano',\n      about: 'Chupa chups candy canes chocolate bar marshmallow liquorice muffin. Lemon drops oat cake tart liquorice tart cookie. Jelly-o cookie tootsie roll halvah.',\n      photoURL: require('@/assets/images/portrait/small/avatar-s-4.jpg'),\n      status: 'online'\n    },\n    {\n      uid: 5,\n      displayName: 'Margot Henschke',\n      about: 'Cake pie jelly jelly beans. Marzipan lemon drops halvah cake. Pudding cookie lemon drops icing',\n      photoURL: require('@/assets/images/portrait/small/avatar-s-5.jpg'),\n      status: 'do not disturb'\n    },\n    {\n      uid: 6,\n      displayName: 'Sal Piggee',\n      about: 'Toffee caramels jelly-o tart gummi bears cake I love ice cream lollipop. Sweet liquorice croissant candy danish dessert icing. Cake macaroon gingerbread toffee sweet.',\n      photoURL: require('@/assets/images/portrait/small/avatar-s-6.jpg'),\n      status: 'online'\n    },\n    {\n      uid: 7,\n      displayName: 'Miguel Guelff',\n      about: 'Biscuit powder oat cake donut brownie ice cream I love souffl√©. I love tootsie roll I love powder tootsie roll.',\n      photoURL: require('@/assets/images/portrait/small/avatar-s-7.jpg'),\n      status: 'online'\n    },\n    {\n      uid: 8,\n      displayName: 'Mauro Elenbaas',\n      about: 'Bear claw ice cream lollipop gingerbread carrot cake. Brownie gummi bears chocolate muffin croissant jelly I love marzipan wafer.',\n      photoURL: require('@/assets/images/portrait/small/avatar-s-8.jpg'),\n      status: 'away'\n    },\n    {\n      uid: 9,\n      displayName: 'Bridgett Omohundro',\n      about: 'Gummies gummi bears I love candy icing apple pie I love marzipan bear claw. I love tart biscuit I love candy canes pudding chupa chups liquorice croissant.',\n      photoURL: require('@/assets/images/portrait/small/avatar-s-9.jpg'),\n      status: 'offline'\n    },\n    {\n      uid: 10,\n      displayName: 'Zenia Jacobs',\n      about: 'Cake pie jelly jelly beans. Marzipan lemon drops halvah cake. Pudding cookie lemon drops icing',\n      photoURL: require('@/assets/images/portrait/small/avatar-s-10.jpg'),\n      status: 'away'\n    }\n  ],\n  chats: {\n    1: {\n      isPinned: true,\n      msg: [\n        {\n          textContent: 'How can we help? We\\'re here for you!',\n          time: 'Mon Dec 10 2018 07:45:00 GMT+0000 (GMT)',\n          isSent: true,\n          isSeen: true\n        },\n        {\n          textContent: 'Hey John, I am looking for the best admin template. Could you please help me to find it out?',\n          time: 'Mon Dec 10 2018 07:45:23 GMT+0000 (GMT)',\n          isSent: false,\n          isSeen: true\n        },\n        {\n          textContent: 'It should be Bootstrap 4 compatible.',\n          time: 'Mon Dec 10 2018 07:45:55 GMT+0000 (GMT)',\n          isSent: false,\n          isSeen: true\n        },\n        {\n          textContent: 'Absolutely!',\n          time: 'Mon Dec 10 2018 07:46:00 GMT+0000 (GMT)',\n          isSent: true,\n          isSeen: true\n        },\n        {\n          textContent: 'Modern admin is the responsive bootstrap 4 admin template.!',\n          time: 'Mon Dec 10 2018 07:46:05 GMT+0000 (GMT)',\n          isSent: true,\n          isSeen: true\n        },\n        {\n          textContent: 'Looks clean and fresh UI.',\n          time: 'Mon Dec 10 2018 07:46:23 GMT+0000 (GMT)',\n          isSent: false,\n          isSeen: true\n        },\n        {\n          textContent: 'It\\'s perfect for my next project.',\n          time: 'Mon Dec 10 2018 07:46:33 GMT+0000 (GMT)',\n          isSent: false,\n          isSeen: true\n        },\n        {\n          textContent: 'How can I purchase it?',\n          time: 'Mon Dec 10 2018 07:46:43 GMT+0000 (GMT)',\n          isSent: false,\n          isSeen: true\n        },\n        {\n          textContent: 'Thanks, from ThemeForest.',\n          time: 'Mon Dec 10 2018 07:46:53 GMT+0000 (GMT)',\n          isSent: true,\n          isSeen: true\n        },\n        {\n          textContent: 'I will purchase it for sure. üëç',\n          time: 'Mon Dec 10 2018 07:47:00 GMT+0000 (GMT)',\n          isSent: false,\n          isSeen: false\n        }\n      ]\n    },\n    2: {\n      isPinned: false,\n      msg: [\n        {\n          textContent: 'Hi',\n          time: 'Mon Dec 10 2018 07:45:00 GMT+0000 (GMT)',\n          isSent: true,\n          isSeen: true\n        },\n        {\n          textContent: 'Hello. How can I help You?',\n          time: 'Mon Dec 11 2018 07:45:15 GMT+0000 (GMT)',\n          isSent: false,\n          isSeen: true\n        },\n        {\n          textContent: 'Can I get details of my last transaction I made last month?',\n          time: 'Mon Dec 11 2018 07:46:10 GMT+0000 (GMT)',\n          isSent: true,\n          isSeen: true\n        },\n        {\n          textContent: 'We need to check if we can provide you such information.',\n          time: 'Mon Dec 11 2018 07:45:15 GMT+0000 (GMT)',\n          isSent: false,\n          isSeen: true\n        },\n        {\n          textContent: 'I will inform you as I get update on this.',\n          time: 'Mon Dec 11 2018 07:46:15 GMT+0000 (GMT)',\n          isSent: false,\n          isSeen: true\n        },\n        {\n          textContent: 'If it takes long you can mail me at my mail address.',\n          time: 'Mon Dec 11 2018 07:46:20 GMT+0000 (GMT)',\n          isSent: true,\n          isSeen: false\n        }\n      ]\n    }\n  }\n}\n\n// Functions\nconst chatDataOfUser = (id) => {\n  return data.chats[Object.keys(data.chats).find(key => key == id)]\n}\n\n// GET : Contacts List\nmock.onGet('/api/apps/chat/contacts').reply((request) => {\n\n  // Filter contact based on search query\n  const filteredContacts = data.contacts.filter((contact) => {\n    return contact.displayName.toLowerCase().includes(request.params.q.toLowerCase())\n  })\n\n  return [200, filteredContacts]\n})\n\n\n// GET : Get All Contacts\nmock.onGet('/api/apps/chat/contacts').reply(() => {\n  return [200, data.contacts]\n})\n\n// GET : Get All Chats\nmock.onGet('/api/apps/chat/chats').reply(() => {\n  return [200, data.chats]\n})\n\n// GET : Chats List\nmock.onGet('/api/apps/chat/chat-contacts').reply((request) => {\n\n  const chatContactsArray = data.contacts.filter((contact) => {\n    if (data.chats[contact.uid]) return data.chats[contact.uid] && contact.displayName.toLowerCase().includes(request.params.q.toLowerCase())\n  })\n\n  return [200, chatContactsArray]\n})\n\n\n// POST : Mark all msgs as seen\nmock.onPost('/api/apps/chat/mark-all-seen/').reply((request) => {\n  const contactId = JSON.parse(request.data).contactId\n\n\n  // Get chat data\n  const chatLog = chatDataOfUser(contactId)\n\n  // console.log(chatLog);\n  chatDataOfUser(1) == chatLog\n\n  // Loop over all msg & mark them as seen\n  chatLog.msg.forEach((msg) => {\n    msg.isSeen = true\n  })\n\n  // Set unsen Msg flag to 0\n  chatLog.unseenMsg = 0\n\n  // console.log(data.chats[0] == chatDataOfUser(contactId));\n\n  return [200]\n})\n\n\nmock.onPost('/api/apps/chat/set-pinned/').reply((request) => {\n  const {contactId, value} = JSON.parse(request.data)\n  const index = Object.keys(data.chats).find(key => key == contactId)\n  data.chats[index].isPinned = value\n  return [200, data.chats[index]]\n})\n\n\nmock.onPost('/api/apps/chat/msg').reply((request) => {\n  const payload = JSON.parse(request.data).payload\n\n  // Get chat data\n  payload.chatData = chatDataOfUser(payload.id)\n\n  if (payload.chatData) {\n    // If there's already chat. Push msg to existing chat\n    data.chats[Object.keys(data.chats).find(key => key == payload.id)].msg.push(payload.msg)\n  } else {\n    // Create New chat and add msg\n    data.chats[payload.id] = {isPinned: payload.isPinned,\n      msg: [payload.msg]}\n  }\n\n  return [200]\n})\n\n\nmock.onPost('/api/apps/chat/mark-all-seen').reply((request) => {\n  const uid = JSON.parse(request.data).id\n\n  // Get chat data\n  const chatLog = chatDataOfUser(uid)\n\n  chatLog.msg.forEach((msg) => {\n    msg.isSeen = true\n  })\n\n  return [200]\n})\n"]}]}