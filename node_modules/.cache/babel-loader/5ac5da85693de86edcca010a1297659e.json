{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/babel-loader/lib/index.js!/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink3-admin/src/components/statistics-cards/StatisticsCardLine.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/src/components/statistics-cards/StatisticsCardLine.vue","mtime":1610509510803},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/babel-loader/lib/index.js","mtime":1610344922456},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.fill\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VueApexCharts from 'vue-apexcharts';\nimport chartConfigs from \"./chartConfigs.js\";\nimport _color from '@/assets/utils/color.js';\nexport default {\n  props: {\n    icon: {\n      type: String,\n      required: true\n    },\n    statistic: {\n      type: [Number, String],\n      required: true\n    },\n    statisticTitle: {\n      type: String\n    },\n    chartData: {// type: Array,\n      // required: true\n    },\n    color: {\n      type: String,\n      default: 'primary'\n    },\n    colorTo: {\n      type: String\n    },\n    // chartType: {\n    //     type: String,\n    //     default: 'line-chart',\n    // },\n    type: {\n      type: String,\n      default: 'line'\n    },\n    iconRight: {\n      type: Boolean,\n      default: false\n    },\n    hideChart: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      chartOptions: null\n    };\n  },\n  watch: {\n    themePrimaryColor: function themePrimaryColor() {\n      this.$refs.apexChart.updateOptions({\n        theme: {\n          monochrome: {\n            color: this.getHex(this.color)\n          }\n        }\n      });\n    }\n  },\n  computed: {\n    themePrimaryColor: function themePrimaryColor() {\n      return this.$store.state.themePrimaryColor;\n    }\n  },\n  methods: {\n    getHex: function getHex(color) {\n      if (_color.isColor(color)) {\n        var rgb = window.getComputedStyle(document.documentElement).getPropertyValue(\"--vs-\".concat(color));\n        rgb = rgb.split(',');\n        return \"#\".concat(((1 << 24) + (Number(rgb[0]) << 16) + (Number(rgb[1]) << 8) + Number(rgb[2])).toString(16).slice(1));\n      }\n\n      return color;\n    },\n    gradientToColor: function gradientToColor(color) {\n      var gradientToColors = {\n        'primary': '#A9A2F6',\n        'success': '#55DD92',\n        'warning': '#ffc085',\n        'danger': '#F97794'\n      };\n      return gradientToColors[color] ? gradientToColors[color] : gradientToColors['primary'];\n    }\n  },\n  components: {\n    VueApexCharts: VueApexCharts\n  },\n  created: function created() {\n    if (this.type === 'area') {\n      // assign chart options\n      this.chartOptions = Object.assign({}, chartConfigs.areaChartOptions);\n      this.chartOptions['theme'] = {\n        monochrome: {\n          enabled: true,\n          color: this.getHex(this.color),\n          shadeTo: 'light',\n          shadeIntensity: 0.65\n        }\n      };\n    } else if (this.type === 'line') {\n      // Assign chart options\n      this.chartOptions = JSON.parse(JSON.stringify(chartConfigs.lineChartOptions));\n      this.chartOptions.fill.gradient.gradientToColors = [this.gradientToColor(this.colorTo || this.color)];\n      this.chartOptions.colors = [this.getHex(this.color)];\n    }\n  }\n};",{"version":3,"sources":["StatisticsCardLine.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- =========================================================================================\n    File Name: StatisticsCard.vue\n    Description: Statistics card component\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n<template>\n    <vx-card class=\"overflow-hidden\">\n        <div slot=\"no-body\">\n            <div class=\"p-6\" :class=\"{\n              'flex justify-between flex-row-reverse items-center': iconRight,\n              'text-center': !iconRight && hideChart,\n              'pb-0': !hideChart\n            }\">\n                <feather-icon :icon=\"icon\" class=\"p-3 inline-flex rounded-full\" :class=\"[`text-${color}`, {'mb-4': !iconRight}]\" :style=\"{background: `rgba(var(--vs-${color}),.15)`}\"></feather-icon>\n                <div class=\"truncate\">\n                    <h2 class=\"mb-1 font-bold\">{{ statistic }}</h2>\n                    <span>{{ statisticTitle }}</span>\n                </div>\n            </div>\n\n            <div class=\"line-area-chart\" v-if=\"!hideChart\">\n                <vue-apex-charts ref=\"apexChart\" :type=\"type\" height=\"100\" width=\"100%\" :options=\"chartOptions\" :series=\"chartData\" />\n            </div>\n        </div>\n    </vx-card>\n</template>\n\n<script>\nimport VueApexCharts from 'vue-apexcharts'\nimport chartConfigs from './chartConfigs.js'\nimport _color from '@/assets/utils/color.js'\n\nexport default{\n  props: {\n    icon: {\n      type: String,\n      required: true\n    },\n    statistic: {\n      type: [Number, String],\n      required: true\n    },\n    statisticTitle: {\n      type: String\n    },\n    chartData: {\n      // type: Array,\n      // required: true\n    },\n    color: {\n      type: String,\n      default: 'primary'\n    },\n    colorTo: {\n      type: String\n    },\n    // chartType: {\n    //     type: String,\n    //     default: 'line-chart',\n    // },\n    type: {\n      type: String,\n      default: 'line'\n    },\n    iconRight: {\n      type: Boolean,\n      default: false\n    },\n    hideChart: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    return {\n      chartOptions: null\n    }\n  },\n  watch: {\n    themePrimaryColor () {\n      this.$refs.apexChart.updateOptions({ theme: { monochrome: { color: this.getHex(this.color) } } })\n    }\n  },\n  computed: {\n    themePrimaryColor () {\n      return this.$store.state.themePrimaryColor\n    }\n  },\n  methods: {\n    getHex (color) {\n      if (_color.isColor(color)) {\n        let rgb  = window.getComputedStyle(document.documentElement).getPropertyValue(`--vs-${color}`)\n        rgb = rgb.split(',')\n        return `#${  ((1 << 24) + (Number(rgb[0]) << 16) + (Number(rgb[1]) << 8) + Number(rgb[2])).toString(16).slice(1)}`\n      }\n      return color\n    },\n    gradientToColor (color) {\n      const gradientToColors = {\n        'primary': '#A9A2F6',\n        'success': '#55DD92',\n        'warning': '#ffc085',\n        'danger': '#F97794'\n      }\n\n      return gradientToColors[color] ? gradientToColors[color] : gradientToColors['primary']\n    }\n  },\n  components: {\n    VueApexCharts\n  },\n  created () {\n    if (this.type === 'area') {\n      // assign chart options\n      this.chartOptions = Object.assign({}, chartConfigs.areaChartOptions)\n\n      this.chartOptions['theme'] = {\n        monochrome: {\n          enabled: true,\n          color: this.getHex(this.color),\n          shadeTo: 'light',\n          shadeIntensity: 0.65\n        }\n      }\n    } else if (this.type === 'line') {\n      // Assign chart options\n      this.chartOptions = JSON.parse(JSON.stringify(chartConfigs.lineChartOptions))\n\n      this.chartOptions.fill.gradient.gradientToColors = [this.gradientToColor(this.colorTo || this.color)]\n      this.chartOptions.colors = [this.getHex(this.color)]\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components/statistics-cards"}]}