{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/thread-loader/dist/cjs.js!/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/babel-loader/lib/index.js!/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/apps/email/Email.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/apps/email/Email.vue","mtime":1610509510822},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/thread-loader/dist/cjs.js","mtime":1610344922450},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/babel-loader/lib/index.js","mtime":1610344922456},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport EmailSidebar from \"./EmailSidebar.vue\";\nimport MailItem from \"./MailItem.vue\";\nimport EmailView from \"./EmailView.vue\";\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\nimport moduleEmail from '@/store/email/moduleEmail.js';\nexport default {\n  data: function data() {\n    return {\n      openMailId: null,\n      selectedMails: [],\n      isSidebarActive: false,\n      showThread: false,\n      clickNotClose: true,\n      isEmailSidebarActive: true,\n      settings: {\n        maxScrollbarLength: 60,\n        wheelSpeed: 0.30\n      }\n    };\n  },\n  watch: {\n    isSidebarActive: function isSidebarActive(value) {\n      if (!value) this.showThread = false;\n    },\n    mailFilter: function mailFilter() {\n      this.selectedMails = [];\n      var scroll_el = this.$refs.mailListPS.$el || this.$refs.mailListPS;\n      scroll_el.scrollTop = 0;\n      this.$store.commit('email/UPDATE_MAIL_FILTER', this.$route.params.filter);\n      this.$store.dispatch('email/fetchEmails', {\n        filter: this.$route.params.filter\n      });\n      this.toggleEmailSidebar();\n    },\n    windowWidth: function windowWidth() {\n      this.setSidebarWidth();\n    }\n  },\n  computed: {\n    mailFilter: function mailFilter() {\n      return this.$route.params.filter;\n    },\n    emailTags: function emailTags() {\n      return this.$store.state.email.mailTags;\n    },\n    searchQuery: {\n      get: function get() {\n        return this.$store.state.email.mailSearchQuery;\n      },\n      set: function set(val) {\n        this.$store.dispatch('email/setEmailSearchQuery', val);\n      }\n    },\n    selectAllCheckBox: {\n      get: function get() {\n        return this.selectedMails.length;\n      },\n      set: function set(value) {\n        value ? this.selectedMails = this.mails.map(function (mail) {\n          return mail.id;\n        }) : this.selectedMails = [];\n      }\n    },\n    mails: function mails() {\n      return this.$store.getters['email/filteredMails'];\n    },\n    selectAllIcon: function selectAllIcon() {\n      return this.selectedMails.length === this.mails.length ? 'icon-check' : 'icon-minus';\n    },\n    scrollbarTag: function scrollbarTag() {\n      return this.$store.getters.scrollbarTag;\n    },\n    isMailSelected: function isMailSelected() {\n      var _this = this;\n\n      return function (mailId) {\n        return _this.selectedMails.indexOf(mailId) !== -1;\n      };\n    },\n    windowWidth: function windowWidth() {\n      return this.$store.state.windowWidth;\n    }\n  },\n  methods: {\n    updateOpenMail: function updateOpenMail(mailId) {\n      this.openMailId = mailId;\n      this.isSidebarActive = true;\n    },\n    addToSelectedMails: function addToSelectedMails(mailId) {\n      if (this.selectedMails.indexOf(mailId) === -1) this.selectedMails.push(mailId);\n    },\n    removeSelectedMail: function removeSelectedMail(mailId) {\n      var mailIndex = this.selectedMails.indexOf(mailId);\n      if (mailIndex !== -1) this.selectedMails.splice(mailIndex, 1);\n    },\n    moveTo: function moveTo(to) {\n      var payload = {\n        emailIds: this.selectedMails,\n        to: to\n      };\n      this.$store.dispatch('email/moveMailsTo', payload).catch(function (error) {\n        console.error(error);\n      });\n      this.selectedMails = [];\n    },\n    moveCurrentTo: function moveCurrentTo(to) {\n      this.selectedMails = [this.openMailId];\n      this.moveTo(to);\n    },\n    updateMarkUnread: function updateMarkUnread() {\n      var payload = {\n        emailIds: this.selectedMails,\n        unreadFlag: true\n      };\n      this.$store.dispatch('email/setUnread', payload);\n      this.selectedMails = [];\n    },\n    removeOpenMail: function removeOpenMail() {\n      this.selectedMails = [this.openMailId];\n      this.moveTo('trashed');\n      this.isSidebarActive = false;\n    },\n    toggleIsStarred: function toggleIsStarred() {\n      var payload = {\n        mailId: this.currentMail.id,\n        value: !this.currentMail.isStarred\n      };\n      this.$store.dispatch('email/toggleIsMailStarred', payload);\n    },\n    nextMail: function nextMail() {\n      var _this2 = this;\n\n      var currentMailIndex = this.mails.findIndex(function (mail) {\n        return mail.id === _this2.openMailId;\n      });\n      if (this.mails[currentMailIndex + 1]) this.openMailId = this.mails[currentMailIndex + 1].id;\n    },\n    previousMail: function previousMail() {\n      var _this3 = this;\n\n      var currentMailIndex = this.mails.findIndex(function (mail) {\n        return mail.id === _this3.openMailId;\n      });\n      if (this.mails[currentMailIndex - 1]) this.openMailId = this.mails[currentMailIndex - 1].id;\n    },\n    updateSingleMarkUnread: function updateSingleMarkUnread() {\n      this.selectedMails = [this.openMailId];\n      this.updateMarkUnread();\n      this.isSidebarActive = false;\n    },\n    updateLabels: function updateLabels(label) {\n      this.$store.dispatch('email/updateLabels', {\n        mails: this.selectedMails,\n        label: label\n      });\n      this.selectedMails = [];\n    },\n    closeMailViewSidebar: function closeMailViewSidebar() {\n      this.isSidebarActive = false;\n    },\n    setSidebarWidth: function setSidebarWidth() {\n      if (this.windowWidth < 992) {\n        this.isEmailSidebarActive = this.clickNotClose = false;\n      } else {\n        this.isEmailSidebarActive = this.clickNotClose = true;\n      }\n    },\n    toggleEmailSidebar: function toggleEmailSidebar() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (!value) {\n        this.closeMailViewSidebar();\n\n        if (this.clickNotClose) {\n          return;\n        }\n      }\n\n      this.isEmailSidebarActive = value;\n    }\n  },\n  components: {\n    MailItem: MailItem,\n    EmailSidebar: EmailSidebar,\n    EmailView: EmailView,\n    VuePerfectScrollbar: VuePerfectScrollbar\n  },\n  created: function created() {\n    this.$store.registerModule('email', moduleEmail);\n    this.setSidebarWidth();\n    this.$store.commit('email/UPDATE_MAIL_FILTER', this.$route.params.filter); // Update Mail Filter\n\n    this.$store.dispatch('email/fetchEmails', {\n      filter: this.$route.params.filter\n    }); // Fetch Emails From API\n\n    this.$store.dispatch('email/fetchMeta'); // Fetch Unread Mails\n\n    this.$store.dispatch('email/fetchTags'); // Fetch Mail Tags\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$store.unregisterModule('email');\n  },\n  mounted: function mounted() {\n    this.$store.dispatch('email/setEmailSearchQuery', '');\n  }\n};",{"version":3,"sources":["Email.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- =========================================================================================\n    File Name: Email.vue\n    Description: Email Application (Inbox)\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n    <div id=\"email-app\" class=\"border border-solid d-theme-border-grey-light rounded relative overflow-hidden\">\n\n        <vs-sidebar class=\"items-no-padding\" parent=\"#email-app\" :click-not-close=\"clickNotClose\" :hidden-background=\"clickNotClose\" v-model=\"isEmailSidebarActive\">\n            <email-sidebar :emailTags=\"emailTags\" @closeSidebar=\"toggleEmailSidebar\" :mailFilter=\"mailFilter\" />\n        </vs-sidebar>\n\n        <div :class=\"{'sidebar-spacer': clickNotClose}\" class=\"no-scroll-content border border-solid d-theme-border-grey-light border-r-0 border-t-0 border-b-0\">\n\n            <!-- SEARCH BAR -->\n            <div class=\"flex border d-theme-dark-bg items-center\">\n                <feather-icon class=\"md:inline-flex lg:hidden ml-4 mr-4 cursor-pointer\" icon=\"MenuIcon\" @click.stop=\"toggleEmailSidebar(true)\"/>\n                <vs-input icon-no-border icon=\"icon-search\" size=\"large\" icon-pack=\"feather\" placeholder=\"Search Mail\" v-model=\"searchQuery\" class=\"vs-input-no-border vs-input-no-shdow-focus w-full\" />\n            </div>\n\n            <!-- EMAIL ACTION BAR -->\n            <div class=\"email__actions flex items-center flex-wrap justify-between p-4 border border-r-0 border-l-0 border-solid d-theme-border-grey-light\">\n                <div class=\"flex items-center\">\n                    <vs-checkbox v-model=\"selectAllCheckBox\" icon-pack=\"feather\" :icon=\"selectAllIcon\" class=\"select-all-chexkbox ml-0\">Select All</vs-checkbox>\n                </div>\n                <div class=\"flex\">\n\n                    <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\" v-if=\"mailFilter != 'sent'\">\n\n                        <feather-icon icon=\"FolderIcon\" class=\"cursor-pointer\" svg-classes=\"h-6 w-6\"></feather-icon>\n\n                        <vs-dropdown-menu>\n                            <vs-dropdown-item @click=\"moveTo('inbox')\" v-if=\"mailFilter != 'inbox'\">\n                              <span class=\"flex items-center\">\n                                <feather-icon icon=\"MailIcon\" svgClasses=\"h-4 w-4\" class=\"mr-2\" />\n                                <span>Inbox</span>\n                              </span>\n                            </vs-dropdown-item>\n\n                            <vs-dropdown-item @click=\"moveTo('draft')\" v-if=\"mailFilter != 'draft'\">\n                              <span class=\"flex items-center\">\n                                <feather-icon icon=\"Edit2Icon\" svgClasses=\"h-4 w-4\" class=\"mr-2\" />\n                                <span>Draft</span>\n                              </span>\n                            </vs-dropdown-item>\n\n                            <vs-dropdown-item @click=\"moveTo('spam')\" v-if=\"mailFilter != 'spam'\">\n                              <span class=\"flex items-center\">\n                                <feather-icon icon=\"InfoIcon\" svgClasses=\"h-4 w-4\" class=\"mr-2\" />\n                                <span>Spam</span>\n                              </span>\n                            </vs-dropdown-item>\n\n                            <vs-dropdown-item @click=\"moveTo('trash')\" v-if=\"mailFilter != 'trash'\">\n                              <span class=\"flex items-center\">\n                                <feather-icon icon=\"TrashIcon\" svgClasses=\"h-4 w-4\" class=\"mr-2\" />\n                                <span>Trash</span>\n                              </span>\n                            </vs-dropdown-item>\n                        </vs-dropdown-menu>\n                    </vs-dropdown>\n\n                    <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\">\n\n                        <feather-icon icon=\"TagIcon\" class=\"cursor-pointer ml-5\" svg-classes=\"h-6 w-6\"></feather-icon>\n\n                        <vs-dropdown-menu >\n                          <vs-dropdown-item v-for=\"(label, index) in emailTags\" :key=\"index\" @click=\"updateLabels(label.value)\" class=\"whitespace-no-wrap\">\n                            <div class=\"h-3 w-3 inline-block rounded-full mr-3\" :class=\"'bg-' + label.color\"></div>\n                            <span>{{ label.text }}</span>\n                          </vs-dropdown-item>\n                        </vs-dropdown-menu>\n                    </vs-dropdown>\n\n                    <feather-icon icon=\"MailIcon\" class=\"ml-5 cursor-pointer\" svg-classes=\"h-6 w-6\" @click=\"updateMarkUnread\" />\n\n                    <feather-icon v-if=\"mailFilter != 'trash'\" icon=\"TrashIcon\" class=\"cursor-pointer ml-5\" svg-classes=\"h-6 w-6\" @click=\"moveTo('trash')\" />\n                </div>\n            </div>\n\n            <!-- EMAILS LIST -->\n            <component :is=\"scrollbarTag\" class=\"email-content-scroll-area\" :settings=\"settings\" ref=\"mailListPS\" :key=\"$vs.rtl\">\n                <transition-group name=\"list-enter-up\" class=\"email__mails\" tag=\"ul\" appear>\n                    <li class=\"cursor-pointer email__mail-item\" v-for=\"(mail, index) in mails\" :key=\"String(mailFilter) + String(mail.id)\" @click=\"updateOpenMail(mail.id)\" :style=\"{transitionDelay: (index * 0.1) + 's'}\">\n                        <mail-item :mail=\"mail\" :isSelected=\"isMailSelected(mail.id)\" @addToSelected=\"addToSelectedMails\" @removeSelected=\"removeSelectedMail\" />\n                    </li>\n                </transition-group>\n            </component>\n        </div>\n\n        <!-- EMAIL VIEW SIDEBAR -->\n        <email-view\n            :emailTags       = \"emailTags\"\n            :openMailId      = \"openMailId\"\n            :isSidebarActive = \"isSidebarActive\"\n            :mailFilter      = \"mailFilter\"\n            @markUnread      = \"updateSingleMarkUnread\"\n            @removeMail      = \"removeOpenMail\"\n            @previousMail    = \"previousMail\"\n            @nextMail        = \"nextMail\"\n            @moveTo          = \"moveCurrentTo\"\n            @closeSidebar    = \"closeMailViewSidebar\">\n        </email-view>\n    </div>\n</template>\n\n<script>\nimport EmailSidebar        from './EmailSidebar.vue'\nimport MailItem            from './MailItem.vue'\nimport EmailView           from './EmailView.vue'\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\nimport moduleEmail         from '@/store/email/moduleEmail.js'\n\nexport default {\n  data () {\n    return {\n      openMailId           : null,\n      selectedMails        : [],\n      isSidebarActive      : false,\n      showThread           : false,\n      clickNotClose        : true,\n      isEmailSidebarActive : true,\n      settings             : {\n        maxScrollbarLength : 60,\n        wheelSpeed         : 0.30\n      }\n    }\n  },\n  watch: {\n    isSidebarActive (value) {\n      if (!value) this.showThread = false\n    },\n    mailFilter () {\n      this.selectedMails = []\n\n      const scroll_el = this.$refs.mailListPS.$el || this.$refs.mailListPS\n      scroll_el.scrollTop = 0\n\n      this.$store.commit('email/UPDATE_MAIL_FILTER', this.$route.params.filter)\n      this.$store.dispatch('email/fetchEmails', { filter: this.$route.params.filter })\n      this.toggleEmailSidebar()\n    },\n    windowWidth () {\n      this.setSidebarWidth()\n    }\n  },\n  computed: {\n    mailFilter () {\n      return this.$route.params.filter\n    },\n    emailTags () {\n      return this.$store.state.email.mailTags\n    },\n    searchQuery: {\n      get () {\n        return this.$store.state.email.mailSearchQuery\n      },\n      set (val) {\n        this.$store.dispatch('email/setEmailSearchQuery', val)\n      }\n    },\n    selectAllCheckBox: {\n      get () {\n        return this.selectedMails.length\n      },\n      set (value) {\n        value ? this.selectedMails = this.mails.map(mail => mail.id) : this.selectedMails = []\n      }\n    },\n    mails () {\n      return this.$store.getters['email/filteredMails']\n    },\n    selectAllIcon () {\n      return this.selectedMails.length === this.mails.length ? 'icon-check' : 'icon-minus'\n    },\n    scrollbarTag () { return this.$store.getters.scrollbarTag },\n    isMailSelected () {\n      return (mailId) => this.selectedMails.indexOf(mailId) !== -1\n    },\n    windowWidth () {\n      return this.$store.state.windowWidth\n    }\n  },\n  methods: {\n    updateOpenMail (mailId) {\n      this.openMailId = mailId\n      this.isSidebarActive = true\n    },\n    addToSelectedMails (mailId) {\n      if (this.selectedMails.indexOf(mailId) === -1) this.selectedMails.push(mailId)\n    },\n    removeSelectedMail (mailId) {\n      const mailIndex = this.selectedMails.indexOf(mailId)\n      if (mailIndex !== -1) this.selectedMails.splice(mailIndex, 1)\n    },\n    moveTo (to) {\n      const payload = { emailIds: this.selectedMails, to }\n      this.$store.dispatch('email/moveMailsTo', payload)\n        .catch((error) => { console.error(error) })\n      this.selectedMails = []\n    },\n    moveCurrentTo (to) {\n      this.selectedMails = [this.openMailId]\n      this.moveTo(to)\n    },\n    updateMarkUnread () {\n      const payload = { emailIds: this.selectedMails, unreadFlag: true }\n      this.$store.dispatch('email/setUnread', payload)\n      this.selectedMails = []\n    },\n    removeOpenMail () {\n      this.selectedMails = [this.openMailId]\n      this.moveTo('trashed')\n      this.isSidebarActive = false\n    },\n    toggleIsStarred () {\n      const payload = { mailId: this.currentMail.id, value: !this.currentMail.isStarred }\n      this.$store.dispatch('email/toggleIsMailStarred', payload)\n    },\n    nextMail () {\n      const currentMailIndex = this.mails.findIndex((mail) => mail.id === this.openMailId)\n      if (this.mails[currentMailIndex + 1]) this.openMailId = this.mails[currentMailIndex + 1].id\n    },\n    previousMail () {\n      const currentMailIndex = this.mails.findIndex((mail) => mail.id === this.openMailId)\n      if (this.mails[currentMailIndex - 1]) this.openMailId = this.mails[currentMailIndex - 1].id\n    },\n    updateSingleMarkUnread () {\n      this.selectedMails = [this.openMailId]\n      this.updateMarkUnread()\n      this.isSidebarActive = false\n    },\n    updateLabels (label) {\n      this.$store.dispatch('email/updateLabels', { mails: this.selectedMails, label })\n      this.selectedMails = []\n    },\n    closeMailViewSidebar () {\n      this.isSidebarActive = false\n    },\n    setSidebarWidth () {\n      if (this.windowWidth < 992) {\n        this.isEmailSidebarActive = this.clickNotClose = false\n      } else {\n        this.isEmailSidebarActive = this.clickNotClose = true\n      }\n    },\n    toggleEmailSidebar (value = false) {\n      if (!value) {\n        this.closeMailViewSidebar()\n        if (this.clickNotClose) {\n          return\n        }\n      }\n      this.isEmailSidebarActive = value\n    }\n  },\n  components: {\n    MailItem,\n    EmailSidebar,\n    EmailView,\n    VuePerfectScrollbar\n  },\n  created () {\n    this.$store.registerModule('email', moduleEmail)\n    this.setSidebarWidth()\n\n    this.$store.commit('email/UPDATE_MAIL_FILTER', this.$route.params.filter)        // Update Mail Filter\n    this.$store.dispatch('email/fetchEmails', { filter: this.$route.params.filter }) // Fetch Emails From API\n    this.$store.dispatch('email/fetchMeta')                                          // Fetch Unread Mails\n    this.$store.dispatch('email/fetchTags')                                          // Fetch Mail Tags\n  },\n  beforeDestroy () {\n    this.$store.unregisterModule('email')\n  },\n  mounted () {\n    this.$store.dispatch('email/setEmailSearchQuery', '')\n  }\n}\n\n</script>\n\n\n<style lang=\"scss\">\n@import \"@/assets/scss/vuexy/apps/email.scss\";\n</style>\n"],"sourceRoot":"src/views/apps/email"}]}