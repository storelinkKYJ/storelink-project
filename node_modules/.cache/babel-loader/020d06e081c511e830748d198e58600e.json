{"remainingRequest":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/thread-loader/dist/cjs.js!/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/babel-loader/lib/index.js!/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/forms/form-validation/FormValidationEvents.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/src/views/forms/form-validation/FormValidationEvents.vue","mtime":1610509510876},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/thread-loader/dist/cjs.js","mtime":1610344922450},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/babel-loader/lib/index.js","mtime":1610344922456},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/cache-loader/dist/cjs.js","mtime":1610346344693},{"path":"/Users/gim-yeongjae/Desktop/storelink3-admin/node_modules/vue-loader/lib/index.js","mtime":1610344923547}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      first_name: '',\n      last_name: ''\n    };\n  },\n  methods: {\n    submitForm: function submitForm() {\n      this.$validator.validateAll().then(function (result) {\n        if (result) {\n          // if form have no errors\n          alert('form submitted!');\n        } else {// form have errors\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["FormValidationEvents.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,EADA;AAEA,MAAA,SAAA,EAAA;AAFA,KAAA;AAIA,GANA;AAOA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,WAAA,UAAA,CAAA,WAAA,GAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA,YAAA,MAAA,EAAA;AACA;AACA,UAAA,KAAA,CAAA,iBAAA,CAAA;AACA,SAHA,MAGA,CACA;AACA;AACA,OAPA;AAQA;AAVA;AAPA,CAAA","sourcesContent":["<!-- =========================================================================================\n    File Name: FormValidationEvents.vue\n    Description: Form validation on different events\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuexy - Vuejs, HTML & Laravel Admin Dashboard Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n    <vx-card title=\"Change default event for form validation\" code-toggler>\n\n        <p>You can change default event when validation triggers using <code>data-vv-validate-on</code></p>\n        <div class=\"mt-5\">\n            <form>\n                <vs-input v-validate=\"'required|alpha'\" placeholder=\"First Name\" name=\"first_name\" v-model=\"first_name\" class=\"mt-5\" data-vv-validate-on=\"blur\" />\n                <span class=\"text-danger text-sm\" v-show=\"errors.has('first_name')\">{{ errors.first('first_name') }}</span>\n\n                <vs-input v-validate=\"'required|alpha'\" placeholder=\"Last Name\" name=\"last_name\" v-model=\"last_name\" class=\"mt-5\" data-vv-validate-on=\"blur\" />\n                <span class=\"text-danger text-sm\" v-show=\"errors.has('last_name')\">{{ errors.first('last_name') }}</span>\n\n                <vs-button type=\"filled\" @click.prevent=\"submitForm\" class=\"mt-5 block\">Submit</vs-button>\n            </form>\n        </div>\n\n        <template slot=\"codeContainer\">\n&lt;template&gt;\n  &lt;form&gt;\n    &lt;vs-input size=&quot;large&quot; v-validate=&quot;'required|alpha'&quot; placeholder=&quot;First Name&quot; name=&quot;first_name&quot; v-model=&quot;first_name&quot; class=&quot;mt-5&quot; data-vv-validate-on=&quot;blur&quot; /&gt;\n    &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('first_name')&quot;&gt;{{ \"\\{\\{ errors.first('first_name') \\}\\}\" }}&lt;/span&gt;\n\n    &lt;vs-input size=&quot;large&quot; v-validate=&quot;'required|alpha'&quot; placeholder=&quot;Last Name&quot; name=&quot;last_name&quot; v-model=&quot;last_name&quot; class=&quot;mt-5&quot; data-vv-validate-on=&quot;blur&quot; /&gt;\n    &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('last_name')&quot;&gt;{{ \"\\{\\{ errors.first('last_name') \\}\\}\" }}&lt;/span&gt;\n\n    &lt;vs-button type=&quot;filled&quot; @click.prevent=&quot;submitForm&quot; class=&quot;mt-5 block&quot;&gt;Submit&lt;/vs-button&gt;\n  &lt;/form&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data() {\n    return {\n      first_name: &quot;&quot;,\n      last_name: &quot;&quot;,\n    }\n  },\n  methods: {\n    submitForm() {\n      this.$validator.validateAll().then(result =&gt; {\n        if(result) {\n          // if form have no errors\n          alert(&quot;form submitted!&quot;);\n        }else{\n          // form have errors\n        }\n      })\n    }\n  },\n}\n&lt;/script&gt;\n        </template>\n    </vx-card>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      first_name: '',\n      last_name: ''\n    }\n  },\n  methods: {\n    submitForm () {\n      this.$validator.validateAll().then(result => {\n        if (result) {\n          // if form have no errors\n          alert('form submitted!')\n        } else {\n          // form have errors\n        }\n      })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/forms/form-validation"}]}